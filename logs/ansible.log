2020-04-20 08:18:23,164 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 08:18:24,460 p=1 u=root |  TASK [Gathering Facts] ***********************************************************************************************************************************************************************************************
2020-04-20 08:18:24,462 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 08:18:24,475 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 08:18:27,835 p=1 u=root |  TASK [Gathering Facts] ***********************************************************************************************************************************************************************************************
2020-04-20 08:18:27,838 p=1 u=root |  ok: [1.1.1.132]
2020-04-20 08:18:27,861 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 08:18:28,782 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-20 08:18:28,783 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-20 08:18:29,358 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-20 08:18:29,848 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-20 08:18:38,005 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-20 08:18:38,008 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/node_init.sh)
2020-04-20 08:18:55,593 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-20 08:18:55,595 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/docker_init.sh)
2020-04-20 08:19:00,522 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-20 08:19:00,523 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/node_clean.sh)
2020-04-20 08:19:01,286 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-20 08:19:01,288 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-20 08:19:01,308 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 08:19:01,336 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 08:19:01,362 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 08:19:01,669 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-20 08:19:01,670 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 08:19:01,965 p=1 u=root |  TASK [certs : 创建certs工作目录，如果存在则跳过] ***********************************************************************************************************************************************************************************
2020-04-20 08:19:01,967 p=1 u=root |  changed: [127.0.0.1]
2020-04-20 08:19:02,533 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-20 08:19:02,534 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=1.1.1.132 )
2020-04-20 08:19:02,555 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 08:19:02,846 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-20 08:19:02,847 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 08:19:03,194 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-20 08:19:03,196 p=1 u=root |  changed: [127.0.0.1]
2020-04-20 08:19:04,490 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-20 08:19:04,491 p=1 u=root |  changed: [127.0.0.1]
2020-04-20 08:19:07,622 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-20 08:19:07,632 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=true 
  cmd: cd /etc/ansible/cluster/local/rke; /etc/ansible/bin/rke_v1.1.0 up --config cluster.yml
  delta: '0:00:02.742733'
  end: '2020-04-20 08:19:07.606627'
  msg: non-zero return code
  rc: 1
  start: '2020-04-20 08:19:04.863894'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    time="2020-04-20T08:19:05Z" level=info msg="Running RKE version: v1.1.0"
    time="2020-04-20T08:19:05Z" level=info msg="Initiating Kubernetes cluster"
    time="2020-04-20T08:19:05Z" level=info msg="[dialer] Setup tunnel for host [1.1.1.132]"
    time="2020-04-20T08:19:05Z" level=warning msg="Failed to set up SSH tunneling for host [1.1.1.132]: Can't establish dialer connection: Error while reading SSH key file: open /etc/ansible/cluster/local/ssh-key/ssh_rsa_key: no such file or directory"
    time="2020-04-20T08:19:05Z" level=warning msg="Removing host [1.1.1.132] from node lists"
    time="2020-04-20T08:19:05Z" level=warning msg="[state] can't fetch legacy cluster state from Kubernetes: Cluster must have at least one etcd plane host: failed to connect to the following etcd host(s) [1.1.1.132]"
    time="2020-04-20T08:19:05Z" level=info msg="[certificates] Generating CA kubernetes certificates"
    time="2020-04-20T08:19:05Z" level=info msg="[certificates] Generating Kubernetes API server aggregation layer requestheader client CA certificates"
    time="2020-04-20T08:19:05Z" level=info msg="[certificates] GenerateServingCertificate is disabled, checking if there are unused kubelet certificates"
    time="2020-04-20T08:19:05Z" level=info msg="[certificates] Generating Kubernetes API server certificates"
    time="2020-04-20T08:19:06Z" level=info msg="[certificates] Generating Service account token key"
    time="2020-04-20T08:19:06Z" level=info msg="[certificates] Generating Kube Controller certificates"
    time="2020-04-20T08:19:06Z" level=info msg="[certificates] Generating Kube Scheduler certificates"
    time="2020-04-20T08:19:06Z" level=info msg="[certificates] Generating Kube Proxy certificates"
    time="2020-04-20T08:19:06Z" level=info msg="[certificates] Generating Node certificate"
    time="2020-04-20T08:19:06Z" level=info msg="[certificates] Generating admin certificates and kubeconfig"
    time="2020-04-20T08:19:07Z" level=info msg="[certificates] Generating Kubernetes API server proxy client certificates"
    time="2020-04-20T08:19:07Z" level=info msg="Successfully Deployed state file at [./cluster.rkestate]"
    time="2020-04-20T08:19:07Z" level=info msg="Building Kubernetes cluster"
    time="2020-04-20T08:19:07Z" level=fatal msg="Cluster must have at least one etcd plane host: please specify one or more etcd in cluster config"
  stdout_lines: <omitted>
2020-04-20 08:19:07,634 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-20 08:19:07,635 p=1 u=root |  1.1.1.132                  : ok=6    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-20 08:19:07,635 p=1 u=root |  127.0.0.1                  : ok=7    changed=4    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2020-04-20 08:36:22,362 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 08:36:22,389 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 08:36:22,420 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 08:36:23,583 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-20 08:36:23,585 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-20 08:36:24,124 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-20 08:36:24,564 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-20 08:36:26,526 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-20 08:36:26,528 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/node_init.sh)
2020-04-20 08:36:27,249 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-20 08:36:27,250 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/docker_init.sh)
2020-04-20 08:36:30,097 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-20 08:36:30,099 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/node_clean.sh)
2020-04-20 08:36:30,712 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-20 08:36:30,713 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-20 08:36:30,729 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 08:36:31,028 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-20 08:36:31,029 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 08:36:31,327 p=1 u=root |  TASK [ssh-key : 创建ssh工作目录] *******************************************************************************************************************************************************************************************
2020-04-20 08:36:31,329 p=1 u=root |  changed: [127.0.0.1]
2020-04-20 08:36:31,685 p=1 u=root |  TASK [ssh-key : 生成ssh key文件] *****************************************************************************************************************************************************************************************
2020-04-20 08:36:31,687 p=1 u=root |  changed: [127.0.0.1] => (item= ssh-keygen -q -t rsa -f ssh_rsa_key -C "" -N "" )
2020-04-20 08:36:31,703 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 08:36:32,257 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-20 08:36:32,259 p=1 u=root |  ok: [1.1.1.132]
2020-04-20 08:36:32,924 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-20 08:36:32,926 p=1 u=root |  changed: [1.1.1.132]
2020-04-20 08:36:32,941 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 08:36:33,215 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-20 08:36:33,218 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 08:36:33,868 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-20 08:36:33,870 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=1.1.1.132 )
2020-04-20 08:36:33,891 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 08:36:34,168 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-20 08:36:34,170 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 08:36:34,462 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-20 08:36:34,464 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 08:36:35,399 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-20 08:36:35,400 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 08:38:25,801 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-20 08:38:25,802 p=1 u=root |  changed: [127.0.0.1]
2020-04-20 08:38:26,714 p=1 u=root |  TASK [k8s : 生成Core DNS配置映射] ******************************************************************************************************************************************************************************************
2020-04-20 08:38:26,716 p=1 u=root |  changed: [127.0.0.1]
2020-04-20 08:38:27,658 p=1 u=root |  TASK [k8s : 更新Core DNS配置] ********************************************************************************************************************************************************************************************
2020-04-20 08:38:27,659 p=1 u=root |  changed: [127.0.0.1]
2020-04-20 08:38:27,677 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 08:38:28,008 p=1 u=root |  TASK [rancher : 检查Rancher工作目录是否存在] ***********************************************************************************************************************************************************************************
2020-04-20 08:38:28,009 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 08:38:28,353 p=1 u=root |  TASK [rancher : 创建Rancher工作目录，如果存在则跳过] *******************************************************************************************************************************************************************************
2020-04-20 08:38:28,355 p=1 u=root |  changed: [127.0.0.1]
2020-04-20 08:38:29,027 p=1 u=root |  TASK [rancher : 更新Rancher HA 安装脚本] ***********************************************************************************************************************************************************************************
2020-04-20 08:38:29,029 p=1 u=root |  changed: [127.0.0.1] => (item={'src': '/etc/ansible/roles/rancher/templates/rancher-install.sh.j2', 'dest': '/etc/ansible/cluster/local/rancher/rancher-install.sh'})
2020-04-20 08:38:30,344 p=1 u=root |  TASK [rancher : 安装Rancher HA] ****************************************************************************************************************************************************************************************
2020-04-20 08:38:30,345 p=1 u=root |  changed: [127.0.0.1]
2020-04-20 08:38:30,372 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 08:38:30,774 p=1 u=root |  TASK [kubectl : 创建kubectl配置目录，如果存在则跳过] *******************************************************************************************************************************************************************************
2020-04-20 08:38:30,776 p=1 u=root |  ok: [1.1.1.132]
2020-04-20 08:38:31,304 p=1 u=root |  TASK [kubectl : 检查 kubecfg 文件是否生成] ***********************************************************************************************************************************************************************************
2020-04-20 08:38:31,305 p=1 u=root |  ok: [1.1.1.132]
2020-04-20 08:38:32,260 p=1 u=root |  TASK [kubectl : 拷贝 kubecfg 文件到 local 集群的所有节点] ************************************************************************************************************************************************************************
2020-04-20 08:38:32,262 p=1 u=root |  changed: [1.1.1.132] => (item={'src': '/etc/ansible/cluster/local/rke/kube_config_cluster.yml', 'dest': '~/.kube/config'})
2020-04-20 08:38:32,609 p=1 u=root |  TASK [kubectl : 配置 kubectl 自动补全] *************************************************************************************************************************************************************************************
2020-04-20 08:38:32,610 p=1 u=root |  changed: [1.1.1.132]
2020-04-20 08:38:32,614 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-20 08:38:32,615 p=1 u=root |  1.1.1.132                  : ok=11   changed=6    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-20 08:38:32,617 p=1 u=root |  127.0.0.1                  : ok=15   changed=9    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2020-04-20 08:57:38,488 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 08:57:38,523 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 08:57:38,557 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 08:57:39,860 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-20 08:57:39,862 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-20 08:57:40,382 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-20 08:57:40,900 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-20 08:57:43,098 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-20 08:57:43,100 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/node_init.sh)
2020-04-20 08:57:56,573 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-20 08:57:56,575 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/docker_init.sh)
2020-04-20 08:57:59,050 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-20 08:57:59,051 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/node_clean.sh)
2020-04-20 08:57:59,622 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-20 08:57:59,623 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-20 08:57:59,672 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 08:57:59,973 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-20 08:57:59,974 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 08:58:00,119 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 08:58:00,616 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-20 08:58:00,618 p=1 u=root |  ok: [1.1.1.132]
2020-04-20 08:58:01,185 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-20 08:58:01,188 p=1 u=root |  ok: [1.1.1.132]
2020-04-20 08:58:01,206 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 08:58:01,523 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-20 08:58:01,525 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 08:58:02,157 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-20 08:58:02,159 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=1.1.1.132 )
2020-04-20 08:58:02,176 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 08:58:02,480 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-20 08:58:02,481 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 08:58:02,787 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-20 08:58:02,789 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 08:58:03,818 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-20 08:58:03,819 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 08:59:58,268 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-20 08:59:58,270 p=1 u=root |  changed: [127.0.0.1]
2020-04-20 08:59:58,907 p=1 u=root |  TASK [k8s : 生成Core DNS配置映射] ******************************************************************************************************************************************************************************************
2020-04-20 08:59:58,909 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 08:59:59,631 p=1 u=root |  TASK [k8s : 更新Core DNS配置] ********************************************************************************************************************************************************************************************
2020-04-20 08:59:59,633 p=1 u=root |  changed: [127.0.0.1]
2020-04-20 08:59:59,653 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 08:59:59,973 p=1 u=root |  TASK [rancher : 检查Rancher工作目录是否存在] ***********************************************************************************************************************************************************************************
2020-04-20 08:59:59,975 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 09:00:00,703 p=1 u=root |  TASK [rancher : 更新Rancher HA 安装脚本] ***********************************************************************************************************************************************************************************
2020-04-20 09:00:00,705 p=1 u=root |  ok: [127.0.0.1] => (item={'src': '/etc/ansible/roles/rancher/templates/rancher-install.sh.j2', 'dest': '/etc/ansible/cluster/local/rancher/rancher-install.sh'})
2020-04-20 09:00:01,903 p=1 u=root |  TASK [rancher : 安装Rancher HA] ****************************************************************************************************************************************************************************************
2020-04-20 09:00:01,904 p=1 u=root |  changed: [127.0.0.1]
2020-04-20 09:00:01,926 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 09:00:02,488 p=1 u=root |  TASK [kubectl : 创建kubectl配置目录，如果存在则跳过] *******************************************************************************************************************************************************************************
2020-04-20 09:00:02,490 p=1 u=root |  ok: [1.1.1.132]
2020-04-20 09:00:02,855 p=1 u=root |  TASK [kubectl : 检查 kubecfg 文件是否生成] ***********************************************************************************************************************************************************************************
2020-04-20 09:00:02,858 p=1 u=root |  ok: [1.1.1.132]
2020-04-20 09:00:04,145 p=1 u=root |  TASK [kubectl : 拷贝 kubecfg 文件到 local 集群的所有节点] ************************************************************************************************************************************************************************
2020-04-20 09:00:04,148 p=1 u=root |  changed: [1.1.1.132] => (item={'src': '/etc/ansible/cluster/local/rke/kube_config_cluster.yml', 'dest': '~/.kube/config'})
2020-04-20 09:00:04,479 p=1 u=root |  TASK [kubectl : 配置 kubectl 自动补全] *************************************************************************************************************************************************************************************
2020-04-20 09:00:04,480 p=1 u=root |  changed: [1.1.1.132]
2020-04-20 09:00:04,483 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-20 09:00:04,484 p=1 u=root |  1.1.1.132                  : ok=11   changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-20 09:00:04,486 p=1 u=root |  127.0.0.1                  : ok=12   changed=4    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2020-04-20 14:18:21,418 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 14:18:21,443 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 14:18:21,471 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 14:18:23,484 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-20 14:18:23,487 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-20 14:18:24,001 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-20 14:18:24,445 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-20 14:18:28,935 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-20 14:18:28,939 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/node_init.sh)
2020-04-20 14:18:43,525 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-20 14:18:43,532 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/docker_init.sh)
2020-04-20 14:18:46,409 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-20 14:18:46,412 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/node_clean.sh)
2020-04-20 14:18:47,086 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-20 14:18:47,087 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-20 14:18:47,101 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 14:18:47,382 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-20 14:18:47,384 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 14:18:47,528 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 14:18:48,034 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-20 14:18:48,036 p=1 u=root |  ok: [1.1.1.132]
2020-04-20 14:18:48,588 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-20 14:18:48,590 p=1 u=root |  ok: [1.1.1.132]
2020-04-20 14:18:48,608 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 14:18:48,874 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-20 14:18:48,875 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 14:18:49,436 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-20 14:18:49,437 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=1.1.1.132 )
2020-04-20 14:18:49,453 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 14:18:49,726 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-20 14:18:49,728 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 14:18:49,989 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-20 14:18:49,991 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 14:18:50,947 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-20 14:18:50,948 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 14:20:20,274 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-20 14:20:20,275 p=1 u=root |  changed: [127.0.0.1]
2020-04-20 14:20:20,903 p=1 u=root |  TASK [k8s : 生成Core DNS配置映射] ******************************************************************************************************************************************************************************************
2020-04-20 14:20:20,907 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 14:20:21,768 p=1 u=root |  TASK [k8s : 更新Core DNS配置] ********************************************************************************************************************************************************************************************
2020-04-20 14:20:21,770 p=1 u=root |  changed: [127.0.0.1]
2020-04-20 14:20:21,787 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 14:20:22,075 p=1 u=root |  TASK [rancher : 检查Rancher工作目录是否存在] ***********************************************************************************************************************************************************************************
2020-04-20 14:20:22,076 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 14:20:23,138 p=1 u=root |  TASK [rancher : 更新Rancher HA 安装脚本] ***********************************************************************************************************************************************************************************
2020-04-20 14:20:23,140 p=1 u=root |  changed: [127.0.0.1] => (item={'src': '/etc/ansible/roles/rancher/templates/rancher-install.sh.j2', 'dest': '/etc/ansible/cluster/local/rancher/rancher-install.sh'})
2020-04-20 14:20:24,291 p=1 u=root |  TASK [rancher : 安装Rancher HA] ****************************************************************************************************************************************************************************************
2020-04-20 14:20:24,292 p=1 u=root |  changed: [127.0.0.1]
2020-04-20 14:20:24,317 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 14:20:24,667 p=1 u=root |  TASK [kubectl : 创建kubectl配置目录，如果存在则跳过] *******************************************************************************************************************************************************************************
2020-04-20 14:20:24,669 p=1 u=root |  ok: [1.1.1.132]
2020-04-20 14:20:24,990 p=1 u=root |  TASK [kubectl : 检查 kubecfg 文件是否生成] ***********************************************************************************************************************************************************************************
2020-04-20 14:20:24,991 p=1 u=root |  ok: [1.1.1.132]
2020-04-20 14:20:25,803 p=1 u=root |  TASK [kubectl : 拷贝 kubecfg 文件到 local 集群的所有节点] ************************************************************************************************************************************************************************
2020-04-20 14:20:25,805 p=1 u=root |  changed: [1.1.1.132] => (item={'src': '/etc/ansible/cluster/local/rke/kube_config_cluster.yml', 'dest': '~/.kube/config'})
2020-04-20 14:20:26,120 p=1 u=root |  TASK [kubectl : 配置 kubectl 自动补全] *************************************************************************************************************************************************************************************
2020-04-20 14:20:26,122 p=1 u=root |  changed: [1.1.1.132]
2020-04-20 14:20:26,125 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-20 14:20:26,127 p=1 u=root |  1.1.1.132                  : ok=11   changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-20 14:20:26,128 p=1 u=root |  127.0.0.1                  : ok=12   changed=5    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2020-04-20 14:39:13,316 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 14:39:13,338 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 14:39:13,365 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 14:39:14,433 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-20 14:39:14,436 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-20 14:39:14,940 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-20 14:39:15,364 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-20 14:39:17,050 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-20 14:39:17,052 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/node_init.sh)
2020-04-20 14:39:29,681 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-20 14:39:29,684 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/docker_init.sh)
2020-04-20 14:39:32,670 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-20 14:39:32,673 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/node_clean.sh)
2020-04-20 14:39:33,257 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-20 14:39:33,259 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-20 14:39:33,281 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 14:39:33,567 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-20 14:39:33,570 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 14:39:33,708 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 14:39:34,197 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-20 14:39:34,199 p=1 u=root |  ok: [1.1.1.132]
2020-04-20 14:39:34,734 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-20 14:39:34,736 p=1 u=root |  ok: [1.1.1.132]
2020-04-20 14:39:34,754 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 14:39:35,079 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-20 14:39:35,081 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 14:39:35,731 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-20 14:39:35,736 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=1.1.1.132 )
2020-04-20 14:39:35,752 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 14:39:36,039 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-20 14:39:36,040 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 14:39:36,313 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-20 14:39:36,314 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 14:39:37,284 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-20 14:39:37,286 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 14:41:05,270 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-20 14:41:05,273 p=1 u=root |  changed: [127.0.0.1]
2020-04-20 14:41:05,865 p=1 u=root |  TASK [k8s : 生成Core DNS配置映射] ******************************************************************************************************************************************************************************************
2020-04-20 14:41:05,866 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 14:41:06,543 p=1 u=root |  TASK [k8s : 更新Core DNS配置] ********************************************************************************************************************************************************************************************
2020-04-20 14:41:06,545 p=1 u=root |  changed: [127.0.0.1]
2020-04-20 14:41:06,564 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-20 14:41:06,856 p=1 u=root |  TASK [rancher : 检查Rancher工作目录是否存在] ***********************************************************************************************************************************************************************************
2020-04-20 14:41:06,859 p=1 u=root |  ok: [127.0.0.1]
2020-04-20 14:41:07,689 p=1 u=root |  TASK [rancher : 更新Rancher HA 安装脚本] ***********************************************************************************************************************************************************************************
2020-04-20 14:41:07,690 p=1 u=root |  ok: [127.0.0.1] => (item={'src': '/etc/ansible/roles/rancher/templates/rancher-install.sh.j2', 'dest': '/etc/ansible/cluster/local/rancher/rancher-install.sh'})
2020-04-20 14:41:08,727 p=1 u=root |  TASK [rancher : 安装Rancher HA] ****************************************************************************************************************************************************************************************
2020-04-20 14:41:08,728 p=1 u=root |  changed: [127.0.0.1]
2020-04-20 14:41:08,758 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-20 14:41:08,993 p=1 u=root |  TASK [kubectl : 创建kubectl配置目录，如果存在则跳过] *******************************************************************************************************************************************************************************
2020-04-20 14:41:08,994 p=1 u=root |  ok: [1.1.1.132]
2020-04-20 14:41:09,264 p=1 u=root |  TASK [kubectl : 检查 kubecfg 文件是否生成] ***********************************************************************************************************************************************************************************
2020-04-20 14:41:09,266 p=1 u=root |  ok: [1.1.1.132]
2020-04-20 14:41:10,281 p=1 u=root |  TASK [kubectl : 拷贝 kubecfg 文件到 local 集群的所有节点] ************************************************************************************************************************************************************************
2020-04-20 14:41:10,283 p=1 u=root |  changed: [1.1.1.132] => (item={'src': '/etc/ansible/cluster/local/rke/kube_config_cluster.yml', 'dest': '~/.kube/config'})
2020-04-20 14:41:10,596 p=1 u=root |  TASK [kubectl : 配置 kubectl 自动补全] *************************************************************************************************************************************************************************************
2020-04-20 14:41:10,598 p=1 u=root |  changed: [1.1.1.132]
2020-04-20 14:41:10,601 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-20 14:41:10,602 p=1 u=root |  1.1.1.132                  : ok=11   changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-20 14:41:10,603 p=1 u=root |  127.0.0.1                  : ok=12   changed=4    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2020-04-21 01:42:16,183 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 01:42:16,225 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 01:42:16,254 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 01:42:17,730 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 01:42:17,732 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 01:42:18,274 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 01:42:18,764 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 01:42:21,027 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 01:42:21,029 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/node_init.sh)
2020-04-21 01:42:34,631 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 01:42:34,635 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/docker_init.sh)
2020-04-21 01:42:37,546 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 01:42:37,548 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/node_clean.sh)
2020-04-21 01:42:38,246 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-21 01:42:38,247 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-21 01:42:38,263 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 01:42:38,554 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-21 01:42:38,556 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 01:42:38,701 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 01:42:39,212 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-21 01:42:39,213 p=1 u=root |  ok: [1.1.1.132]
2020-04-21 01:42:39,768 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-21 01:42:39,769 p=1 u=root |  ok: [1.1.1.132]
2020-04-21 01:42:39,786 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 01:42:40,079 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-21 01:42:40,081 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 01:42:40,670 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-21 01:42:40,671 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=1.1.1.132 )
2020-04-21 01:42:40,692 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 01:42:40,973 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-21 01:42:40,975 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 01:42:41,259 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-21 01:42:41,261 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 01:42:42,264 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-21 01:42:42,267 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 01:44:11,670 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-21 01:44:11,672 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 01:44:12,288 p=1 u=root |  TASK [k8s : 生成Core DNS配置映射] ******************************************************************************************************************************************************************************************
2020-04-21 01:44:12,290 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 01:44:13,025 p=1 u=root |  TASK [k8s : 更新Core DNS配置] ********************************************************************************************************************************************************************************************
2020-04-21 01:44:13,027 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 01:44:13,049 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 01:44:13,367 p=1 u=root |  TASK [rancher : 检查Rancher工作目录是否存在] ***********************************************************************************************************************************************************************************
2020-04-21 01:44:13,369 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 01:44:14,495 p=1 u=root |  TASK [rancher : 更新Rancher HA 安装脚本] ***********************************************************************************************************************************************************************************
2020-04-21 01:44:14,499 p=1 u=root |  ok: [127.0.0.1] => (item={'src': '/etc/ansible/roles/rancher/templates/rancher-install.sh.j2', 'dest': '/etc/ansible/cluster/local/rancher/rancher-install.sh'})
2020-04-21 01:44:15,959 p=1 u=root |  TASK [rancher : 安装Rancher HA] ****************************************************************************************************************************************************************************************
2020-04-21 01:44:15,963 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 01:44:15,991 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 01:44:16,441 p=1 u=root |  TASK [kubectl : 创建kubectl配置目录，如果存在则跳过] *******************************************************************************************************************************************************************************
2020-04-21 01:44:16,445 p=1 u=root |  ok: [1.1.1.132]
2020-04-21 01:44:16,865 p=1 u=root |  TASK [kubectl : 检查 kubecfg 文件是否生成] ***********************************************************************************************************************************************************************************
2020-04-21 01:44:16,867 p=1 u=root |  ok: [1.1.1.132]
2020-04-21 01:44:18,099 p=1 u=root |  TASK [kubectl : 拷贝 kubecfg 文件到 local 集群的所有节点] ************************************************************************************************************************************************************************
2020-04-21 01:44:18,101 p=1 u=root |  changed: [1.1.1.132] => (item={'src': '/etc/ansible/cluster/local/rke/kube_config_cluster.yml', 'dest': '~/.kube/config'})
2020-04-21 01:44:18,513 p=1 u=root |  TASK [kubectl : 配置 kubectl 自动补全] *************************************************************************************************************************************************************************************
2020-04-21 01:44:18,515 p=1 u=root |  changed: [1.1.1.132]
2020-04-21 01:44:18,522 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 01:44:18,524 p=1 u=root |  1.1.1.132                  : ok=11   changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 01:44:18,528 p=1 u=root |  127.0.0.1                  : ok=12   changed=4    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2020-04-21 01:56:32,066 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 01:56:32,094 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 01:56:32,126 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 01:56:33,274 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 01:56:33,275 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 01:56:33,807 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 01:56:34,257 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 01:56:36,086 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 01:56:36,088 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/node_init.sh)
2020-04-21 01:56:48,611 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 01:56:48,614 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/docker_init.sh)
2020-04-21 01:56:51,656 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 01:56:51,658 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/node_clean.sh)
2020-04-21 01:56:52,456 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-21 01:56:52,458 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-21 01:56:52,477 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 01:56:52,814 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-21 01:56:52,817 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 01:56:52,967 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 01:56:53,483 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-21 01:56:53,485 p=1 u=root |  ok: [1.1.1.132]
2020-04-21 01:56:54,024 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-21 01:56:54,026 p=1 u=root |  ok: [1.1.1.132]
2020-04-21 01:56:54,048 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 01:56:54,355 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-21 01:56:54,357 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 01:56:54,971 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-21 01:56:54,972 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=1.1.1.132 )
2020-04-21 01:56:54,992 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 01:56:55,296 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-21 01:56:55,298 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 01:56:55,590 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-21 01:56:55,592 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 01:56:56,591 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-21 01:56:56,593 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 01:58:25,615 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-21 01:58:25,617 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 01:58:26,213 p=1 u=root |  TASK [k8s : 生成Core DNS配置映射] ******************************************************************************************************************************************************************************************
2020-04-21 01:58:26,215 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 01:58:27,474 p=1 u=root |  TASK [k8s : 更新Core DNS配置] ********************************************************************************************************************************************************************************************
2020-04-21 01:58:27,475 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 01:58:27,491 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 01:58:27,811 p=1 u=root |  TASK [rancher : 检查Rancher工作目录是否存在] ***********************************************************************************************************************************************************************************
2020-04-21 01:58:27,813 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 01:58:28,863 p=1 u=root |  TASK [rancher : 更新Rancher HA 安装脚本] ***********************************************************************************************************************************************************************************
2020-04-21 01:58:28,865 p=1 u=root |  ok: [127.0.0.1] => (item={'src': '/etc/ansible/roles/rancher/templates/rancher-install.sh.j2', 'dest': '/etc/ansible/cluster/local/rancher/rancher-install.sh'})
2020-04-21 01:58:30,249 p=1 u=root |  TASK [rancher : 安装Rancher HA] ****************************************************************************************************************************************************************************************
2020-04-21 01:58:30,251 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 01:58:30,283 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 01:58:30,670 p=1 u=root |  TASK [kubectl : 创建kubectl配置目录，如果存在则跳过] *******************************************************************************************************************************************************************************
2020-04-21 01:58:30,674 p=1 u=root |  ok: [1.1.1.132]
2020-04-21 01:58:31,066 p=1 u=root |  TASK [kubectl : 检查 kubecfg 文件是否生成] ***********************************************************************************************************************************************************************************
2020-04-21 01:58:31,068 p=1 u=root |  ok: [1.1.1.132]
2020-04-21 01:58:32,522 p=1 u=root |  TASK [kubectl : 拷贝 kubecfg 文件到 local 集群的所有节点] ************************************************************************************************************************************************************************
2020-04-21 01:58:32,523 p=1 u=root |  changed: [1.1.1.132] => (item={'src': '/etc/ansible/cluster/local/rke/kube_config_cluster.yml', 'dest': '~/.kube/config'})
2020-04-21 01:58:32,884 p=1 u=root |  TASK [kubectl : 配置 kubectl 自动补全] *************************************************************************************************************************************************************************************
2020-04-21 01:58:32,886 p=1 u=root |  changed: [1.1.1.132]
2020-04-21 01:58:32,890 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 01:58:32,891 p=1 u=root |  1.1.1.132                  : ok=11   changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 01:58:32,892 p=1 u=root |  127.0.0.1                  : ok=12   changed=4    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2020-04-21 02:16:03,503 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:16:03,530 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 02:16:03,566 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 02:16:04,708 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 02:16:04,711 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 02:16:05,252 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 02:16:05,702 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 02:16:07,657 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 02:16:07,658 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/node_init.sh)
2020-04-21 02:16:07,682 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:16:07,712 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 02:16:07,739 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:16:07,764 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:16:07,788 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:16:07,816 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 02:16:07,823 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 02:16:07,824 p=1 u=root |  1.1.1.132                  : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 02:16:37,153 p=1 u=root |   [ERROR]: User interrupted execution

2020-04-21 02:16:44,781 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:16:44,810 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 02:16:44,842 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 02:16:45,962 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 02:16:45,964 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 02:16:46,475 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 02:16:46,929 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 02:16:50,332 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 02:16:50,339 p=1 u=root |  failed: [1.1.1.132] (item=/tmp/node_clean.sh) => 
  ansible_loop_var: item
  item: /tmp/node_clean.sh
  msg: 'Data could not be sent to remote host "1.1.1.132". Make sure this host can be reached over ssh: '
  unreachable: true
2020-04-21 02:16:50,342 p=1 u=root |  fatal: [1.1.1.132]: UNREACHABLE! => changed=false 
  msg: All items completed
  results:
  - ansible_loop_var: item
    item: /tmp/node_clean.sh
    msg: 'Data could not be sent to remote host "1.1.1.132". Make sure this host can be reached over ssh: '
    unreachable: true
2020-04-21 02:16:50,345 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 02:16:50,346 p=1 u=root |  1.1.1.132                  : ok=1    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 02:17:08,419 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:17:08,444 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 02:17:08,473 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 02:17:09,725 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 02:17:09,728 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 02:17:10,400 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 02:17:10,846 p=1 u=root |  ok: [1.1.1.132] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 02:17:12,117 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 02:17:12,119 p=1 u=root |  changed: [1.1.1.132] => (item=/tmp/node_clean.sh)
2020-04-21 02:17:12,136 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:17:12,155 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 02:17:12,171 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:17:12,190 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:17:12,211 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:17:12,238 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 02:17:12,244 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 02:17:12,245 p=1 u=root |  1.1.1.132                  : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 02:26:05,317 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:26:05,344 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 02:26:05,377 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 02:26:05,400 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:26:05,424 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 02:26:05,446 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:26:05,466 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:26:06,419 p=1 u=root |  TASK [k8s : 生成Core DNS配置映射] ******************************************************************************************************************************************************************************************
2020-04-21 02:26:06,422 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 02:26:07,340 p=1 u=root |  TASK [k8s : 更新Core DNS配置] ********************************************************************************************************************************************************************************************
2020-04-21 02:26:07,341 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 02:26:07,356 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:26:07,648 p=1 u=root |  TASK [rancher : 检查Rancher工作目录是否存在] ***********************************************************************************************************************************************************************************
2020-04-21 02:26:07,650 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 02:26:08,522 p=1 u=root |  TASK [rancher : 更新Rancher HA 安装脚本] ***********************************************************************************************************************************************************************************
2020-04-21 02:26:08,524 p=1 u=root |  ok: [127.0.0.1] => (item={'src': '/etc/ansible/roles/rancher/templates/rancher-install.sh.j2', 'dest': '/etc/ansible/cluster/local/rancher/rancher-install.sh'})
2020-04-21 02:26:09,620 p=1 u=root |  TASK [rancher : 安装Rancher HA] ****************************************************************************************************************************************************************************************
2020-04-21 02:26:09,627 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 02:26:09,653 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 02:26:09,664 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 02:26:09,667 p=1 u=root |  127.0.0.1                  : ok=5    changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-04-21 02:26:31,044 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:26:31,072 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 02:26:31,107 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 02:26:31,143 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:26:31,171 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 02:26:31,195 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:26:31,219 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:26:31,760 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-21 02:26:31,763 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 02:26:32,305 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-21 02:26:32,306 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 02:26:33,783 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-21 02:26:33,785 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 02:26:56,133 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-21 02:26:56,135 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 02:26:56,153 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 02:26:56,181 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 02:26:56,728 p=1 u=root |  TASK [kubectl : 创建kubectl配置目录，如果存在则跳过] *******************************************************************************************************************************************************************************
2020-04-21 02:26:56,730 p=1 u=root |  ok: [1.1.1.132]
2020-04-21 02:26:56,969 p=1 u=root |  TASK [kubectl : 检查 kubecfg 文件是否生成] ***********************************************************************************************************************************************************************************
2020-04-21 02:26:56,971 p=1 u=root |  ok: [1.1.1.132]
2020-04-21 02:26:57,604 p=1 u=root |  TASK [kubectl : 拷贝 kubecfg 文件到 local 集群的所有节点] ************************************************************************************************************************************************************************
2020-04-21 02:26:57,606 p=1 u=root |  changed: [1.1.1.132] => (item={'src': '/etc/ansible/cluster/local/rke/kube_config_cluster.yml', 'dest': '~/.kube/config'})
2020-04-21 02:26:57,893 p=1 u=root |  TASK [kubectl : 配置 kubectl 自动补全] *************************************************************************************************************************************************************************************
2020-04-21 02:26:57,895 p=1 u=root |  changed: [1.1.1.132]
2020-04-21 02:26:57,897 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 02:26:57,898 p=1 u=root |  1.1.1.132                  : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 02:26:57,899 p=1 u=root |  127.0.0.1                  : ok=4    changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-04-21 05:49:53,751 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:49:53,785 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:49:55,611 p=1 u=root |  TASK [Gathering Facts] ***********************************************************************************************************************************************************************************************
2020-04-21 05:49:55,613 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 05:49:55,632 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:49:56,608 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 05:49:56,610 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 05:49:57,191 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 05:49:57,684 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 05:50:00,826 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 05:50:00,828 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 05:50:08,748 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 05:50:08,751 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-21 05:50:11,344 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 05:50:11,346 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-21 05:50:15,363 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-21 05:50:15,366 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-21 05:50:15,387 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:50:15,709 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-21 05:50:15,711 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:50:15,896 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:50:16,429 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-21 05:50:16,432 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 05:50:17,063 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-21 05:50:17,065 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 05:50:17,088 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:50:17,408 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-21 05:50:17,410 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:50:18,132 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-21 05:50:18,134 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=1.1.1.132 )
2020-04-21 05:50:18,156 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:50:18,483 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-21 05:50:18,485 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:50:19,013 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-21 05:50:19,014 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:50:20,058 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-21 05:50:20,060 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 05:50:32,419 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-21 05:50:32,455 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=true 
  cmd: cd /etc/ansible/cluster/local/rke; /etc/ansible/bin/rke_v0.3.2 up --config cluster.yml
  delta: '0:00:11.955334'
  end: '2020-04-21 05:50:32.398697'
  msg: non-zero return code
  rc: 1
  start: '2020-04-21 05:50:20.443363'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    time="2020-04-21T05:50:20Z" level=info msg="Running RKE version: v0.3.2"
    time="2020-04-21T05:50:20Z" level=info msg="Initiating Kubernetes cluster"
    time="2020-04-21T05:50:20Z" level=info msg="[certificates] Generating Kubernetes API server certificates"
    time="2020-04-21T05:50:20Z" level=info msg="[certificates] Generating admin certificates and kubeconfig"
    time="2020-04-21T05:50:20Z" level=info msg="[certificates] Generating etcd-192.168.50.119 certificate and key"
    time="2020-04-21T05:50:21Z" level=info msg="Successfully Deployed state file at [./cluster.rkestate]"
    time="2020-04-21T05:50:21Z" level=info msg="Building Kubernetes cluster"
    time="2020-04-21T05:50:21Z" level=info msg="[dialer] Setup tunnel for host [192.168.50.119]"
    time="2020-04-21T05:50:21Z" level=info msg="[network] Deploying port listener containers"
    time="2020-04-21T05:50:21Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:21Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:50:21Z" level=info msg="Starting container [rke-etcd-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:21Z" level=info msg="[network] Successfully started [rke-etcd-port-listener] container on host [192.168.50.119]"
    time="2020-04-21T05:50:21Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:21Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:50:22Z" level=info msg="Starting container [rke-cp-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:22Z" level=info msg="[network] Successfully started [rke-cp-port-listener] container on host [192.168.50.119]"
    time="2020-04-21T05:50:22Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:22Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:50:22Z" level=info msg="Starting container [rke-worker-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:23Z" level=info msg="[network] Successfully started [rke-worker-port-listener] container on host [192.168.50.119]"
    time="2020-04-21T05:50:23Z" level=info msg="[network] Port listener containers deployed successfully"
    time="2020-04-21T05:50:23Z" level=info msg="[network] Running control plane -> etcd port checks"
    time="2020-04-21T05:50:23Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:23Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:50:23Z" level=info msg="Starting container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:23Z" level=info msg="[network] Successfully started [rke-port-checker] container on host [192.168.50.119]"
    time="2020-04-21T05:50:23Z" level=info msg="Removing container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:23Z" level=info msg="[network] Running control plane -> worker port checks"
    time="2020-04-21T05:50:23Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:23Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:50:23Z" level=info msg="Starting container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:24Z" level=info msg="[network] Successfully started [rke-port-checker] container on host [192.168.50.119]"
    time="2020-04-21T05:50:24Z" level=info msg="Removing container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:24Z" level=info msg="[network] Running workers -> control plane port checks"
    time="2020-04-21T05:50:24Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:24Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:50:24Z" level=info msg="Starting container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:24Z" level=info msg="[network] Successfully started [rke-port-checker] container on host [192.168.50.119]"
    time="2020-04-21T05:50:24Z" level=info msg="Removing container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:24Z" level=info msg="[network] Checking KubeAPI port Control Plane hosts"
    time="2020-04-21T05:50:24Z" level=info msg="[network] Removing port listener containers"
    time="2020-04-21T05:50:24Z" level=info msg="Removing container [rke-etcd-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:24Z" level=info msg="[remove/rke-etcd-port-listener] Successfully removed container on host [192.168.50.119]"
    time="2020-04-21T05:50:24Z" level=info msg="Removing container [rke-cp-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:25Z" level=info msg="[remove/rke-cp-port-listener] Successfully removed container on host [192.168.50.119]"
    time="2020-04-21T05:50:25Z" level=info msg="Removing container [rke-worker-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:25Z" level=info msg="[remove/rke-worker-port-listener] Successfully removed container on host [192.168.50.119]"
    time="2020-04-21T05:50:25Z" level=info msg="[network] Port listener containers removed successfully"
    time="2020-04-21T05:50:25Z" level=info msg="[certificates] kube-apiserver certificate changed, force deploying certs"
    time="2020-04-21T05:50:25Z" level=info msg="[certificates] Deploying kubernetes certificates to Cluster nodes"
    time="2020-04-21T05:50:25Z" level=info msg="Checking if container [cert-deployer] is running on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:25Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:25Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:50:25Z" level=info msg="Starting container [cert-deployer] on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:25Z" level=info msg="Checking if container [cert-deployer] is running on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:30Z" level=info msg="Checking if container [cert-deployer] is running on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:30Z" level=info msg="Removing container [cert-deployer] on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:30Z" level=info msg="[reconcile] Rebuilding and updating local kube config"
    time="2020-04-21T05:50:30Z" level=info msg="Successfully Deployed local admin kubeconfig at [./kube_config_cluster.yml]"
    time="2020-04-21T05:50:30Z" level=info msg="[certificates] Successfully deployed kubernetes certificates to Cluster nodes"
    time="2020-04-21T05:50:30Z" level=info msg="[file-deploy] Deploying file [/etc/kubernetes/kube-api-authn-webhook.yaml] to node [192.168.50.119]"
    time="2020-04-21T05:50:30Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:30Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:50:30Z" level=info msg="Starting container [file-deployer] on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:31Z" level=info msg="Successfully started [file-deployer] container on host [192.168.50.119]"
    time="2020-04-21T05:50:31Z" level=info msg="Waiting for [file-deployer] container to exit on host [192.168.50.119]"
    time="2020-04-21T05:50:31Z" level=info msg="Waiting for [file-deployer] container to exit on host [192.168.50.119]"
    time="2020-04-21T05:50:31Z" level=info msg="Container [file-deployer] is still running on host [192.168.50.119]"
    time="2020-04-21T05:50:32Z" level=info msg="Waiting for [file-deployer] container to exit on host [192.168.50.119]"
    time="2020-04-21T05:50:32Z" level=info msg="Removing container [file-deployer] on host [192.168.50.119], try #1"
    time="2020-04-21T05:50:32Z" level=info msg="[remove/file-deployer] Successfully removed container on host [192.168.50.119]"
    time="2020-04-21T05:50:32Z" level=info msg="[/etc/kubernetes/kube-api-authn-webhook.yaml] Successfully deployed authentication webhook config Cluster nodes"
    time="2020-04-21T05:50:32Z" level=info msg="[reconcile] Reconciling cluster state"
    time="2020-04-21T05:50:32Z" level=fatal msg="Failed to reconcile etcd plane: Etcd plane nodes are replaced. Stopping provisioning. Please restore your cluster from backup."
  stdout_lines: <omitted>
2020-04-21 05:50:32,458 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 05:50:32,460 p=1 u=root |  127.0.0.1                  : ok=6    changed=2    unreachable=0    failed=1    skipped=4    rescued=0    ignored=0   
2020-04-21 05:50:32,460 p=1 u=root |  192.168.50.119             : ok=8    changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 05:52:19,060 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:52:19,088 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:52:19,118 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:52:20,318 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 05:52:20,321 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 05:52:20,897 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 05:52:21,454 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 05:52:23,451 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 05:52:23,455 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 05:52:24,254 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 05:52:24,255 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-21 05:52:25,584 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 05:52:25,590 p=1 u=root |  failed: [192.168.50.119] (item=/tmp/node_clean.sh) => 
  ansible_loop_var: item
  item: /tmp/node_clean.sh
  msg: 'Data could not be sent to remote host "192.168.50.119". Make sure this host can be reached over ssh: '
  unreachable: true
2020-04-21 05:52:25,594 p=1 u=root |  fatal: [192.168.50.119]: UNREACHABLE! => changed=false 
  msg: All items completed
  results:
  - ansible_loop_var: item
    item: /tmp/node_clean.sh
    msg: 'Data could not be sent to remote host "192.168.50.119". Make sure this host can be reached over ssh: '
    unreachable: true
2020-04-21 05:52:25,597 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 05:52:25,599 p=1 u=root |  192.168.50.119             : ok=3    changed=2    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 05:53:00,333 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:53:00,369 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:53:00,403 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:53:01,535 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 05:53:01,538 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 05:53:02,054 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 05:53:02,520 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 05:53:04,054 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 05:53:04,057 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 05:53:04,861 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 05:53:04,862 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-21 05:53:05,292 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 05:53:05,298 p=1 u=root |  failed: [192.168.50.119] (item=/tmp/node_clean.sh) => 
  ansible_loop_var: item
  item: /tmp/node_clean.sh
  msg: 'Data could not be sent to remote host "192.168.50.119". Make sure this host can be reached over ssh: '
  unreachable: true
2020-04-21 05:53:05,303 p=1 u=root |  fatal: [192.168.50.119]: UNREACHABLE! => changed=false 
  msg: All items completed
  results:
  - ansible_loop_var: item
    item: /tmp/node_clean.sh
    msg: 'Data could not be sent to remote host "192.168.50.119". Make sure this host can be reached over ssh: '
    unreachable: true
2020-04-21 05:53:05,306 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 05:53:05,307 p=1 u=root |  192.168.50.119             : ok=3    changed=2    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 05:54:27,631 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:54:27,659 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:54:27,684 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:54:28,812 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 05:54:28,814 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 05:54:29,342 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 05:54:29,824 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 05:54:31,402 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 05:54:31,404 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 05:54:32,159 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 05:54:32,160 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-21 05:54:32,950 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 05:54:32,951 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-21 05:54:33,583 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-21 05:54:33,584 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-21 05:54:33,607 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:54:33,929 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-21 05:54:33,931 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:54:34,085 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:54:34,647 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-21 05:54:34,649 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 05:54:35,211 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-21 05:54:35,213 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 05:54:35,235 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:54:35,550 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-21 05:54:35,552 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:54:36,133 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-21 05:54:36,136 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=1.1.1.132 )
2020-04-21 05:54:36,156 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:54:36,484 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-21 05:54:36,492 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:54:36,817 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-21 05:54:36,820 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:54:37,755 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-21 05:54:37,757 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:54:49,934 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-21 05:54:49,971 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=true 
  cmd: cd /etc/ansible/cluster/local/rke; /etc/ansible/bin/rke_v0.3.2 up --config cluster.yml
  delta: '0:00:11.701182'
  end: '2020-04-21 05:54:49.909741'
  msg: non-zero return code
  rc: 1
  start: '2020-04-21 05:54:38.208559'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    time="2020-04-21T05:54:38Z" level=info msg="Running RKE version: v0.3.2"
    time="2020-04-21T05:54:38Z" level=info msg="Initiating Kubernetes cluster"
    time="2020-04-21T05:54:38Z" level=info msg="[certificates] Generating admin certificates and kubeconfig"
    time="2020-04-21T05:54:38Z" level=info msg="Successfully Deployed state file at [./cluster.rkestate]"
    time="2020-04-21T05:54:38Z" level=info msg="Building Kubernetes cluster"
    time="2020-04-21T05:54:38Z" level=info msg="[dialer] Setup tunnel for host [192.168.50.119]"
    time="2020-04-21T05:54:38Z" level=info msg="[network] Deploying port listener containers"
    time="2020-04-21T05:54:38Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:38Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:54:38Z" level=info msg="Starting container [rke-etcd-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:39Z" level=info msg="[network] Successfully started [rke-etcd-port-listener] container on host [192.168.50.119]"
    time="2020-04-21T05:54:39Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:39Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:54:39Z" level=info msg="Starting container [rke-cp-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:39Z" level=info msg="[network] Successfully started [rke-cp-port-listener] container on host [192.168.50.119]"
    time="2020-04-21T05:54:39Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:39Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:54:39Z" level=info msg="Starting container [rke-worker-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:40Z" level=info msg="[network] Successfully started [rke-worker-port-listener] container on host [192.168.50.119]"
    time="2020-04-21T05:54:40Z" level=info msg="[network] Port listener containers deployed successfully"
    time="2020-04-21T05:54:40Z" level=info msg="[network] Running control plane -> etcd port checks"
    time="2020-04-21T05:54:40Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:40Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:54:40Z" level=info msg="Starting container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:41Z" level=info msg="[network] Successfully started [rke-port-checker] container on host [192.168.50.119]"
    time="2020-04-21T05:54:41Z" level=info msg="Removing container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:41Z" level=info msg="[network] Running control plane -> worker port checks"
    time="2020-04-21T05:54:41Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:41Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:54:41Z" level=info msg="Starting container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:41Z" level=info msg="[network] Successfully started [rke-port-checker] container on host [192.168.50.119]"
    time="2020-04-21T05:54:41Z" level=info msg="Removing container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:41Z" level=info msg="[network] Running workers -> control plane port checks"
    time="2020-04-21T05:54:41Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:41Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:54:41Z" level=info msg="Starting container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:42Z" level=info msg="[network] Successfully started [rke-port-checker] container on host [192.168.50.119]"
    time="2020-04-21T05:54:42Z" level=info msg="Removing container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:42Z" level=info msg="[network] Checking KubeAPI port Control Plane hosts"
    time="2020-04-21T05:54:42Z" level=info msg="[network] Removing port listener containers"
    time="2020-04-21T05:54:42Z" level=info msg="Removing container [rke-etcd-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:42Z" level=info msg="[remove/rke-etcd-port-listener] Successfully removed container on host [192.168.50.119]"
    time="2020-04-21T05:54:42Z" level=info msg="Removing container [rke-cp-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:42Z" level=info msg="[remove/rke-cp-port-listener] Successfully removed container on host [192.168.50.119]"
    time="2020-04-21T05:54:42Z" level=info msg="Removing container [rke-worker-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:42Z" level=info msg="[remove/rke-worker-port-listener] Successfully removed container on host [192.168.50.119]"
    time="2020-04-21T05:54:42Z" level=info msg="[network] Port listener containers removed successfully"
    time="2020-04-21T05:54:42Z" level=info msg="[certificates] kube-apiserver certificate changed, force deploying certs"
    time="2020-04-21T05:54:42Z" level=info msg="[certificates] Deploying kubernetes certificates to Cluster nodes"
    time="2020-04-21T05:54:42Z" level=info msg="Checking if container [cert-deployer] is running on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:42Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:42Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:54:43Z" level=info msg="Starting container [cert-deployer] on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:43Z" level=info msg="Checking if container [cert-deployer] is running on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:48Z" level=info msg="Checking if container [cert-deployer] is running on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:48Z" level=info msg="Removing container [cert-deployer] on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:48Z" level=info msg="[reconcile] Rebuilding and updating local kube config"
    time="2020-04-21T05:54:48Z" level=info msg="Successfully Deployed local admin kubeconfig at [./kube_config_cluster.yml]"
    time="2020-04-21T05:54:48Z" level=info msg="[certificates] Successfully deployed kubernetes certificates to Cluster nodes"
    time="2020-04-21T05:54:48Z" level=info msg="[file-deploy] Deploying file [/etc/kubernetes/kube-api-authn-webhook.yaml] to node [192.168.50.119]"
    time="2020-04-21T05:54:48Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:48Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:54:48Z" level=info msg="Starting container [file-deployer] on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:48Z" level=info msg="Successfully started [file-deployer] container on host [192.168.50.119]"
    time="2020-04-21T05:54:48Z" level=info msg="Waiting for [file-deployer] container to exit on host [192.168.50.119]"
    time="2020-04-21T05:54:48Z" level=info msg="Waiting for [file-deployer] container to exit on host [192.168.50.119]"
    time="2020-04-21T05:54:48Z" level=info msg="Container [file-deployer] is still running on host [192.168.50.119]"
    time="2020-04-21T05:54:49Z" level=info msg="Waiting for [file-deployer] container to exit on host [192.168.50.119]"
    time="2020-04-21T05:54:49Z" level=info msg="Removing container [file-deployer] on host [192.168.50.119], try #1"
    time="2020-04-21T05:54:49Z" level=info msg="[remove/file-deployer] Successfully removed container on host [192.168.50.119]"
    time="2020-04-21T05:54:49Z" level=info msg="[/etc/kubernetes/kube-api-authn-webhook.yaml] Successfully deployed authentication webhook config Cluster nodes"
    time="2020-04-21T05:54:49Z" level=info msg="[reconcile] Reconciling cluster state"
    time="2020-04-21T05:54:49Z" level=fatal msg="Failed to reconcile etcd plane: Etcd plane nodes are replaced. Stopping provisioning. Please restore your cluster from backup."
  stdout_lines: <omitted>
2020-04-21 05:54:49,974 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 05:54:49,975 p=1 u=root |  127.0.0.1                  : ok=6    changed=1    unreachable=0    failed=1    skipped=4    rescued=0    ignored=0   
2020-04-21 05:54:49,976 p=1 u=root |  192.168.50.119             : ok=7    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 05:56:24,950 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:56:25,005 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:56:25,049 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:56:26,168 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 05:56:26,170 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 05:56:26,677 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 05:56:27,127 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 05:56:28,492 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 05:56:28,493 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 05:56:29,176 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 05:56:29,177 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-21 05:56:29,905 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 05:56:29,906 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-21 05:56:30,512 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-21 05:56:30,515 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-21 05:56:30,535 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:56:30,869 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-21 05:56:30,872 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:56:31,163 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:56:31,699 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-21 05:56:31,701 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 05:56:32,243 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-21 05:56:32,245 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 05:56:32,267 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:56:32,565 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-21 05:56:32,567 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:56:33,116 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-21 05:56:33,118 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=1.1.1.132 )
2020-04-21 05:56:33,143 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:56:33,436 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-21 05:56:33,438 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:56:33,729 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-21 05:56:33,730 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:56:34,705 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-21 05:56:34,707 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:56:46,327 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-21 05:56:46,388 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=true 
  cmd: cd /etc/ansible/cluster/local/rke; /etc/ansible/bin/rke_v0.3.2 up --config cluster.yml
  delta: '0:00:11.227461'
  end: '2020-04-21 05:56:46.297578'
  msg: non-zero return code
  rc: 1
  start: '2020-04-21 05:56:35.070117'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    time="2020-04-21T05:56:35Z" level=info msg="Running RKE version: v0.3.2"
    time="2020-04-21T05:56:35Z" level=info msg="Initiating Kubernetes cluster"
    time="2020-04-21T05:56:35Z" level=info msg="[certificates] Generating admin certificates and kubeconfig"
    time="2020-04-21T05:56:35Z" level=info msg="Successfully Deployed state file at [./cluster.rkestate]"
    time="2020-04-21T05:56:35Z" level=info msg="Building Kubernetes cluster"
    time="2020-04-21T05:56:35Z" level=info msg="[dialer] Setup tunnel for host [192.168.50.119]"
    time="2020-04-21T05:56:35Z" level=info msg="[network] Deploying port listener containers"
    time="2020-04-21T05:56:35Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:35Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:56:35Z" level=info msg="Starting container [rke-etcd-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:36Z" level=info msg="[network] Successfully started [rke-etcd-port-listener] container on host [192.168.50.119]"
    time="2020-04-21T05:56:36Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:36Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:56:36Z" level=info msg="Starting container [rke-cp-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:36Z" level=info msg="[network] Successfully started [rke-cp-port-listener] container on host [192.168.50.119]"
    time="2020-04-21T05:56:36Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:36Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:56:36Z" level=info msg="Starting container [rke-worker-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:37Z" level=info msg="[network] Successfully started [rke-worker-port-listener] container on host [192.168.50.119]"
    time="2020-04-21T05:56:37Z" level=info msg="[network] Port listener containers deployed successfully"
    time="2020-04-21T05:56:37Z" level=info msg="[network] Running control plane -> etcd port checks"
    time="2020-04-21T05:56:37Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:37Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:56:37Z" level=info msg="Starting container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:37Z" level=info msg="[network] Successfully started [rke-port-checker] container on host [192.168.50.119]"
    time="2020-04-21T05:56:37Z" level=info msg="Removing container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:37Z" level=info msg="[network] Running control plane -> worker port checks"
    time="2020-04-21T05:56:37Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:37Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:56:37Z" level=info msg="Starting container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:38Z" level=info msg="[network] Successfully started [rke-port-checker] container on host [192.168.50.119]"
    time="2020-04-21T05:56:38Z" level=info msg="Removing container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:38Z" level=info msg="[network] Running workers -> control plane port checks"
    time="2020-04-21T05:56:38Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:38Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:56:38Z" level=info msg="Starting container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:38Z" level=info msg="[network] Successfully started [rke-port-checker] container on host [192.168.50.119]"
    time="2020-04-21T05:56:38Z" level=info msg="Removing container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:38Z" level=info msg="[network] Checking KubeAPI port Control Plane hosts"
    time="2020-04-21T05:56:38Z" level=info msg="[network] Removing port listener containers"
    time="2020-04-21T05:56:38Z" level=info msg="Removing container [rke-etcd-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:38Z" level=info msg="[remove/rke-etcd-port-listener] Successfully removed container on host [192.168.50.119]"
    time="2020-04-21T05:56:38Z" level=info msg="Removing container [rke-cp-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:39Z" level=info msg="[remove/rke-cp-port-listener] Successfully removed container on host [192.168.50.119]"
    time="2020-04-21T05:56:39Z" level=info msg="Removing container [rke-worker-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:39Z" level=info msg="[remove/rke-worker-port-listener] Successfully removed container on host [192.168.50.119]"
    time="2020-04-21T05:56:39Z" level=info msg="[network] Port listener containers removed successfully"
    time="2020-04-21T05:56:39Z" level=info msg="[certificates] kube-apiserver certificate changed, force deploying certs"
    time="2020-04-21T05:56:39Z" level=info msg="[certificates] Deploying kubernetes certificates to Cluster nodes"
    time="2020-04-21T05:56:39Z" level=info msg="Checking if container [cert-deployer] is running on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:39Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:39Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:56:39Z" level=info msg="Starting container [cert-deployer] on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:39Z" level=info msg="Checking if container [cert-deployer] is running on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:44Z" level=info msg="Checking if container [cert-deployer] is running on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:44Z" level=info msg="Removing container [cert-deployer] on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:44Z" level=info msg="[reconcile] Rebuilding and updating local kube config"
    time="2020-04-21T05:56:44Z" level=info msg="Successfully Deployed local admin kubeconfig at [./kube_config_cluster.yml]"
    time="2020-04-21T05:56:44Z" level=info msg="[certificates] Successfully deployed kubernetes certificates to Cluster nodes"
    time="2020-04-21T05:56:44Z" level=info msg="[file-deploy] Deploying file [/etc/kubernetes/kube-api-authn-webhook.yaml] to node [192.168.50.119]"
    time="2020-04-21T05:56:44Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:44Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T05:56:44Z" level=info msg="Starting container [file-deployer] on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:45Z" level=info msg="Successfully started [file-deployer] container on host [192.168.50.119]"
    time="2020-04-21T05:56:45Z" level=info msg="Waiting for [file-deployer] container to exit on host [192.168.50.119]"
    time="2020-04-21T05:56:45Z" level=info msg="Waiting for [file-deployer] container to exit on host [192.168.50.119]"
    time="2020-04-21T05:56:45Z" level=info msg="Container [file-deployer] is still running on host [192.168.50.119]"
    time="2020-04-21T05:56:46Z" level=info msg="Waiting for [file-deployer] container to exit on host [192.168.50.119]"
    time="2020-04-21T05:56:46Z" level=info msg="Removing container [file-deployer] on host [192.168.50.119], try #1"
    time="2020-04-21T05:56:46Z" level=info msg="[remove/file-deployer] Successfully removed container on host [192.168.50.119]"
    time="2020-04-21T05:56:46Z" level=info msg="[/etc/kubernetes/kube-api-authn-webhook.yaml] Successfully deployed authentication webhook config Cluster nodes"
    time="2020-04-21T05:56:46Z" level=info msg="[reconcile] Reconciling cluster state"
    time="2020-04-21T05:56:46Z" level=fatal msg="Failed to reconcile etcd plane: Etcd plane nodes are replaced. Stopping provisioning. Please restore your cluster from backup."
  stdout_lines: <omitted>
2020-04-21 05:56:46,392 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 05:56:46,393 p=1 u=root |  127.0.0.1                  : ok=6    changed=1    unreachable=0    failed=1    skipped=4    rescued=0    ignored=0   
2020-04-21 05:56:46,394 p=1 u=root |  192.168.50.119             : ok=7    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 05:58:42,605 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:58:42,636 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:58:42,678 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:58:43,860 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 05:58:43,862 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 05:58:44,394 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 05:58:44,878 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 05:58:46,515 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 05:58:46,519 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 05:58:47,290 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 05:58:47,292 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-21 05:58:48,096 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 05:58:48,099 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-21 05:58:48,760 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-21 05:58:48,769 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-21 05:58:48,791 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:58:49,106 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-21 05:58:49,107 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:58:49,281 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:58:49,849 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-21 05:58:49,851 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 05:58:50,443 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-21 05:58:50,445 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 05:58:50,464 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:58:50,769 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-21 05:58:50,772 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:58:51,493 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-21 05:58:51,494 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=1.1.1.132 )
2020-04-21 05:58:51,519 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:58:51,839 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-21 05:58:51,846 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:58:52,194 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-21 05:58:52,195 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:58:53,190 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-21 05:58:53,191 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:58:53,760 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-21 05:58:53,767 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=true 
  cmd: cd /etc/ansible/cluster/local/rke; /etc/ansible/bin/rke_v0.3.2 -d --config cluster.yml
  delta: '0:00:00.152067'
  end: '2020-04-21 05:58:53.737749'
  msg: non-zero return code
  rc: 1
  start: '2020-04-21 05:58:53.585682'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    Incorrect Usage.
  
    NAME:
       rke - Rancher Kubernetes Engine, an extremely simple, lightning fast Kubernetes installer that works everywhere
  
    USAGE:
       rke_v0.3.2 [global options] command [command options] [arguments...]
  
    VERSION:
       v0.3.2
  
    AUTHOR(S):
       Rancher Labs, Inc.
  
    COMMANDS:
         up       Bring the cluster up
         remove   Teardown the cluster and clean cluster nodes
         version  Show cluster Kubernetes version
         config   Setup cluster configuration
         etcd     etcd snapshot save/restore operations in k8s cluster
         cert     Certificates management for RKE cluster
         help, h  Shows a list of commands or help for one command
  
    GLOBAL OPTIONS:
       --debug, -d    Debug logging
       --quiet, -q    Quiet mode, disables logging and only critical output will be printed
       --help, -h     show help
       --version, -v  print the version
  
    time="2020-04-21T05:58:53Z" level=fatal msg="flag provided but not defined: -config"
  stdout_lines: <omitted>
2020-04-21 05:58:53,771 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 05:58:53,772 p=1 u=root |  127.0.0.1                  : ok=6    changed=1    unreachable=0    failed=1    skipped=4    rescued=0    ignored=0   
2020-04-21 05:58:53,774 p=1 u=root |  192.168.50.119             : ok=7    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 05:59:24,725 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:59:24,749 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:59:24,780 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:59:25,878 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 05:59:25,880 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 05:59:26,421 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 05:59:26,877 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 05:59:28,480 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 05:59:28,482 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 05:59:29,247 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 05:59:29,248 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-21 05:59:30,047 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 05:59:30,049 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-21 05:59:30,679 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-21 05:59:30,681 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-21 05:59:30,704 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:59:31,017 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-21 05:59:31,018 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:59:31,179 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:59:31,761 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-21 05:59:31,763 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 05:59:32,408 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-21 05:59:32,409 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 05:59:32,435 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:59:32,770 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-21 05:59:32,772 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:59:33,606 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-21 05:59:33,609 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=1.1.1.132 )
2020-04-21 05:59:33,645 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:59:34,103 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-21 05:59:34,107 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:59:34,443 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-21 05:59:34,445 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:59:35,798 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-21 05:59:35,801 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 05:59:36,389 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-21 05:59:36,396 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=true 
  cmd: cd /etc/ansible/cluster/local/rke; /etc/ansible/bin/rke_v0.3.2 -d --config cluster.yml
  delta: '0:00:00.139538'
  end: '2020-04-21 05:59:36.372459'
  msg: non-zero return code
  rc: 1
  start: '2020-04-21 05:59:36.232921'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    Incorrect Usage.
  
    NAME:
       rke - Rancher Kubernetes Engine, an extremely simple, lightning fast Kubernetes installer that works everywhere
  
    USAGE:
       rke_v0.3.2 [global options] command [command options] [arguments...]
  
    VERSION:
       v0.3.2
  
    AUTHOR(S):
       Rancher Labs, Inc.
  
    COMMANDS:
         up       Bring the cluster up
         remove   Teardown the cluster and clean cluster nodes
         version  Show cluster Kubernetes version
         config   Setup cluster configuration
         etcd     etcd snapshot save/restore operations in k8s cluster
         cert     Certificates management for RKE cluster
         help, h  Shows a list of commands or help for one command
  
    GLOBAL OPTIONS:
       --debug, -d    Debug logging
       --quiet, -q    Quiet mode, disables logging and only critical output will be printed
       --help, -h     show help
       --version, -v  print the version
  
    time="2020-04-21T05:59:36Z" level=fatal msg="flag provided but not defined: -config"
  stdout_lines: <omitted>
2020-04-21 05:59:36,398 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 05:59:36,399 p=1 u=root |  127.0.0.1                  : ok=6    changed=1    unreachable=0    failed=1    skipped=4    rescued=0    ignored=0   
2020-04-21 05:59:36,400 p=1 u=root |  192.168.50.119             : ok=7    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 05:59:59,146 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 05:59:59,171 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 05:59:59,203 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:00:00,583 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 06:00:00,588 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 06:00:01,255 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 06:00:01,738 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 06:00:03,535 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 06:00:03,540 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 06:00:04,390 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 06:00:04,392 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-21 06:00:05,283 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 06:00:05,287 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-21 06:00:05,922 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-21 06:00:05,925 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-21 06:00:05,956 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:00:06,359 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-21 06:00:06,360 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:00:06,567 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:00:07,099 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-21 06:00:07,101 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:00:07,657 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-21 06:00:07,658 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:00:07,684 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:00:08,011 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-21 06:00:08,013 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:00:08,713 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-21 06:00:08,715 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=1.1.1.132 )
2020-04-21 06:00:08,737 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:00:09,058 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-21 06:00:09,059 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:00:09,353 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-21 06:00:09,354 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:00:10,356 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-21 06:00:10,358 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:00:10,892 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-21 06:00:10,900 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=true 
  cmd: cd /etc/ansible/cluster/local/rke; /etc/ansible/bin/rke_v0.3.2 -d --config cluster.yml
  delta: '0:00:00.155686'
  end: '2020-04-21 06:00:10.873192'
  msg: non-zero return code
  rc: 1
  start: '2020-04-21 06:00:10.717506'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    Incorrect Usage.
  
    NAME:
       rke - Rancher Kubernetes Engine, an extremely simple, lightning fast Kubernetes installer that works everywhere
  
    USAGE:
       rke_v0.3.2 [global options] command [command options] [arguments...]
  
    VERSION:
       v0.3.2
  
    AUTHOR(S):
       Rancher Labs, Inc.
  
    COMMANDS:
         up       Bring the cluster up
         remove   Teardown the cluster and clean cluster nodes
         version  Show cluster Kubernetes version
         config   Setup cluster configuration
         etcd     etcd snapshot save/restore operations in k8s cluster
         cert     Certificates management for RKE cluster
         help, h  Shows a list of commands or help for one command
  
    GLOBAL OPTIONS:
       --debug, -d    Debug logging
       --quiet, -q    Quiet mode, disables logging and only critical output will be printed
       --help, -h     show help
       --version, -v  print the version
  
    time="2020-04-21T06:00:10Z" level=fatal msg="flag provided but not defined: -config"
  stdout_lines: <omitted>
2020-04-21 06:00:10,903 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 06:00:10,905 p=1 u=root |  127.0.0.1                  : ok=6    changed=1    unreachable=0    failed=1    skipped=4    rescued=0    ignored=0   
2020-04-21 06:00:10,906 p=1 u=root |  192.168.50.119             : ok=7    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 06:00:32,064 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:00:32,086 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:00:32,118 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:00:33,239 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 06:00:33,242 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 06:00:33,792 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 06:00:34,258 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 06:00:34,577 p=1 u=root |   [ERROR]: User interrupted execution

2020-04-21 06:01:57,211 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:01:57,237 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:01:57,276 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:01:58,446 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 06:01:58,449 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 06:01:58,993 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 06:01:59,535 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 06:02:01,508 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 06:02:01,511 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 06:02:02,486 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 06:02:02,487 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-21 06:02:03,359 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 06:02:03,360 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-21 06:02:04,033 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-21 06:02:04,036 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-21 06:02:04,065 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:02:04,398 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-21 06:02:04,400 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:02:04,582 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:02:05,152 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-21 06:02:05,154 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:02:05,722 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-21 06:02:05,724 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:02:05,752 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:02:06,071 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-21 06:02:06,073 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:02:06,709 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-21 06:02:06,711 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=1.1.1.132 )
2020-04-21 06:02:06,738 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:02:07,054 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-21 06:02:07,055 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:02:07,378 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-21 06:02:07,380 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:02:08,357 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-21 06:02:08,358 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:02:08,925 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-21 06:02:08,932 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=true 
  cmd: cd /etc/ansible/cluster/local/rke; /etc/ansible/bin/rke_v0.3.2 -d --config cluster.yml
  delta: '0:00:00.183201'
  end: '2020-04-21 06:02:08.904456'
  msg: non-zero return code
  rc: 1
  start: '2020-04-21 06:02:08.721255'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    Incorrect Usage.
  
    NAME:
       rke - Rancher Kubernetes Engine, an extremely simple, lightning fast Kubernetes installer that works everywhere
  
    USAGE:
       rke_v0.3.2 [global options] command [command options] [arguments...]
  
    VERSION:
       v0.3.2
  
    AUTHOR(S):
       Rancher Labs, Inc.
  
    COMMANDS:
         up       Bring the cluster up
         remove   Teardown the cluster and clean cluster nodes
         version  Show cluster Kubernetes version
         config   Setup cluster configuration
         etcd     etcd snapshot save/restore operations in k8s cluster
         cert     Certificates management for RKE cluster
         help, h  Shows a list of commands or help for one command
  
    GLOBAL OPTIONS:
       --debug, -d    Debug logging
       --quiet, -q    Quiet mode, disables logging and only critical output will be printed
       --help, -h     show help
       --version, -v  print the version
  
    time="2020-04-21T06:02:08Z" level=fatal msg="flag provided but not defined: -config"
  stdout_lines: <omitted>
2020-04-21 06:02:08,938 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 06:02:08,939 p=1 u=root |  127.0.0.1                  : ok=6    changed=1    unreachable=0    failed=1    skipped=4    rescued=0    ignored=0   
2020-04-21 06:02:08,939 p=1 u=root |  192.168.50.119             : ok=7    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 06:08:06,653 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:08:06,680 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:08:06,714 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:08:06,891 p=1 u=root |   [ERROR]: User interrupted execution

2020-04-21 06:08:26,030 p=1 u=root |   [ERROR]: User interrupted execution

2020-04-21 06:13:13,536 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:13:13,561 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:13:13,590 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:13:14,726 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 06:13:14,728 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 06:13:15,264 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 06:13:15,732 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 06:13:17,369 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 06:13:17,371 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 06:13:18,111 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 06:13:18,112 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-21 06:13:18,500 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 06:13:18,504 p=1 u=root |  failed: [192.168.50.119] (item=/tmp/node_clean.sh) => 
  ansible_loop_var: item
  item: /tmp/node_clean.sh
  msg: 'Data could not be sent to remote host "192.168.50.119". Make sure this host can be reached over ssh: '
  unreachable: true
2020-04-21 06:13:18,509 p=1 u=root |  fatal: [192.168.50.119]: UNREACHABLE! => changed=false 
  msg: All items completed
  results:
  - ansible_loop_var: item
    item: /tmp/node_clean.sh
    msg: 'Data could not be sent to remote host "192.168.50.119". Make sure this host can be reached over ssh: '
    unreachable: true
2020-04-21 06:13:18,511 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 06:13:18,511 p=1 u=root |  192.168.50.119             : ok=3    changed=2    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 06:15:35,752 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:15:35,783 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:15:35,821 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:15:37,001 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 06:15:37,004 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 06:15:37,509 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 06:15:37,957 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 06:15:39,485 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 06:15:39,489 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 06:15:40,213 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 06:15:40,214 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-21 06:15:40,962 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 06:15:40,963 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-21 06:15:41,615 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-21 06:15:41,616 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-21 06:15:41,634 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:15:41,958 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-21 06:15:41,961 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:15:42,124 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:15:42,697 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-21 06:15:42,699 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:15:43,239 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-21 06:15:43,241 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:15:43,267 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:15:43,566 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-21 06:15:43,568 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:15:44,222 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-21 06:15:44,223 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=1.1.1.132 )
2020-04-21 06:15:44,249 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:15:44,554 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-21 06:15:44,555 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:15:44,853 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-21 06:15:44,855 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:15:45,722 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-21 06:15:45,723 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:15:46,363 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-21 06:15:46,373 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=true 
  cmd: cd /etc/ansible/cluster/local/rke; /etc/ansible/bin/rke_v0.3.2 -d --config cluster.yml
  delta: '0:00:00.206987'
  end: '2020-04-21 06:15:46.339398'
  msg: non-zero return code
  rc: 1
  start: '2020-04-21 06:15:46.132411'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    Incorrect Usage.
  
    NAME:
       rke - Rancher Kubernetes Engine, an extremely simple, lightning fast Kubernetes installer that works everywhere
  
    USAGE:
       rke_v0.3.2 [global options] command [command options] [arguments...]
  
    VERSION:
       v0.3.2
  
    AUTHOR(S):
       Rancher Labs, Inc.
  
    COMMANDS:
         up       Bring the cluster up
         remove   Teardown the cluster and clean cluster nodes
         version  Show cluster Kubernetes version
         config   Setup cluster configuration
         etcd     etcd snapshot save/restore operations in k8s cluster
         cert     Certificates management for RKE cluster
         help, h  Shows a list of commands or help for one command
  
    GLOBAL OPTIONS:
       --debug, -d    Debug logging
       --quiet, -q    Quiet mode, disables logging and only critical output will be printed
       --help, -h     show help
       --version, -v  print the version
  
    time="2020-04-21T06:15:46Z" level=fatal msg="flag provided but not defined: -config"
  stdout_lines: <omitted>
2020-04-21 06:15:46,376 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 06:15:46,378 p=1 u=root |  127.0.0.1                  : ok=6    changed=1    unreachable=0    failed=1    skipped=4    rescued=0    ignored=0   
2020-04-21 06:15:46,379 p=1 u=root |  192.168.50.119             : ok=7    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 06:17:15,537 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:17:15,563 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:17:15,593 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:17:16,749 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 06:17:16,752 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 06:17:17,250 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 06:17:17,695 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 06:17:19,359 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 06:17:19,363 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 06:17:20,083 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 06:17:20,085 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-21 06:17:20,838 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 06:17:20,839 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-21 06:17:21,444 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-21 06:17:21,445 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-21 06:17:21,463 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:17:21,771 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-21 06:17:21,772 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:17:21,923 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:17:22,479 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-21 06:17:22,481 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:17:23,020 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-21 06:17:23,022 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:17:23,044 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:17:23,350 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-21 06:17:23,353 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:17:23,941 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-21 06:17:23,943 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=1.1.1.132 )
2020-04-21 06:17:23,966 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:17:24,262 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-21 06:17:24,264 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:17:24,561 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-21 06:17:24,563 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:17:25,467 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-21 06:17:25,468 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:17:26,007 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-21 06:17:26,017 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=true 
  cmd: cd /etc/ansible/cluster/local/rke; /etc/ansible/bin/rke_v0.3.2  --config cluster.yml
  delta: '0:00:00.172068'
  end: '2020-04-21 06:17:25.992119'
  msg: non-zero return code
  rc: 1
  start: '2020-04-21 06:17:25.820051'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    Incorrect Usage.
  
    NAME:
       rke - Rancher Kubernetes Engine, an extremely simple, lightning fast Kubernetes installer that works everywhere
  
    USAGE:
       rke_v0.3.2 [global options] command [command options] [arguments...]
  
    VERSION:
       v0.3.2
  
    AUTHOR(S):
       Rancher Labs, Inc.
  
    COMMANDS:
         up       Bring the cluster up
         remove   Teardown the cluster and clean cluster nodes
         version  Show cluster Kubernetes version
         config   Setup cluster configuration
         etcd     etcd snapshot save/restore operations in k8s cluster
         cert     Certificates management for RKE cluster
         help, h  Shows a list of commands or help for one command
  
    GLOBAL OPTIONS:
       --debug, -d    Debug logging
       --quiet, -q    Quiet mode, disables logging and only critical output will be printed
       --help, -h     show help
       --version, -v  print the version
  
    time="2020-04-21T06:17:25Z" level=fatal msg="flag provided but not defined: -config"
  stdout_lines: <omitted>
2020-04-21 06:17:26,019 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 06:17:26,020 p=1 u=root |  127.0.0.1                  : ok=6    changed=1    unreachable=0    failed=1    skipped=4    rescued=0    ignored=0   
2020-04-21 06:17:26,021 p=1 u=root |  192.168.50.119             : ok=7    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 06:18:20,190 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:18:20,218 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:18:20,248 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:18:21,335 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 06:18:21,337 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 06:18:21,851 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 06:18:22,294 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 06:18:23,789 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 06:18:23,793 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 06:18:24,506 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 06:18:24,507 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-21 06:18:25,234 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 06:18:25,236 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-21 06:18:25,842 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-21 06:18:25,844 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-21 06:18:25,860 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:18:26,179 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-21 06:18:26,180 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:18:26,330 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:18:26,870 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-21 06:18:26,872 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:18:27,419 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-21 06:18:27,420 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:18:27,440 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:18:27,742 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-21 06:18:27,744 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:18:28,411 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-21 06:18:28,413 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=1.1.1.132 )
2020-04-21 06:18:28,433 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:18:28,778 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-21 06:18:28,781 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:18:29,085 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-21 06:18:29,086 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:18:30,068 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-21 06:18:30,070 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:18:30,646 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-21 06:18:30,662 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=true 
  cmd: cd /etc/ansible/cluster/local/rke; /etc/ansible/bin/rke_v0.3.2 ${VALUE} --config cluster.yml
  delta: '0:00:00.190413'
  end: '2020-04-21 06:18:30.625393'
  msg: non-zero return code
  rc: 1
  start: '2020-04-21 06:18:30.434980'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    Incorrect Usage.
  
    NAME:
       rke - Rancher Kubernetes Engine, an extremely simple, lightning fast Kubernetes installer that works everywhere
  
    USAGE:
       rke_v0.3.2 [global options] command [command options] [arguments...]
  
    VERSION:
       v0.3.2
  
    AUTHOR(S):
       Rancher Labs, Inc.
  
    COMMANDS:
         up       Bring the cluster up
         remove   Teardown the cluster and clean cluster nodes
         version  Show cluster Kubernetes version
         config   Setup cluster configuration
         etcd     etcd snapshot save/restore operations in k8s cluster
         cert     Certificates management for RKE cluster
         help, h  Shows a list of commands or help for one command
  
    GLOBAL OPTIONS:
       --debug, -d    Debug logging
       --quiet, -q    Quiet mode, disables logging and only critical output will be printed
       --help, -h     show help
       --version, -v  print the version
  
    time="2020-04-21T06:18:30Z" level=fatal msg="flag provided but not defined: -config"
  stdout_lines: <omitted>
2020-04-21 06:18:30,669 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 06:18:30,672 p=1 u=root |  127.0.0.1                  : ok=6    changed=1    unreachable=0    failed=1    skipped=4    rescued=0    ignored=0   
2020-04-21 06:18:30,673 p=1 u=root |  192.168.50.119             : ok=7    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 06:19:14,283 p=1 u=root |   [ERROR]: User interrupted execution

2020-04-21 06:23:17,396 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:23:17,424 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:23:17,450 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:23:18,560 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 06:23:18,563 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 06:23:19,069 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 06:23:19,518 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 06:23:20,999 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 06:23:21,002 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 06:23:21,718 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 06:23:21,720 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-21 06:23:22,457 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 06:23:22,458 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-21 06:23:23,049 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-21 06:23:23,052 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-21 06:23:23,074 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:23:23,374 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-21 06:23:23,376 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:23:23,535 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:23:24,081 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-21 06:23:24,084 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:23:24,623 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-21 06:23:24,626 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:23:24,649 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:23:24,950 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-21 06:23:24,951 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:23:25,688 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-21 06:23:25,690 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=1.1.1.132 )
2020-04-21 06:23:25,708 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:23:26,022 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-21 06:23:26,024 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:23:26,322 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-21 06:23:26,323 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:23:27,222 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-21 06:23:27,224 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:23:30,586 p=1 u=root |   [ERROR]: User interrupted execution

2020-04-21 06:24:12,031 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:24:12,056 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:24:12,082 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:24:13,173 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 06:24:13,175 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 06:24:13,887 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 06:24:14,331 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 06:24:15,779 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 06:24:15,781 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 06:24:17,056 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 06:24:17,057 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-21 06:24:17,979 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 06:24:17,981 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-21 06:24:18,583 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-21 06:24:18,585 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-21 06:24:18,601 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:24:18,916 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-21 06:24:18,917 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:24:19,116 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:24:19,621 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-21 06:24:19,623 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:24:20,162 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-21 06:24:20,164 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:24:20,182 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:24:20,464 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-21 06:24:20,466 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:24:21,080 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-21 06:24:21,082 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=192.168.50.119 )
2020-04-21 06:24:21,104 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:24:21,421 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-21 06:24:21,422 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:24:21,716 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-21 06:24:21,717 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:24:22,687 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-21 06:24:22,689 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 06:24:35,897 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-21 06:24:35,941 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=true 
  cmd: cd /etc/ansible/cluster/local/rke; /etc/ansible/bin/rke_v0.3.2 up --config cluster.yml
  delta: '0:00:12.843071'
  end: '2020-04-21 06:24:35.876945'
  msg: non-zero return code
  rc: 1
  start: '2020-04-21 06:24:23.033874'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    time="2020-04-21T06:24:23Z" level=info msg="Running RKE version: v0.3.2"
    time="2020-04-21T06:24:23Z" level=info msg="Initiating Kubernetes cluster"
    time="2020-04-21T06:24:23Z" level=info msg="[certificates] Generating Kubernetes API server certificates"
    time="2020-04-21T06:24:23Z" level=info msg="[certificates] Generating admin certificates and kubeconfig"
    time="2020-04-21T06:24:23Z" level=info msg="Successfully Deployed state file at [./cluster.rkestate]"
    time="2020-04-21T06:24:23Z" level=info msg="Building Kubernetes cluster"
    time="2020-04-21T06:24:23Z" level=info msg="[dialer] Setup tunnel for host [192.168.50.119]"
    time="2020-04-21T06:24:23Z" level=info msg="[network] Deploying port listener containers"
    time="2020-04-21T06:24:23Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:23Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T06:24:23Z" level=info msg="Starting container [rke-etcd-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:24Z" level=info msg="[network] Successfully started [rke-etcd-port-listener] container on host [192.168.50.119]"
    time="2020-04-21T06:24:24Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:24Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T06:24:24Z" level=info msg="Starting container [rke-cp-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:25Z" level=info msg="[network] Successfully started [rke-cp-port-listener] container on host [192.168.50.119]"
    time="2020-04-21T06:24:25Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:25Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T06:24:25Z" level=info msg="Starting container [rke-worker-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:26Z" level=info msg="[network] Successfully started [rke-worker-port-listener] container on host [192.168.50.119]"
    time="2020-04-21T06:24:26Z" level=info msg="[network] Port listener containers deployed successfully"
    time="2020-04-21T06:24:26Z" level=info msg="[network] Running control plane -> etcd port checks"
    time="2020-04-21T06:24:26Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:26Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T06:24:26Z" level=info msg="Starting container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:26Z" level=info msg="[network] Successfully started [rke-port-checker] container on host [192.168.50.119]"
    time="2020-04-21T06:24:27Z" level=info msg="Removing container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:27Z" level=info msg="[network] Running control plane -> worker port checks"
    time="2020-04-21T06:24:27Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:27Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T06:24:27Z" level=info msg="Starting container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:27Z" level=info msg="[network] Successfully started [rke-port-checker] container on host [192.168.50.119]"
    time="2020-04-21T06:24:27Z" level=info msg="Removing container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:27Z" level=info msg="[network] Running workers -> control plane port checks"
    time="2020-04-21T06:24:27Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:27Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T06:24:27Z" level=info msg="Starting container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:28Z" level=info msg="[network] Successfully started [rke-port-checker] container on host [192.168.50.119]"
    time="2020-04-21T06:24:28Z" level=info msg="Removing container [rke-port-checker] on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:28Z" level=info msg="[network] Checking KubeAPI port Control Plane hosts"
    time="2020-04-21T06:24:28Z" level=info msg="[network] Removing port listener containers"
    time="2020-04-21T06:24:28Z" level=info msg="Removing container [rke-etcd-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:28Z" level=info msg="[remove/rke-etcd-port-listener] Successfully removed container on host [192.168.50.119]"
    time="2020-04-21T06:24:28Z" level=info msg="Removing container [rke-cp-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:28Z" level=info msg="[remove/rke-cp-port-listener] Successfully removed container on host [192.168.50.119]"
    time="2020-04-21T06:24:28Z" level=info msg="Removing container [rke-worker-port-listener] on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:28Z" level=info msg="[remove/rke-worker-port-listener] Successfully removed container on host [192.168.50.119]"
    time="2020-04-21T06:24:28Z" level=info msg="[network] Port listener containers removed successfully"
    time="2020-04-21T06:24:28Z" level=info msg="[certificates] kube-apiserver certificate changed, force deploying certs"
    time="2020-04-21T06:24:28Z" level=info msg="[certificates] Deploying kubernetes certificates to Cluster nodes"
    time="2020-04-21T06:24:28Z" level=info msg="Checking if container [cert-deployer] is running on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:28Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:28Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T06:24:29Z" level=info msg="Starting container [cert-deployer] on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:29Z" level=info msg="Checking if container [cert-deployer] is running on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:34Z" level=info msg="Checking if container [cert-deployer] is running on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:34Z" level=info msg="Removing container [cert-deployer] on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:34Z" level=info msg="[reconcile] Rebuilding and updating local kube config"
    time="2020-04-21T06:24:34Z" level=info msg="Successfully Deployed local admin kubeconfig at [./kube_config_cluster.yml]"
    time="2020-04-21T06:24:34Z" level=info msg="[certificates] Successfully deployed kubernetes certificates to Cluster nodes"
    time="2020-04-21T06:24:34Z" level=info msg="[file-deploy] Deploying file [/etc/kubernetes/kube-api-authn-webhook.yaml] to node [192.168.50.119]"
    time="2020-04-21T06:24:34Z" level=info msg="Checking if image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:34Z" level=info msg="Image [registry.cn-hangzhou.aliyuncs.com/rancher/rke-tools:v0.1.50] exists on host [192.168.50.119]"
    time="2020-04-21T06:24:34Z" level=info msg="Starting container [file-deployer] on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:34Z" level=info msg="Successfully started [file-deployer] container on host [192.168.50.119]"
    time="2020-04-21T06:24:34Z" level=info msg="Waiting for [file-deployer] container to exit on host [192.168.50.119]"
    time="2020-04-21T06:24:34Z" level=info msg="Waiting for [file-deployer] container to exit on host [192.168.50.119]"
    time="2020-04-21T06:24:34Z" level=info msg="Container [file-deployer] is still running on host [192.168.50.119]"
    time="2020-04-21T06:24:35Z" level=info msg="Waiting for [file-deployer] container to exit on host [192.168.50.119]"
    time="2020-04-21T06:24:35Z" level=info msg="Removing container [file-deployer] on host [192.168.50.119], try #1"
    time="2020-04-21T06:24:35Z" level=info msg="[remove/file-deployer] Successfully removed container on host [192.168.50.119]"
    time="2020-04-21T06:24:35Z" level=info msg="[/etc/kubernetes/kube-api-authn-webhook.yaml] Successfully deployed authentication webhook config Cluster nodes"
    time="2020-04-21T06:24:35Z" level=info msg="[reconcile] Reconciling cluster state"
    time="2020-04-21T06:24:35Z" level=fatal msg="Failed to reconcile etcd plane: Etcd plane nodes are replaced. Stopping provisioning. Please restore your cluster from backup."
  stdout_lines: <omitted>
2020-04-21 06:24:35,946 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 06:24:35,947 p=1 u=root |  127.0.0.1                  : ok=6    changed=2    unreachable=0    failed=1    skipped=4    rescued=0    ignored=0   
2020-04-21 06:24:35,948 p=1 u=root |  192.168.50.119             : ok=7    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 06:25:29,181 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:25:29,208 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:25:29,243 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:25:30,334 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 06:25:30,337 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 06:25:30,844 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 06:25:31,294 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 06:25:32,741 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 06:25:32,743 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 06:25:33,462 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 06:25:33,463 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-21 06:25:34,263 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 06:25:34,265 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-21 06:25:34,878 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-21 06:25:34,880 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-21 06:25:34,907 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:25:35,216 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-21 06:25:35,218 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:25:35,366 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:25:35,881 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-21 06:25:35,883 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:25:36,427 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-21 06:25:36,429 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:25:36,457 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:25:36,763 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-21 06:25:36,764 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:25:37,346 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-21 06:25:37,349 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=192.168.50.119 )
2020-04-21 06:25:37,372 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:25:37,665 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-21 06:25:37,666 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:25:37,948 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-21 06:25:37,949 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 06:25:39,190 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-21 06:25:39,192 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 06:27:18,419 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-21 06:27:18,424 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 06:27:19,044 p=1 u=root |  TASK [k8s : 生成Core DNS配置映射] ******************************************************************************************************************************************************************************************
2020-04-21 06:27:19,046 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 06:27:19,871 p=1 u=root |  TASK [k8s : 更新Core DNS配置] ********************************************************************************************************************************************************************************************
2020-04-21 06:27:19,924 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 06:27:19,952 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:27:20,265 p=1 u=root |  TASK [rancher : 检查Rancher工作目录是否存在] ***********************************************************************************************************************************************************************************
2020-04-21 06:27:20,267 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:27:21,199 p=1 u=root |  TASK [rancher : 更新Rancher HA 安装脚本] ***********************************************************************************************************************************************************************************
2020-04-21 06:27:21,201 p=1 u=root |  ok: [127.0.0.1] => (item={'src': '/etc/ansible/roles/rancher/templates/rancher-install.sh.j2', 'dest': '/etc/ansible/cluster/local/rancher/rancher-install.sh'})
2020-04-21 06:27:22,619 p=1 u=root |  TASK [rancher : 安装Rancher HA] ****************************************************************************************************************************************************************************************
2020-04-21 06:27:22,621 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 06:27:22,653 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:27:23,082 p=1 u=root |  TASK [kubectl : 创建kubectl配置目录，如果存在则跳过] *******************************************************************************************************************************************************************************
2020-04-21 06:27:23,084 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:27:23,876 p=1 u=root |  TASK [kubectl : 检查 kubecfg 文件是否生成] ***********************************************************************************************************************************************************************************
2020-04-21 06:27:23,880 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:27:25,291 p=1 u=root |  TASK [kubectl : 拷贝 kubecfg 文件到 local 集群的所有节点] ************************************************************************************************************************************************************************
2020-04-21 06:27:25,298 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/cluster/local/rke/kube_config_cluster.yml', 'dest': '~/.kube/config'})
2020-04-21 06:27:25,948 p=1 u=root |  TASK [kubectl : 配置 kubectl 自动补全] *************************************************************************************************************************************************************************************
2020-04-21 06:27:25,953 p=1 u=root |  changed: [192.168.50.119]
2020-04-21 06:27:25,963 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 06:27:25,967 p=1 u=root |  127.0.0.1                  : ok=12   changed=7    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2020-04-21 06:27:25,969 p=1 u=root |  192.168.50.119             : ok=11   changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 06:36:42,783 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:36:42,815 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:36:42,844 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:36:44,221 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 06:36:44,225 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 06:36:45,061 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 06:36:45,783 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 06:36:47,748 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 06:36:47,749 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 06:37:01,067 p=1 u=root |  TASK [init : 执行 docker 初始化] ******************************************************************************************************************************************************************************************
2020-04-21 06:37:01,070 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-21 06:37:04,025 p=1 u=root |  TASK [init : 执行 node 清理] *********************************************************************************************************************************************************************************************
2020-04-21 06:37:04,027 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-21 06:37:04,979 p=1 u=root |  TASK [init : 拷贝kubectl工具到节点] *****************************************************************************************************************************************************************************************
2020-04-21 06:37:04,981 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-21 06:37:05,007 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:37:05,458 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-21 06:37:05,460 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:37:05,623 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:37:06,361 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-21 06:37:06,362 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:37:07,055 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-21 06:37:07,061 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:37:07,096 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:37:07,476 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-21 06:37:07,479 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:37:08,253 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-21 06:37:08,255 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=192.168.50.119 )
2020-04-21 06:37:08,283 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:37:08,728 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-21 06:37:08,731 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:37:09,242 p=1 u=root |  TASK [k8s : 备份旧 k8s 集群数据] ********************************************************************************************************************************************************************************************
2020-04-21 06:37:09,246 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 06:37:09,767 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-21 06:37:09,769 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 06:37:11,463 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-21 06:37:11,465 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 06:38:49,067 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-21 06:38:49,072 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 06:38:49,823 p=1 u=root |  TASK [k8s : 生成Core DNS配置映射] ******************************************************************************************************************************************************************************************
2020-04-21 06:38:49,825 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 06:38:50,608 p=1 u=root |  TASK [k8s : 更新Core DNS配置] ********************************************************************************************************************************************************************************************
2020-04-21 06:38:50,611 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 06:38:50,635 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:38:50,976 p=1 u=root |  TASK [rancher : 检查Rancher工作目录是否存在] ***********************************************************************************************************************************************************************************
2020-04-21 06:38:50,978 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:38:51,953 p=1 u=root |  TASK [rancher : 更新Rancher HA 安装脚本] ***********************************************************************************************************************************************************************************
2020-04-21 06:38:51,955 p=1 u=root |  ok: [127.0.0.1] => (item={'src': '/etc/ansible/roles/rancher/templates/rancher-install.sh.j2', 'dest': '/etc/ansible/cluster/local/rancher/rancher-install.sh'})
2020-04-21 06:38:53,225 p=1 u=root |  TASK [rancher : 安装Rancher HA] ****************************************************************************************************************************************************************************************
2020-04-21 06:38:53,227 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 06:38:53,272 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:38:53,807 p=1 u=root |  TASK [kubectl : 创建kubectl配置目录，如果存在则跳过] *******************************************************************************************************************************************************************************
2020-04-21 06:38:53,809 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:38:54,220 p=1 u=root |  TASK [kubectl : 检查 kubecfg 文件是否生成] ***********************************************************************************************************************************************************************************
2020-04-21 06:38:54,223 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:38:55,379 p=1 u=root |  TASK [kubectl : 拷贝 kubecfg 文件到 local 集群的所有节点] ************************************************************************************************************************************************************************
2020-04-21 06:38:55,381 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/cluster/local/rke/kube_config_cluster.yml', 'dest': '~/.kube/config'})
2020-04-21 06:38:55,792 p=1 u=root |  TASK [kubectl : 配置 kubectl 自动补全] *************************************************************************************************************************************************************************************
2020-04-21 06:38:55,795 p=1 u=root |  changed: [192.168.50.119]
2020-04-21 06:38:55,801 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 06:38:55,802 p=1 u=root |  127.0.0.1                  : ok=13   changed=8    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2020-04-21 06:38:55,804 p=1 u=root |  192.168.50.119             : ok=11   changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 06:57:39,346 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:57:39,379 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:57:39,415 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:57:39,442 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:57:39,472 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:57:39,498 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:57:39,523 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:57:40,106 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-21 06:57:40,108 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:57:40,734 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-21 06:57:40,736 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:57:41,852 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-21 06:57:41,856 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:58:06,393 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-21 06:58:06,396 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 06:58:06,437 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:58:06,477 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:58:07,196 p=1 u=root |  TASK [kubectl : 创建kubectl配置目录，如果存在则跳过] *******************************************************************************************************************************************************************************
2020-04-21 06:58:07,198 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:58:07,620 p=1 u=root |  TASK [kubectl : 检查 kubecfg 文件是否生成] ***********************************************************************************************************************************************************************************
2020-04-21 06:58:07,621 p=1 u=root |  ok: [192.168.50.119]
2020-04-21 06:58:08,927 p=1 u=root |  TASK [kubectl : 拷贝 kubecfg 文件到 local 集群的所有节点] ************************************************************************************************************************************************************************
2020-04-21 06:58:08,929 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/cluster/local/rke/kube_config_cluster.yml', 'dest': '~/.kube/config'})
2020-04-21 06:58:09,275 p=1 u=root |  TASK [kubectl : 配置 kubectl 自动补全] *************************************************************************************************************************************************************************************
2020-04-21 06:58:09,278 p=1 u=root |  changed: [192.168.50.119]
2020-04-21 06:58:09,284 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 06:58:09,286 p=1 u=root |  127.0.0.1                  : ok=4    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-04-21 06:58:09,287 p=1 u=root |  192.168.50.119             : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 06:59:32,252 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:59:32,368 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:59:32,473 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:59:32,541 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:59:32,620 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:59:32,698 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:59:32,788 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:59:32,941 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 06:59:35,681 p=1 u=root |  TASK [rancher : 检查Rancher工作目录是否存在] ***********************************************************************************************************************************************************************************
2020-04-21 06:59:35,685 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 06:59:38,759 p=1 u=root |  TASK [rancher : 更新Rancher HA 升级脚本] ***********************************************************************************************************************************************************************************
2020-04-21 06:59:38,764 p=1 u=root |  changed: [127.0.0.1] => (item={'src': '/etc/ansible/roles/rancher/templates/rancher-update.sh.j2', 'dest': '/etc/ansible/cluster/local/rancher/rancher-update.sh'})
2020-04-21 06:59:43,420 p=1 u=root |  TASK [rancher : 升级Rancher HA] ****************************************************************************************************************************************************************************************
2020-04-21 06:59:43,422 p=1 u=root |  changed: [127.0.0.1]
2020-04-21 06:59:43,482 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 06:59:43,494 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 06:59:43,496 p=1 u=root |  127.0.0.1                  : ok=3    changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-04-21 09:55:16,877 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 09:55:18,079 p=1 u=root |  TASK [Gathering Facts] ***********************************************************************************************************************************************************************************************
2020-04-21 09:55:18,081 p=1 u=root |  ok: [127.0.0.1]
2020-04-21 09:55:18,093 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 09:55:18,121 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 09:55:19,585 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 09:55:19,586 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 09:55:20,348 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 09:55:20,797 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 09:55:23,785 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 09:55:23,788 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 09:55:23,810 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 09:55:23,837 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 09:55:23,858 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 09:55:23,880 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 09:55:23,905 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 09:55:23,928 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 09:55:23,936 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 09:55:23,937 p=1 u=root |  127.0.0.1                  : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 09:55:23,938 p=1 u=root |  192.168.50.119             : ok=2    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 09:56:35,497 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 09:56:35,526 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 09:56:35,560 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 09:56:36,758 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 09:56:36,762 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 09:56:37,584 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 09:56:38,157 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 09:56:40,074 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 09:56:40,079 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 09:56:40,112 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 09:56:40,144 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 09:56:40,179 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 09:56:40,219 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 09:56:40,258 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 09:56:40,299 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 09:56:40,311 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 09:56:40,313 p=1 u=root |  192.168.50.119             : ok=2    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-21 10:03:19,612 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 10:03:19,641 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 10:03:19,667 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 10:03:20,795 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-21 10:03:20,797 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-21 10:03:21,592 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-21 10:03:22,117 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-21 10:03:23,632 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-21 10:03:23,633 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-21 10:03:23,651 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 10:03:23,671 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 10:03:23,688 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 10:03:23,713 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 10:03:23,744 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-21 10:03:23,781 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-21 10:03:23,791 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-21 10:03:23,792 p=1 u=root |  192.168.50.119             : ok=2    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-22 09:00:09,824 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:00:09,855 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 09:00:14,192 p=1 u=root |  TASK [Gathering Facts] ***********************************************************************************************************************************************************************************************
2020-04-22 09:00:14,194 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 09:00:14,216 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 09:00:15,335 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-22 09:00:15,341 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-22 09:00:16,261 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-22 09:00:16,996 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-22 09:00:17,503 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-22 09:00:18,049 p=1 u=root |  TASK [init : adjust default sysctl values] ***************************************************************************************************************************************************************************
2020-04-22 09:00:18,052 p=1 u=root |  changed: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-04-22 09:00:18,258 p=1 u=root |  changed: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-04-22 09:00:18,496 p=1 u=root |  changed: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-04-22 09:00:18,746 p=1 u=root |  changed: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-04-22 09:00:18,983 p=1 u=root |  changed: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-04-22 09:00:19,206 p=1 u=root |  changed: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-04-22 09:00:19,429 p=1 u=root |  changed: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-04-22 09:00:25,896 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-22 09:00:25,899 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-22 09:00:25,919 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:00:25,944 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 09:00:25,963 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:00:25,984 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:00:26,005 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:00:26,029 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 09:00:26,039 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-22 09:00:26,040 p=1 u=root |  192.168.50.119             : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-22 09:01:06,897 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:01:06,930 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 09:01:06,968 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 09:01:08,270 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-22 09:01:08,272 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-22 09:01:08,768 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-22 09:01:09,340 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-22 09:01:09,816 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-22 09:01:10,375 p=1 u=root |  TASK [init : adjust default sysctl values] ***************************************************************************************************************************************************************************
2020-04-22 09:01:10,376 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-04-22 09:01:10,597 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-04-22 09:01:10,825 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-04-22 09:01:11,021 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-04-22 09:01:11,223 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-04-22 09:01:11,432 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-04-22 09:01:11,627 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-04-22 09:01:13,743 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-22 09:01:13,745 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-22 09:01:13,763 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:01:13,804 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 09:01:13,834 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:01:13,859 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:01:13,885 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:01:13,913 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 09:01:13,924 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-22 09:01:13,925 p=1 u=root |  192.168.50.119             : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-22 09:23:44,967 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:23:44,998 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 09:23:45,028 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 09:23:46,384 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-22 09:23:46,386 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-22 09:23:46,905 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-22 09:23:47,477 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-22 09:23:47,962 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-22 09:23:48,468 p=1 u=root |  TASK [init : adjust default sysctl values] ***************************************************************************************************************************************************************************
2020-04-22 09:23:48,469 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-04-22 09:23:48,671 p=1 u=root |  changed: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-04-22 09:23:48,877 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-04-22 09:23:49,072 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-04-22 09:23:49,299 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-04-22 09:23:49,508 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-04-22 09:23:49,707 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-04-22 09:23:53,703 p=1 u=root |  TASK [init : 执行 node 初始化] ********************************************************************************************************************************************************************************************
2020-04-22 09:23:53,706 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-22 09:23:54,144 p=1 u=root |  TASK [init : 加载内核模块] *************************************************************************************************************************************************************************************************
2020-04-22 09:23:54,146 p=1 u=root |  changed: [192.168.50.119] => (item=/etc/profile.d/load-mod.sh)
2020-04-22 09:23:54,162 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:23:54,185 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 09:23:54,206 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:23:54,227 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:23:54,256 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:23:54,292 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 09:23:54,303 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-22 09:23:54,304 p=1 u=root |  192.168.50.119             : ok=4    changed=4    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-04-22 09:46:50,902 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:46:50,933 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 09:46:50,969 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 09:46:51,368 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-22 09:46:51,373 p=1 u=root |  failed: [192.168.50.119] (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'}) => changed=false 
  ansible_loop_var: item
  item:
    dest: /etc/profile.d/load-mod.sh
    src: /etc/ansible/roles/init/templates/load-mod.sh.j2
  msg: |-
    Could not find or access '/etc/ansible/roles/init/templates/load-mod.sh.j2' on the Ansible Controller.
    If you are using a module and expect the file to exist on the remote, see the remote_src option
2020-04-22 09:46:52,246 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-22 09:46:52,796 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-22 09:46:53,265 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-22 09:46:53,270 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-22 09:46:53,271 p=1 u=root |  192.168.50.119             : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2020-04-22 09:49:19,794 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:49:19,821 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 09:49:19,853 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 09:49:20,993 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-22 09:49:20,995 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-22 09:49:21,444 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-22 09:49:21,971 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-22 09:49:22,433 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-22 09:49:22,948 p=1 u=root |  TASK [init : adjust default sysctl values] ***************************************************************************************************************************************************************************
2020-04-22 09:49:22,950 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-04-22 09:49:23,156 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-04-22 09:49:23,355 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-04-22 09:49:23,563 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-04-22 09:49:23,766 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-04-22 09:49:23,964 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-04-22 09:49:24,179 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-04-22 09:49:25,905 p=1 u=root |  TASK [init : Node 配置初始化] *********************************************************************************************************************************************************************************************
2020-04-22 09:49:25,906 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-22 09:49:26,341 p=1 u=root |  TASK [init : 加载系统内核模块] ***********************************************************************************************************************************************************************************************
2020-04-22 09:49:26,344 p=1 u=root |  changed: [192.168.50.119] => (item=/etc/profile.d/load-mod.sh)
2020-04-22 09:49:38,958 p=1 u=root |  TASK [init : Docker 配置初始化] *******************************************************************************************************************************************************************************************
2020-04-22 09:49:38,960 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-22 09:49:42,524 p=1 u=root |  TASK [init : Node 残留清理] **********************************************************************************************************************************************************************************************
2020-04-22 09:49:42,525 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-22 09:49:43,227 p=1 u=root |  TASK [init : 拷贝Kubectl到节点] *******************************************************************************************************************************************************************************************
2020-04-22 09:49:43,229 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-22 09:49:43,251 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:49:43,576 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-22 09:49:43,577 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 09:49:43,732 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 09:49:44,319 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-22 09:49:44,320 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 09:49:44,978 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-22 09:49:44,980 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 09:49:45,000 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:49:45,305 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-22 09:49:45,306 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 09:49:45,939 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-22 09:49:45,941 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=192.168.50.119 )
2020-04-22 09:49:45,972 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:49:46,297 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-22 09:49:46,298 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 09:49:46,605 p=1 u=root |  TASK [k8s : 备份旧 k8s 集群数据] ********************************************************************************************************************************************************************************************
2020-04-22 09:49:46,607 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 09:49:46,910 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-22 09:49:46,912 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 09:49:48,263 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-22 09:49:48,264 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 09:51:24,852 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-22 09:51:24,855 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 09:51:25,634 p=1 u=root |  TASK [k8s : 生成Core DNS配置映射] ******************************************************************************************************************************************************************************************
2020-04-22 09:51:25,635 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 09:51:26,728 p=1 u=root |  TASK [k8s : 更新Core DNS配置] ********************************************************************************************************************************************************************************************
2020-04-22 09:51:26,730 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 09:51:26,756 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 09:51:27,167 p=1 u=root |  TASK [rancher : 检查Rancher工作目录是否存在] ***********************************************************************************************************************************************************************************
2020-04-22 09:51:27,170 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 09:51:28,153 p=1 u=root |  TASK [rancher : 更新Rancher HA 安装脚本] ***********************************************************************************************************************************************************************************
2020-04-22 09:51:28,156 p=1 u=root |  ok: [127.0.0.1] => (item={'src': '/etc/ansible/roles/rancher/templates/rancher-install.sh.j2', 'dest': '/etc/ansible/cluster/local/rancher/rancher-install.sh'})
2020-04-22 09:51:29,641 p=1 u=root |  TASK [rancher : 安装Rancher HA] ****************************************************************************************************************************************************************************************
2020-04-22 09:51:29,643 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 09:51:29,667 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 09:51:30,076 p=1 u=root |  TASK [kubectl : 创建kubectl配置目录，如果存在则跳过] *******************************************************************************************************************************************************************************
2020-04-22 09:51:30,078 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 09:51:30,450 p=1 u=root |  TASK [kubectl : 检查 kubecfg 文件是否生成] ***********************************************************************************************************************************************************************************
2020-04-22 09:51:30,454 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 09:51:31,467 p=1 u=root |  TASK [kubectl : 拷贝 kubecfg 文件到 local 集群的所有节点] ************************************************************************************************************************************************************************
2020-04-22 09:51:31,469 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/cluster/local/rke/kube_config_cluster.yml', 'dest': '~/.kube/config'})
2020-04-22 09:51:31,876 p=1 u=root |  TASK [kubectl : 配置 kubectl 自动补全] *************************************************************************************************************************************************************************************
2020-04-22 09:51:31,878 p=1 u=root |  changed: [192.168.50.119]
2020-04-22 09:51:31,883 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-22 09:51:31,884 p=1 u=root |  127.0.0.1                  : ok=13   changed=8    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
2020-04-22 09:51:31,885 p=1 u=root |  192.168.50.119             : ok=13   changed=6    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-04-22 10:43:28,237 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-04-22 10:43:28,329 p=1 u=root |   [ERROR]: User interrupted execution

2020-04-22 10:45:27,122 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-04-22 10:45:29,430 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 10:45:30,676 p=1 u=root |  TASK [Gathering Facts] ***********************************************************************************************************************************************************************************************
2020-04-22 10:45:30,677 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 10:45:30,693 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 10:45:30,729 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 10:45:31,925 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-22 10:45:31,927 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-22 10:45:32,416 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-22 10:45:33,013 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-22 10:45:33,572 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-22 10:45:34,106 p=1 u=root |  TASK [init : adjust default sysctl values] ***************************************************************************************************************************************************************************
2020-04-22 10:45:34,108 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-04-22 10:45:34,305 p=1 u=root |  changed: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-04-22 10:45:34,484 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-04-22 10:45:34,695 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-04-22 10:45:34,886 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-04-22 10:45:35,081 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-04-22 10:45:35,270 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-04-22 10:45:37,088 p=1 u=root |  TASK [init : Node 配置初始化] *********************************************************************************************************************************************************************************************
2020-04-22 10:45:37,089 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-22 10:45:37,654 p=1 u=root |  TASK [init : 加载系统内核模块] ***********************************************************************************************************************************************************************************************
2020-04-22 10:45:37,656 p=1 u=root |  changed: [192.168.50.119] => (item=/etc/profile.d/load-mod.sh)
2020-04-22 10:45:50,226 p=1 u=root |  TASK [init : Docker 配置初始化] *******************************************************************************************************************************************************************************************
2020-04-22 10:45:50,229 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-22 10:45:53,972 p=1 u=root |  TASK [init : Node 残留清理] **********************************************************************************************************************************************************************************************
2020-04-22 10:45:53,974 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-22 10:45:54,627 p=1 u=root |  TASK [init : 拷贝Kubectl到节点] *******************************************************************************************************************************************************************************************
2020-04-22 10:45:54,630 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-22 10:45:54,649 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 10:45:54,932 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-22 10:45:54,933 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 10:45:55,082 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 10:45:55,612 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-22 10:45:55,618 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 10:45:56,170 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-22 10:45:56,171 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 10:45:56,193 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 10:45:56,465 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-22 10:45:56,466 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 10:45:57,014 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-22 10:45:57,017 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=192.168.50.119 )
2020-04-22 10:45:57,038 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 10:45:57,323 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-22 10:45:57,325 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 10:45:57,624 p=1 u=root |  TASK [k8s : 备份旧 k8s 集群数据] ********************************************************************************************************************************************************************************************
2020-04-22 10:45:57,626 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 10:45:57,901 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-22 10:45:57,902 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 10:45:59,232 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-22 10:45:59,233 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 10:47:32,780 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-22 10:47:32,783 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 10:47:33,381 p=1 u=root |  TASK [k8s : 生成Core DNS配置映射] ******************************************************************************************************************************************************************************************
2020-04-22 10:47:33,383 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 10:47:34,051 p=1 u=root |  TASK [k8s : 更新Core DNS配置] ********************************************************************************************************************************************************************************************
2020-04-22 10:47:34,053 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 10:47:34,073 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 10:47:34,362 p=1 u=root |  TASK [rancher : 检查Rancher工作目录是否存在] ***********************************************************************************************************************************************************************************
2020-04-22 10:47:34,364 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 10:47:35,206 p=1 u=root |  TASK [rancher : 更新Rancher HA 安装脚本] ***********************************************************************************************************************************************************************************
2020-04-22 10:47:35,208 p=1 u=root |  ok: [127.0.0.1] => (item={'src': '/etc/ansible/roles/rancher/templates/rancher-install.sh.j2', 'dest': '/etc/ansible/cluster/local/rancher/rancher-install.sh'})
2020-04-22 10:47:36,705 p=1 u=root |  TASK [rancher : 安装Rancher HA] ****************************************************************************************************************************************************************************************
2020-04-22 10:47:36,706 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 10:47:36,727 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 10:47:37,026 p=1 u=root |  TASK [kubectl : 创建kubectl配置目录，如果存在则跳过] *******************************************************************************************************************************************************************************
2020-04-22 10:47:37,028 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 10:47:37,326 p=1 u=root |  TASK [kubectl : 检查 kubecfg 文件是否生成] ***********************************************************************************************************************************************************************************
2020-04-22 10:47:37,328 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 10:47:38,247 p=1 u=root |  TASK [kubectl : 拷贝 kubecfg 文件到 local 集群的所有节点] ************************************************************************************************************************************************************************
2020-04-22 10:47:38,248 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/cluster/local/rke/kube_config_cluster.yml', 'dest': '~/.kube/config'})
2020-04-22 10:47:38,532 p=1 u=root |  TASK [kubectl : 配置 kubectl 自动补全] *************************************************************************************************************************************************************************************
2020-04-22 10:47:38,533 p=1 u=root |  changed: [192.168.50.119]
2020-04-22 10:47:38,537 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-22 10:47:38,538 p=1 u=root |  127.0.0.1                  : ok=14   changed=8    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
2020-04-22 10:47:38,539 p=1 u=root |  192.168.50.119             : ok=13   changed=7    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-04-22 11:16:52,183 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-04-22 11:16:54,138 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:16:54,168 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:16:54,197 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:16:55,300 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-22 11:16:55,301 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-22 11:16:55,723 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-22 11:16:56,219 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-22 11:16:56,643 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-22 11:16:57,090 p=1 u=root |  TASK [init : adjust default sysctl values] ***************************************************************************************************************************************************************************
2020-04-22 11:16:57,091 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-04-22 11:16:57,286 p=1 u=root |  changed: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-04-22 11:16:57,486 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-04-22 11:16:57,678 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-04-22 11:16:57,878 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-04-22 11:16:58,073 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-04-22 11:16:58,264 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-04-22 11:16:59,880 p=1 u=root |  TASK [init : Node 配置初始化] *********************************************************************************************************************************************************************************************
2020-04-22 11:16:59,882 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-22 11:17:00,295 p=1 u=root |  TASK [init : 加载系统内核模块] ***********************************************************************************************************************************************************************************************
2020-04-22 11:17:00,297 p=1 u=root |  changed: [192.168.50.119] => (item=/etc/profile.d/load-mod.sh)
2020-04-22 11:17:13,078 p=1 u=root |  TASK [init : Docker 配置初始化] *******************************************************************************************************************************************************************************************
2020-04-22 11:17:13,080 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-22 11:17:16,282 p=1 u=root |  TASK [init : Node 残留清理] **********************************************************************************************************************************************************************************************
2020-04-22 11:17:16,283 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-22 11:17:16,958 p=1 u=root |  TASK [init : 拷贝Kubectl到节点] *******************************************************************************************************************************************************************************************
2020-04-22 11:17:16,960 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-22 11:17:16,979 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:17:17,287 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-22 11:17:17,289 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:17:17,433 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:17:18,002 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-22 11:17:18,004 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:17:18,574 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-22 11:17:18,575 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:17:18,592 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:17:18,880 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-22 11:17:18,881 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:17:19,544 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-22 11:17:19,547 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=192.168.50.119 )
2020-04-22 11:17:19,566 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:17:19,850 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-22 11:17:19,853 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:17:20,161 p=1 u=root |  TASK [k8s : 备份旧 k8s 集群数据] ********************************************************************************************************************************************************************************************
2020-04-22 11:17:20,171 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=true 
  cmd: 'cd /etc/ansible/cluster/local; mv rke rke-bak-`date +%Y%m%d` '
  delta: '0:00:00.008605'
  end: '2020-04-22 11:17:20.144818'
  msg: non-zero return code
  rc: 1
  start: '2020-04-22 11:17:20.136213'
  stderr: 'mv: can''t rename ''rke'': Directory not empty'
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
2020-04-22 11:17:20,173 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-22 11:17:20,174 p=1 u=root |  127.0.0.1                  : ok=4    changed=1    unreachable=0    failed=1    skipped=3    rescued=0    ignored=0   
2020-04-22 11:17:20,175 p=1 u=root |  192.168.50.119             : ok=9    changed=5    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-04-22 11:23:09,936 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:23:09,966 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:23:09,996 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:23:11,058 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-22 11:23:11,060 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-22 11:23:11,483 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-22 11:23:11,973 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-22 11:23:12,357 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-22 11:23:12,842 p=1 u=root |  TASK [init : adjust default sysctl values] ***************************************************************************************************************************************************************************
2020-04-22 11:23:12,844 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-04-22 11:23:13,027 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-04-22 11:23:13,225 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-04-22 11:23:13,411 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-04-22 11:23:13,605 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-04-22 11:23:13,794 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-04-22 11:23:13,978 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-04-22 11:23:15,528 p=1 u=root |  TASK [init : Node 配置初始化] *********************************************************************************************************************************************************************************************
2020-04-22 11:23:15,531 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-22 11:23:15,929 p=1 u=root |  TASK [init : 加载系统内核模块] ***********************************************************************************************************************************************************************************************
2020-04-22 11:23:15,931 p=1 u=root |  changed: [192.168.50.119] => (item=/etc/profile.d/load-mod.sh)
2020-04-22 11:23:16,630 p=1 u=root |  TASK [init : Docker 配置初始化] *******************************************************************************************************************************************************************************************
2020-04-22 11:23:16,632 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-22 11:23:17,597 p=1 u=root |  TASK [init : Node 残留清理] **********************************************************************************************************************************************************************************************
2020-04-22 11:23:17,598 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-22 11:23:18,181 p=1 u=root |  TASK [init : 拷贝Kubectl到节点] *******************************************************************************************************************************************************************************************
2020-04-22 11:23:18,183 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-22 11:23:18,199 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:23:18,495 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-22 11:23:18,496 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:23:18,644 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:23:19,236 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-22 11:23:19,239 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:23:19,830 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-22 11:23:19,832 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:23:19,848 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:23:20,136 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-22 11:23:20,137 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:23:20,747 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-22 11:23:20,748 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=192.168.50.119 )
2020-04-22 11:23:20,765 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:23:21,045 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-22 11:23:21,046 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:23:21,337 p=1 u=root |  TASK [k8s : 备份旧 k8s 集群数据] ********************************************************************************************************************************************************************************************
2020-04-22 11:23:21,341 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=true 
  cmd: 'cd /etc/ansible/cluster/local; mv rke rke-bak-`date +%Y%m%d` '
  delta: '0:00:00.009808'
  end: '2020-04-22 11:23:21.321247'
  msg: non-zero return code
  rc: 1
  start: '2020-04-22 11:23:21.311439'
  stderr: 'mv: can''t rename ''rke'': Directory not empty'
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
2020-04-22 11:23:21,343 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-22 11:23:21,344 p=1 u=root |  127.0.0.1                  : ok=4    changed=1    unreachable=0    failed=1    skipped=3    rescued=0    ignored=0   
2020-04-22 11:23:21,345 p=1 u=root |  192.168.50.119             : ok=9    changed=4    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-04-22 11:24:06,368 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:24:06,391 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:24:06,418 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:24:07,475 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-22 11:24:07,477 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-22 11:24:07,943 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-22 11:24:08,445 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-22 11:24:08,870 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-22 11:24:09,342 p=1 u=root |  TASK [init : adjust default sysctl values] ***************************************************************************************************************************************************************************
2020-04-22 11:24:09,343 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-04-22 11:24:09,535 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-04-22 11:24:09,727 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-04-22 11:24:09,913 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-04-22 11:24:10,102 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-04-22 11:24:10,298 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-04-22 11:24:10,489 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-04-22 11:24:11,998 p=1 u=root |  TASK [init : Node 配置初始化] *********************************************************************************************************************************************************************************************
2020-04-22 11:24:12,001 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-22 11:24:12,369 p=1 u=root |  TASK [init : 加载系统内核模块] ***********************************************************************************************************************************************************************************************
2020-04-22 11:24:12,371 p=1 u=root |  changed: [192.168.50.119] => (item=/etc/profile.d/load-mod.sh)
2020-04-22 11:24:13,104 p=1 u=root |  TASK [init : Docker 配置初始化] *******************************************************************************************************************************************************************************************
2020-04-22 11:24:13,106 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-22 11:24:13,861 p=1 u=root |  TASK [init : Node 残留清理] **********************************************************************************************************************************************************************************************
2020-04-22 11:24:13,864 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-22 11:24:14,472 p=1 u=root |  TASK [init : 拷贝Kubectl到节点] *******************************************************************************************************************************************************************************************
2020-04-22 11:24:14,473 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-22 11:24:14,489 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:24:14,795 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-22 11:24:14,797 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:24:14,944 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:24:15,483 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-22 11:24:15,485 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:24:16,029 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-22 11:24:16,031 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:24:16,047 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:24:16,340 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-22 11:24:16,342 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:24:16,894 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-22 11:24:16,896 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=192.168.50.119 )
2020-04-22 11:24:16,911 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:24:17,206 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-22 11:24:17,207 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:24:17,495 p=1 u=root |  TASK [k8s : 备份旧 k8s 集群数据] ********************************************************************************************************************************************************************************************
2020-04-22 11:24:17,496 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:24:17,788 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-22 11:24:17,790 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:24:19,056 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-22 11:24:19,060 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:25:56,295 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-22 11:25:56,299 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:25:56,989 p=1 u=root |  TASK [k8s : 生成Core DNS配置映射] ******************************************************************************************************************************************************************************************
2020-04-22 11:25:56,990 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:25:57,747 p=1 u=root |  TASK [k8s : 更新Core DNS配置] ********************************************************************************************************************************************************************************************
2020-04-22 11:25:57,749 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:25:57,770 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:25:58,089 p=1 u=root |  TASK [rancher : 检查Rancher工作目录是否存在] ***********************************************************************************************************************************************************************************
2020-04-22 11:25:58,091 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:25:59,069 p=1 u=root |  TASK [rancher : 更新Rancher HA 安装脚本] ***********************************************************************************************************************************************************************************
2020-04-22 11:25:59,072 p=1 u=root |  ok: [127.0.0.1] => (item={'src': '/etc/ansible/roles/rancher/templates/rancher-install.sh.j2', 'dest': '/etc/ansible/cluster/local/rancher/rancher-install.sh'})
2020-04-22 11:26:00,307 p=1 u=root |  TASK [rancher : 安装Rancher HA] ****************************************************************************************************************************************************************************************
2020-04-22 11:26:00,309 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:26:00,339 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:26:00,639 p=1 u=root |  TASK [kubectl : 创建kubectl配置目录，如果存在则跳过] *******************************************************************************************************************************************************************************
2020-04-22 11:26:00,642 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:26:00,962 p=1 u=root |  TASK [kubectl : 检查 kubecfg 文件是否生成] ***********************************************************************************************************************************************************************************
2020-04-22 11:26:00,965 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:26:01,846 p=1 u=root |  TASK [kubectl : 拷贝 kubecfg 文件到 local 集群的所有节点] ************************************************************************************************************************************************************************
2020-04-22 11:26:01,850 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/cluster/local/rke/kube_config_cluster.yml', 'dest': '~/.kube/config'})
2020-04-22 11:26:02,165 p=1 u=root |  TASK [kubectl : 配置 kubectl 自动补全] *************************************************************************************************************************************************************************************
2020-04-22 11:26:02,168 p=1 u=root |  changed: [192.168.50.119]
2020-04-22 11:26:02,174 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-22 11:26:02,175 p=1 u=root |  127.0.0.1                  : ok=13   changed=8    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
2020-04-22 11:26:02,176 p=1 u=root |  192.168.50.119             : ok=13   changed=6    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-04-22 11:26:09,957 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:26:09,996 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:26:10,037 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:26:11,736 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-22 11:26:11,742 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-22 11:26:12,329 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-22 11:26:13,127 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-22 11:26:13,811 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-22 11:26:14,428 p=1 u=root |  TASK [init : adjust default sysctl values] ***************************************************************************************************************************************************************************
2020-04-22 11:26:14,430 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-04-22 11:26:14,713 p=1 u=root |  changed: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-04-22 11:26:15,037 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-04-22 11:26:15,327 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-04-22 11:26:15,594 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-04-22 11:26:15,883 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-04-22 11:26:16,153 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-04-22 11:26:17,946 p=1 u=root |  TASK [init : Node 配置初始化] *********************************************************************************************************************************************************************************************
2020-04-22 11:26:17,950 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-22 11:26:18,495 p=1 u=root |  TASK [init : 加载系统内核模块] ***********************************************************************************************************************************************************************************************
2020-04-22 11:26:18,496 p=1 u=root |  changed: [192.168.50.119] => (item=/etc/profile.d/load-mod.sh)
2020-04-22 11:26:31,405 p=1 u=root |  TASK [init : Docker 配置初始化] *******************************************************************************************************************************************************************************************
2020-04-22 11:26:31,407 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-22 11:26:33,658 p=1 u=root |  TASK [init : Node 残留清理] **********************************************************************************************************************************************************************************************
2020-04-22 11:26:33,659 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-22 11:26:34,257 p=1 u=root |  TASK [init : 拷贝Kubectl到节点] *******************************************************************************************************************************************************************************************
2020-04-22 11:26:34,258 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-22 11:26:34,275 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:26:34,607 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-22 11:26:34,611 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:26:34,763 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:26:35,329 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-22 11:26:35,330 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:26:35,955 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-22 11:26:35,957 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:26:35,985 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:26:36,288 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-22 11:26:36,290 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:26:36,894 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-22 11:26:36,897 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=192.168.50.119 )
2020-04-22 11:26:36,921 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:26:37,214 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-22 11:26:37,215 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:26:37,510 p=1 u=root |  TASK [k8s : 备份旧 k8s 集群数据] ********************************************************************************************************************************************************************************************
2020-04-22 11:26:37,511 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:26:37,795 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-22 11:26:37,796 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:26:39,050 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-22 11:26:39,052 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:27:24,093 p=1 u=root |   [ERROR]: User interrupted execution

2020-04-22 11:27:29,345 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:27:29,372 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:27:29,403 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:27:30,468 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-22 11:27:30,470 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-22 11:27:30,899 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-22 11:27:31,408 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-22 11:27:31,837 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-22 11:27:32,317 p=1 u=root |  TASK [init : adjust default sysctl values] ***************************************************************************************************************************************************************************
2020-04-22 11:27:32,319 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-04-22 11:27:32,528 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-04-22 11:27:32,806 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-04-22 11:27:33,013 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-04-22 11:27:33,221 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-04-22 11:27:33,429 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-04-22 11:27:33,730 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-04-22 11:27:35,465 p=1 u=root |  TASK [init : Node 配置初始化] *********************************************************************************************************************************************************************************************
2020-04-22 11:27:35,467 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-22 11:27:36,003 p=1 u=root |  TASK [init : 加载系统内核模块] ***********************************************************************************************************************************************************************************************
2020-04-22 11:27:36,005 p=1 u=root |  changed: [192.168.50.119] => (item=/etc/profile.d/load-mod.sh)
2020-04-22 11:27:38,504 p=1 u=root |  TASK [init : Docker 配置初始化] *******************************************************************************************************************************************************************************************
2020-04-22 11:27:38,506 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-22 11:27:39,998 p=1 u=root |  TASK [init : Node 残留清理] **********************************************************************************************************************************************************************************************
2020-04-22 11:27:39,999 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-22 11:27:40,581 p=1 u=root |  TASK [init : 拷贝Kubectl到节点] *******************************************************************************************************************************************************************************************
2020-04-22 11:27:40,583 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-22 11:27:40,600 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:27:40,911 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-22 11:27:40,913 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:27:41,068 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:27:41,596 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-22 11:27:41,597 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:27:42,154 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-22 11:27:42,155 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:27:42,179 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:27:42,459 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-22 11:27:42,460 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:27:43,012 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-22 11:27:43,013 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=192.168.50.119 )
2020-04-22 11:27:43,032 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:27:43,323 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-22 11:27:43,325 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:27:43,626 p=1 u=root |  TASK [k8s : 备份旧 k8s 集群数据] ********************************************************************************************************************************************************************************************
2020-04-22 11:27:43,636 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=true 
  cmd: 'cd /etc/ansible/cluster/local; mv -f rke rke-bak-`date +%Y%m%d` '
  delta: '0:00:00.010544'
  end: '2020-04-22 11:27:43.600914'
  msg: non-zero return code
  rc: 1
  start: '2020-04-22 11:27:43.590370'
  stderr: 'mv: can''t rename ''rke'': Directory not empty'
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
2020-04-22 11:27:43,638 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-22 11:27:43,640 p=1 u=root |  127.0.0.1                  : ok=4    changed=1    unreachable=0    failed=1    skipped=3    rescued=0    ignored=0   
2020-04-22 11:27:43,641 p=1 u=root |  192.168.50.119             : ok=9    changed=4    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-04-22 11:28:34,867 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:28:34,895 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:28:34,923 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:28:36,207 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-22 11:28:36,209 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-22 11:28:36,694 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-22 11:28:37,230 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-22 11:28:37,703 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-22 11:28:38,182 p=1 u=root |  TASK [init : adjust default sysctl values] ***************************************************************************************************************************************************************************
2020-04-22 11:28:38,184 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-04-22 11:28:38,375 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-04-22 11:28:38,560 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-04-22 11:28:38,765 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-04-22 11:28:38,953 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-04-22 11:28:39,151 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-04-22 11:28:39,351 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-04-22 11:28:40,867 p=1 u=root |  TASK [init : Node 配置初始化] *********************************************************************************************************************************************************************************************
2020-04-22 11:28:40,869 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-22 11:28:41,266 p=1 u=root |  TASK [init : 加载系统内核模块] ***********************************************************************************************************************************************************************************************
2020-04-22 11:28:41,268 p=1 u=root |  changed: [192.168.50.119] => (item=/etc/profile.d/load-mod.sh)
2020-04-22 11:28:41,922 p=1 u=root |  TASK [init : Docker 配置初始化] *******************************************************************************************************************************************************************************************
2020-04-22 11:28:41,924 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-22 11:28:42,725 p=1 u=root |  TASK [init : Node 残留清理] **********************************************************************************************************************************************************************************************
2020-04-22 11:28:42,733 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-22 11:28:43,308 p=1 u=root |  TASK [init : 拷贝Kubectl到节点] *******************************************************************************************************************************************************************************************
2020-04-22 11:28:43,310 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-22 11:28:43,325 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:28:43,628 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-22 11:28:43,629 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:28:43,773 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:28:44,356 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-22 11:28:44,360 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:28:45,030 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-22 11:28:45,032 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:28:45,050 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:28:45,368 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-22 11:28:45,369 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:28:46,135 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-22 11:28:46,137 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=192.168.50.119 )
2020-04-22 11:28:46,155 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:28:46,518 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-22 11:28:46,521 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:28:46,905 p=1 u=root |  TASK [k8s : 备份旧 k8s 集群数据] ********************************************************************************************************************************************************************************************
2020-04-22 11:28:46,907 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:28:47,215 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-22 11:28:47,216 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:28:48,459 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-22 11:28:48,461 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:29:52,884 p=1 u=root |   [ERROR]: User interrupted execution

2020-04-22 11:29:57,818 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:29:57,854 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:29:57,888 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:29:58,987 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-22 11:29:58,989 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-22 11:29:59,441 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-22 11:29:59,988 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-22 11:30:00,437 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-22 11:30:00,907 p=1 u=root |  TASK [init : adjust default sysctl values] ***************************************************************************************************************************************************************************
2020-04-22 11:30:00,908 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-04-22 11:30:01,098 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-04-22 11:30:01,296 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-04-22 11:30:01,480 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-04-22 11:30:01,681 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-04-22 11:30:01,882 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-04-22 11:30:02,070 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-04-22 11:30:03,622 p=1 u=root |  TASK [init : Node 配置初始化] *********************************************************************************************************************************************************************************************
2020-04-22 11:30:03,624 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-22 11:30:04,014 p=1 u=root |  TASK [init : 加载系统内核模块] ***********************************************************************************************************************************************************************************************
2020-04-22 11:30:04,016 p=1 u=root |  changed: [192.168.50.119] => (item=/etc/profile.d/load-mod.sh)
2020-04-22 11:30:06,388 p=1 u=root |  TASK [init : Docker 配置初始化] *******************************************************************************************************************************************************************************************
2020-04-22 11:30:06,389 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-22 11:30:07,872 p=1 u=root |  TASK [init : Node 残留清理] **********************************************************************************************************************************************************************************************
2020-04-22 11:30:07,874 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-22 11:30:08,479 p=1 u=root |  TASK [init : 拷贝Kubectl到节点] *******************************************************************************************************************************************************************************************
2020-04-22 11:30:08,480 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-22 11:30:08,497 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:30:08,813 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-22 11:30:08,815 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:30:08,962 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:30:09,505 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-22 11:30:09,506 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:30:10,079 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-22 11:30:10,082 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:30:10,101 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:30:10,387 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-22 11:30:10,388 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:30:10,936 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-22 11:30:10,938 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=192.168.50.119 )
2020-04-22 11:30:10,958 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:30:11,245 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-22 11:30:11,246 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:30:11,561 p=1 u=root |  TASK [k8s : 备份旧 k8s 集群数据] ********************************************************************************************************************************************************************************************
2020-04-22 11:30:11,563 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:30:11,815 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-22 11:30:11,816 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:30:13,160 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-22 11:30:13,161 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:30:46,256 p=1 u=root |   [ERROR]: User interrupted execution

2020-04-22 11:30:51,589 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:30:51,614 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:30:51,645 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:30:52,816 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-22 11:30:52,820 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-22 11:30:53,337 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-22 11:30:53,923 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-22 11:30:54,457 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-22 11:30:54,956 p=1 u=root |  TASK [init : adjust default sysctl values] ***************************************************************************************************************************************************************************
2020-04-22 11:30:54,958 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-04-22 11:30:55,177 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-04-22 11:30:55,371 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-04-22 11:30:55,587 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-04-22 11:30:55,819 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-04-22 11:30:56,015 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-04-22 11:30:56,294 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-04-22 11:30:57,876 p=1 u=root |  TASK [init : Node 配置初始化] *********************************************************************************************************************************************************************************************
2020-04-22 11:30:57,879 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-22 11:30:58,302 p=1 u=root |  TASK [init : 加载系统内核模块] ***********************************************************************************************************************************************************************************************
2020-04-22 11:30:58,303 p=1 u=root |  changed: [192.168.50.119] => (item=/etc/profile.d/load-mod.sh)
2020-04-22 11:31:00,257 p=1 u=root |  TASK [init : Docker 配置初始化] *******************************************************************************************************************************************************************************************
2020-04-22 11:31:00,258 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-22 11:31:01,444 p=1 u=root |  TASK [init : Node 残留清理] **********************************************************************************************************************************************************************************************
2020-04-22 11:31:01,446 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-22 11:31:02,054 p=1 u=root |  TASK [init : 拷贝Kubectl到节点] *******************************************************************************************************************************************************************************************
2020-04-22 11:31:02,056 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-22 11:31:02,075 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:31:02,370 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-22 11:31:02,371 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:31:02,527 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:31:03,071 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-22 11:31:03,076 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:31:03,646 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-22 11:31:03,649 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:31:03,667 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:31:03,949 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-22 11:31:03,951 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:31:04,517 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-22 11:31:04,519 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=192.168.50.119 )
2020-04-22 11:31:04,535 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:31:04,818 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-22 11:31:04,819 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:31:05,125 p=1 u=root |  TASK [k8s : 备份旧 k8s 集群数据] ********************************************************************************************************************************************************************************************
2020-04-22 11:31:05,127 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:31:05,399 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-22 11:31:05,401 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:31:06,960 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-22 11:31:06,963 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:31:16,483 p=1 u=root |   [ERROR]: User interrupted execution

2020-04-22 11:31:21,554 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:31:21,584 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:31:21,618 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:31:22,684 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-22 11:31:22,687 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-22 11:31:23,108 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-22 11:31:23,609 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-22 11:31:24,032 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-22 11:31:24,495 p=1 u=root |  TASK [init : adjust default sysctl values] ***************************************************************************************************************************************************************************
2020-04-22 11:31:24,496 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-04-22 11:31:24,694 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-04-22 11:31:24,887 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-04-22 11:31:25,077 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-04-22 11:31:25,275 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-04-22 11:31:25,462 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-04-22 11:31:25,656 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-04-22 11:31:27,161 p=1 u=root |  TASK [init : Node 配置初始化] *********************************************************************************************************************************************************************************************
2020-04-22 11:31:27,163 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-22 11:31:27,562 p=1 u=root |  TASK [init : 加载系统内核模块] ***********************************************************************************************************************************************************************************************
2020-04-22 11:31:27,564 p=1 u=root |  changed: [192.168.50.119] => (item=/etc/profile.d/load-mod.sh)
2020-04-22 11:31:28,259 p=1 u=root |  TASK [init : Docker 配置初始化] *******************************************************************************************************************************************************************************************
2020-04-22 11:31:28,261 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-22 11:31:29,279 p=1 u=root |  TASK [init : Node 残留清理] **********************************************************************************************************************************************************************************************
2020-04-22 11:31:29,281 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-22 11:31:29,880 p=1 u=root |  TASK [init : 拷贝Kubectl到节点] *******************************************************************************************************************************************************************************************
2020-04-22 11:31:29,881 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-22 11:31:29,897 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:31:30,193 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-22 11:31:30,194 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:31:30,355 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:31:30,895 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-22 11:31:30,897 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:31:31,461 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-22 11:31:31,463 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:31:31,482 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:31:31,781 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-22 11:31:31,784 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:31:32,423 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-22 11:31:32,424 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=192.168.50.119 )
2020-04-22 11:31:32,440 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:31:32,734 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-22 11:31:32,736 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:31:33,049 p=1 u=root |  TASK [k8s : 备份旧 k8s 集群数据] ********************************************************************************************************************************************************************************************
2020-04-22 11:31:33,051 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:31:33,386 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-22 11:31:33,388 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:31:34,717 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-22 11:31:34,719 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:33:09,853 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-22 11:33:09,855 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:33:10,447 p=1 u=root |  TASK [k8s : 生成Core DNS配置映射] ******************************************************************************************************************************************************************************************
2020-04-22 11:33:10,448 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:33:11,135 p=1 u=root |  TASK [k8s : 更新Core DNS配置] ********************************************************************************************************************************************************************************************
2020-04-22 11:33:11,136 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:33:11,154 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 11:33:11,436 p=1 u=root |  TASK [rancher : 检查Rancher工作目录是否存在] ***********************************************************************************************************************************************************************************
2020-04-22 11:33:11,438 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 11:33:12,343 p=1 u=root |  TASK [rancher : 更新Rancher HA 安装脚本] ***********************************************************************************************************************************************************************************
2020-04-22 11:33:12,344 p=1 u=root |  ok: [127.0.0.1] => (item={'src': '/etc/ansible/roles/rancher/templates/rancher-install.sh.j2', 'dest': '/etc/ansible/cluster/local/rancher/rancher-install.sh'})
2020-04-22 11:33:13,520 p=1 u=root |  TASK [rancher : 安装Rancher HA] ****************************************************************************************************************************************************************************************
2020-04-22 11:33:13,522 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 11:33:13,552 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 11:33:13,835 p=1 u=root |  TASK [kubectl : 创建kubectl配置目录，如果存在则跳过] *******************************************************************************************************************************************************************************
2020-04-22 11:33:13,837 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:33:14,136 p=1 u=root |  TASK [kubectl : 检查 kubecfg 文件是否生成] ***********************************************************************************************************************************************************************************
2020-04-22 11:33:14,137 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 11:33:15,026 p=1 u=root |  TASK [kubectl : 拷贝 kubecfg 文件到 local 集群的所有节点] ************************************************************************************************************************************************************************
2020-04-22 11:33:15,028 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/cluster/local/rke/kube_config_cluster.yml', 'dest': '~/.kube/config'})
2020-04-22 11:33:15,309 p=1 u=root |  TASK [kubectl : 配置 kubectl 自动补全] *************************************************************************************************************************************************************************************
2020-04-22 11:33:15,311 p=1 u=root |  changed: [192.168.50.119]
2020-04-22 11:33:15,318 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-22 11:33:15,319 p=1 u=root |  127.0.0.1                  : ok=13   changed=8    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
2020-04-22 11:33:15,320 p=1 u=root |  192.168.50.119             : ok=13   changed=6    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-04-22 12:36:15,862 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 12:36:15,889 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 12:36:15,917 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 12:36:17,094 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-22 12:36:17,096 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-22 12:36:17,592 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-22 12:36:18,099 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-22 12:36:18,552 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-22 12:36:19,028 p=1 u=root |  TASK [init : adjust default sysctl values] ***************************************************************************************************************************************************************************
2020-04-22 12:36:19,029 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-04-22 12:36:19,227 p=1 u=root |  changed: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-04-22 12:36:19,452 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-04-22 12:36:19,668 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-04-22 12:36:19,864 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-04-22 12:36:20,065 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-04-22 12:36:20,262 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-04-22 12:36:21,897 p=1 u=root |  TASK [init : Node 配置初始化] *********************************************************************************************************************************************************************************************
2020-04-22 12:36:21,898 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-22 12:36:22,292 p=1 u=root |  TASK [init : 加载系统内核模块] ***********************************************************************************************************************************************************************************************
2020-04-22 12:36:22,294 p=1 u=root |  changed: [192.168.50.119] => (item=/etc/profile.d/load-mod.sh)
2020-04-22 12:36:34,800 p=1 u=root |  TASK [init : Docker 配置初始化] *******************************************************************************************************************************************************************************************
2020-04-22 12:36:34,803 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-22 12:36:37,300 p=1 u=root |  TASK [init : Node 残留清理] **********************************************************************************************************************************************************************************************
2020-04-22 12:36:37,301 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-22 12:36:37,899 p=1 u=root |  TASK [init : 拷贝Kubectl到节点] *******************************************************************************************************************************************************************************************
2020-04-22 12:36:37,900 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-22 12:36:37,916 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 12:36:38,236 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-22 12:36:38,237 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 12:36:38,383 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 12:36:38,920 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-22 12:36:38,921 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 12:36:39,492 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-22 12:36:39,494 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 12:36:39,515 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 12:36:39,800 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-22 12:36:39,802 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 12:36:40,447 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-22 12:36:40,449 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=192.168.50.119 )
2020-04-22 12:36:40,467 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 12:36:40,762 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-22 12:36:40,764 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 12:36:41,069 p=1 u=root |  TASK [k8s : 备份旧 k8s 集群数据] ********************************************************************************************************************************************************************************************
2020-04-22 12:36:41,070 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 12:36:41,389 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-22 12:36:41,391 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 12:36:42,694 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-22 12:36:42,695 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 12:38:17,953 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-22 12:38:17,955 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 12:38:18,548 p=1 u=root |  TASK [k8s : 生成Core DNS配置映射] ******************************************************************************************************************************************************************************************
2020-04-22 12:38:18,549 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 12:38:19,268 p=1 u=root |  TASK [k8s : 更新Core DNS配置] ********************************************************************************************************************************************************************************************
2020-04-22 12:38:19,270 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 12:38:19,289 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-22 12:38:19,589 p=1 u=root |  TASK [rancher : 检查Rancher工作目录是否存在] ***********************************************************************************************************************************************************************************
2020-04-22 12:38:19,590 p=1 u=root |  ok: [127.0.0.1]
2020-04-22 12:38:20,455 p=1 u=root |  TASK [rancher : 更新Rancher HA 安装脚本] ***********************************************************************************************************************************************************************************
2020-04-22 12:38:20,457 p=1 u=root |  ok: [127.0.0.1] => (item={'src': '/etc/ansible/roles/rancher/templates/rancher-install.sh.j2', 'dest': '/etc/ansible/cluster/local/rancher/rancher-install.sh'})
2020-04-22 12:38:21,604 p=1 u=root |  TASK [rancher : 安装Rancher HA] ****************************************************************************************************************************************************************************************
2020-04-22 12:38:21,605 p=1 u=root |  changed: [127.0.0.1]
2020-04-22 12:38:21,642 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-22 12:38:21,947 p=1 u=root |  TASK [kubectl : 创建kubectl配置目录，如果存在则跳过] *******************************************************************************************************************************************************************************
2020-04-22 12:38:21,949 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 12:38:22,249 p=1 u=root |  TASK [kubectl : 检查 kubecfg 文件是否生成] ***********************************************************************************************************************************************************************************
2020-04-22 12:38:22,250 p=1 u=root |  ok: [192.168.50.119]
2020-04-22 12:38:23,321 p=1 u=root |  TASK [kubectl : 拷贝 kubecfg 文件到 local 集群的所有节点] ************************************************************************************************************************************************************************
2020-04-22 12:38:23,323 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/cluster/local/rke/kube_config_cluster.yml', 'dest': '~/.kube/config'})
2020-04-22 12:38:23,655 p=1 u=root |  TASK [kubectl : 配置 kubectl 自动补全] *************************************************************************************************************************************************************************************
2020-04-22 12:38:23,656 p=1 u=root |  changed: [192.168.50.119]
2020-04-22 12:38:23,659 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-22 12:38:23,660 p=1 u=root |  127.0.0.1                  : ok=13   changed=8    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
2020-04-22 12:38:23,660 p=1 u=root |  192.168.50.119             : ok=13   changed=7    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-04-23 03:15:27,895 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-23 03:15:27,931 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-23 03:15:27,964 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-23 03:15:29,816 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-23 03:15:29,820 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-23 03:15:30,270 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-23 03:15:30,815 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-23 03:15:31,279 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-23 03:15:31,745 p=1 u=root |  TASK [init : adjust default sysctl values] ***************************************************************************************************************************************************************************
2020-04-23 03:15:31,748 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-04-23 03:15:31,946 p=1 u=root |  changed: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-04-23 03:15:32,136 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-04-23 03:15:32,339 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-04-23 03:15:32,533 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-04-23 03:15:32,735 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-04-23 03:15:32,934 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-04-23 03:15:36,693 p=1 u=root |  TASK [init : Node 配置初始化] *********************************************************************************************************************************************************************************************
2020-04-23 03:15:36,695 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-23 03:15:37,189 p=1 u=root |  TASK [init : 加载系统内核模块] ***********************************************************************************************************************************************************************************************
2020-04-23 03:15:37,191 p=1 u=root |  changed: [192.168.50.119] => (item=/etc/profile.d/load-mod.sh)
2020-04-23 03:15:51,956 p=1 u=root |  TASK [init : Docker 配置初始化] *******************************************************************************************************************************************************************************************
2020-04-23 03:15:51,957 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-23 03:15:57,363 p=1 u=root |  TASK [init : Node 残留清理] **********************************************************************************************************************************************************************************************
2020-04-23 03:15:57,365 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-23 03:15:59,327 p=1 u=root |  TASK [init : 拷贝Kubectl到节点] *******************************************************************************************************************************************************************************************
2020-04-23 03:15:59,329 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-23 03:15:59,346 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-23 03:15:59,653 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-23 03:15:59,655 p=1 u=root |  ok: [127.0.0.1]
2020-04-23 03:15:59,803 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-23 03:16:00,393 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-23 03:16:00,394 p=1 u=root |  ok: [192.168.50.119]
2020-04-23 03:16:01,046 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-23 03:16:01,047 p=1 u=root |  ok: [192.168.50.119]
2020-04-23 03:16:01,068 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-23 03:16:01,384 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-23 03:16:01,387 p=1 u=root |  ok: [127.0.0.1]
2020-04-23 03:16:02,025 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-23 03:16:02,027 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=192.168.50.119 )
2020-04-23 03:16:02,044 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-23 03:16:02,350 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-23 03:16:02,353 p=1 u=root |  ok: [127.0.0.1]
2020-04-23 03:16:02,666 p=1 u=root |  TASK [k8s : 备份旧 k8s 集群数据] ********************************************************************************************************************************************************************************************
2020-04-23 03:16:02,668 p=1 u=root |  changed: [127.0.0.1]
2020-04-23 03:16:02,959 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-23 03:16:02,960 p=1 u=root |  changed: [127.0.0.1]
2020-04-23 03:16:04,221 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-23 03:16:04,223 p=1 u=root |  changed: [127.0.0.1]
2020-04-23 03:17:42,271 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-23 03:17:42,273 p=1 u=root |  changed: [127.0.0.1]
2020-04-23 03:17:42,886 p=1 u=root |  TASK [k8s : 生成Core DNS配置映射] ******************************************************************************************************************************************************************************************
2020-04-23 03:17:42,887 p=1 u=root |  changed: [127.0.0.1]
2020-04-23 03:17:43,655 p=1 u=root |  TASK [k8s : 更新Core DNS配置] ********************************************************************************************************************************************************************************************
2020-04-23 03:17:43,657 p=1 u=root |  changed: [127.0.0.1]
2020-04-23 03:17:43,676 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-23 03:17:44,030 p=1 u=root |  TASK [rancher : 检查Rancher工作目录是否存在] ***********************************************************************************************************************************************************************************
2020-04-23 03:17:44,032 p=1 u=root |  ok: [127.0.0.1]
2020-04-23 03:17:44,907 p=1 u=root |  TASK [rancher : 更新Rancher HA 安装脚本] ***********************************************************************************************************************************************************************************
2020-04-23 03:17:44,909 p=1 u=root |  ok: [127.0.0.1] => (item={'src': '/etc/ansible/roles/rancher/templates/rancher-install.sh.j2', 'dest': '/etc/ansible/cluster/local/rancher/rancher-install.sh'})
2020-04-23 03:17:46,407 p=1 u=root |  TASK [rancher : 安装Rancher HA] ****************************************************************************************************************************************************************************************
2020-04-23 03:17:46,409 p=1 u=root |  changed: [127.0.0.1]
2020-04-23 03:17:46,436 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-23 03:17:46,737 p=1 u=root |  TASK [kubectl : 创建kubectl配置目录，如果存在则跳过] *******************************************************************************************************************************************************************************
2020-04-23 03:17:46,739 p=1 u=root |  ok: [192.168.50.119]
2020-04-23 03:17:47,063 p=1 u=root |  TASK [kubectl : 检查 kubecfg 文件是否生成] ***********************************************************************************************************************************************************************************
2020-04-23 03:17:47,064 p=1 u=root |  ok: [192.168.50.119]
2020-04-23 03:17:48,078 p=1 u=root |  TASK [kubectl : 拷贝 kubecfg 文件到 local 集群的所有节点] ************************************************************************************************************************************************************************
2020-04-23 03:17:48,082 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/cluster/local/rke/kube_config_cluster.yml', 'dest': '~/.kube/config'})
2020-04-23 03:17:48,426 p=1 u=root |  TASK [kubectl : 配置 kubectl 自动补全] *************************************************************************************************************************************************************************************
2020-04-23 03:17:48,429 p=1 u=root |  changed: [192.168.50.119]
2020-04-23 03:17:48,434 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-23 03:17:48,435 p=1 u=root |  127.0.0.1                  : ok=13   changed=8    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
2020-04-23 03:17:48,436 p=1 u=root |  192.168.50.119             : ok=13   changed=7    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-04-23 04:02:01,614 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-23 04:02:01,645 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-23 04:02:01,684 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-23 04:02:03,098 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-23 04:02:03,101 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-23 04:02:03,635 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-23 04:02:04,345 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-23 04:02:04,906 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-23 04:02:05,523 p=1 u=root |  TASK [init : adjust default sysctl values] ***************************************************************************************************************************************************************************
2020-04-23 04:02:05,525 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-04-23 04:02:05,863 p=1 u=root |  changed: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-04-23 04:02:06,201 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-04-23 04:02:06,496 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-04-23 04:02:06,837 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-04-23 04:02:07,131 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-04-23 04:02:07,472 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-04-23 04:02:10,273 p=1 u=root |  TASK [init : Node 配置初始化] *********************************************************************************************************************************************************************************************
2020-04-23 04:02:10,277 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-04-23 04:02:10,899 p=1 u=root |  TASK [init : 加载系统内核模块] ***********************************************************************************************************************************************************************************************
2020-04-23 04:02:10,901 p=1 u=root |  changed: [192.168.50.119] => (item=/etc/profile.d/load-mod.sh)
2020-04-23 04:02:24,631 p=1 u=root |  TASK [init : Docker 配置初始化] *******************************************************************************************************************************************************************************************
2020-04-23 04:02:24,634 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-04-23 04:02:28,953 p=1 u=root |  TASK [init : Node 残留清理] **********************************************************************************************************************************************************************************************
2020-04-23 04:02:28,954 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-04-23 04:02:29,627 p=1 u=root |  TASK [init : 拷贝Kubectl到节点] *******************************************************************************************************************************************************************************************
2020-04-23 04:02:29,628 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-04-23 04:02:29,643 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-23 04:02:29,944 p=1 u=root |  TASK [ssh-key : 检查ssh_rsa_key文件] *************************************************************************************************************************************************************************************
2020-04-23 04:02:29,945 p=1 u=root |  ok: [127.0.0.1]
2020-04-23 04:02:30,104 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-23 04:02:30,723 p=1 u=root |  TASK [ssh-user : 创建rke工作用户] ******************************************************************************************************************************************************************************************
2020-04-23 04:02:30,726 p=1 u=root |  ok: [192.168.50.119]
2020-04-23 04:02:31,386 p=1 u=root |  TASK [ssh-user : rke-user用户安装ssh key] ********************************************************************************************************************************************************************************
2020-04-23 04:02:31,387 p=1 u=root |  ok: [192.168.50.119]
2020-04-23 04:02:31,405 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-23 04:02:31,742 p=1 u=root |  TASK [certs : 检查certs工作目录是否存在] ***************************************************************************************************************************************************************************************
2020-04-23 04:02:31,745 p=1 u=root |  ok: [127.0.0.1]
2020-04-23 04:02:32,441 p=1 u=root |  TASK [certs : 生成自签名ssl证书] ********************************************************************************************************************************************************************************************
2020-04-23 04:02:32,445 p=1 u=root |  changed: [127.0.0.1] => (item=/etc/ansible/bin/create-cert.sh --ssl-domain=www.test.com --ssl-trusted-ip=192.168.50.119 )
2020-04-23 04:02:32,489 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-23 04:02:32,886 p=1 u=root |  TASK [k8s : 检查 RKE 工作目录是否存在] *****************************************************************************************************************************************************************************************
2020-04-23 04:02:32,890 p=1 u=root |  ok: [127.0.0.1]
2020-04-23 04:02:33,230 p=1 u=root |  TASK [k8s : 备份旧 k8s 集群数据] ********************************************************************************************************************************************************************************************
2020-04-23 04:02:33,231 p=1 u=root |  changed: [127.0.0.1]
2020-04-23 04:02:33,567 p=1 u=root |  TASK [k8s : 创建 RKE 工作目录，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-04-23 04:02:33,569 p=1 u=root |  changed: [127.0.0.1]
2020-04-23 04:02:34,886 p=1 u=root |  TASK [k8s : 生成 RKE 配置文件] *********************************************************************************************************************************************************************************************
2020-04-23 04:02:34,889 p=1 u=root |  changed: [127.0.0.1]
2020-04-23 04:04:10,110 p=1 u=root |  TASK [k8s : 安装或升级 local k8s 集群 - 使用自定义的 rke 版本] **********************************************************************************************************************************************************************
2020-04-23 04:04:10,111 p=1 u=root |  changed: [127.0.0.1]
2020-04-23 04:04:10,724 p=1 u=root |  TASK [k8s : 生成Core DNS配置映射] ******************************************************************************************************************************************************************************************
2020-04-23 04:04:10,726 p=1 u=root |  changed: [127.0.0.1]
2020-04-23 04:04:11,738 p=1 u=root |  TASK [k8s : 更新Core DNS配置] ********************************************************************************************************************************************************************************************
2020-04-23 04:04:11,740 p=1 u=root |  changed: [127.0.0.1]
2020-04-23 04:04:11,757 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-23 04:04:12,047 p=1 u=root |  TASK [rancher : 检查Rancher工作目录是否存在] ***********************************************************************************************************************************************************************************
2020-04-23 04:04:12,048 p=1 u=root |  ok: [127.0.0.1]
2020-04-23 04:04:12,907 p=1 u=root |  TASK [rancher : 更新Rancher HA 安装脚本] ***********************************************************************************************************************************************************************************
2020-04-23 04:04:12,909 p=1 u=root |  ok: [127.0.0.1] => (item={'src': '/etc/ansible/roles/rancher/templates/rancher-install.sh.j2', 'dest': '/etc/ansible/cluster/local/rancher/rancher-install.sh'})
2020-04-23 04:04:14,387 p=1 u=root |  TASK [rancher : 安装Rancher HA] ****************************************************************************************************************************************************************************************
2020-04-23 04:04:14,400 p=1 u=root |  changed: [127.0.0.1]
2020-04-23 04:04:14,436 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-23 04:04:14,843 p=1 u=root |  TASK [kubectl : 创建kubectl配置目录，如果存在则跳过] *******************************************************************************************************************************************************************************
2020-04-23 04:04:14,845 p=1 u=root |  ok: [192.168.50.119]
2020-04-23 04:04:15,213 p=1 u=root |  TASK [kubectl : 检查 kubecfg 文件是否生成] ***********************************************************************************************************************************************************************************
2020-04-23 04:04:15,215 p=1 u=root |  ok: [192.168.50.119]
2020-04-23 04:04:16,108 p=1 u=root |  TASK [kubectl : 拷贝 kubecfg 文件到 local 集群的所有节点] ************************************************************************************************************************************************************************
2020-04-23 04:04:16,110 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/cluster/local/rke/kube_config_cluster.yml', 'dest': '~/.kube/config'})
2020-04-23 04:04:16,503 p=1 u=root |  TASK [kubectl : 配置 kubectl 自动补全] *************************************************************************************************************************************************************************************
2020-04-23 04:04:16,505 p=1 u=root |  changed: [192.168.50.119]
2020-04-23 04:04:16,509 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-23 04:04:16,511 p=1 u=root |  127.0.0.1                  : ok=13   changed=8    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
2020-04-23 04:04:16,512 p=1 u=root |  192.168.50.119             : ok=13   changed=7    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-04-25 05:28:55,400 p=1 u=root |  ERROR! 'when' is not a valid attribute for a Play

The error appears to be in '/etc/ansible/roles/all.yaml': line 6, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

# 初始化节点
- hosts: "{{ host_groups }}"
  ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes. Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2020-04-25 05:30:27,014 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 05:30:28,153 p=1 u=root |  TASK [Gathering Facts] ***********************************************************************************************************************************************************************************************
2020-04-25 05:30:28,155 p=1 u=root |  ok: [127.0.0.1]
2020-04-25 05:30:28,167 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-25 05:30:30,183 p=1 u=root |  TASK [Gathering Facts] ***********************************************************************************************************************************************************************************************
2020-04-25 05:30:30,185 p=1 u=root |  ok: [192.168.50.119]
2020-04-25 05:30:30,211 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-25 05:30:30,690 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 05:30:30,737 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-25 05:30:30,756 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 05:30:30,777 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 05:30:30,802 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 05:30:30,827 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-25 05:30:30,846 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 05:30:30,872 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-25 05:30:30,894 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 05:30:30,902 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-25 05:30:30,903 p=1 u=root |  127.0.0.1                  : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-25 05:30:30,904 p=1 u=root |  192.168.50.119             : ok=1    changed=0    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2020-04-25 05:31:00,866 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 05:31:00,895 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-25 05:31:00,928 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-25 05:31:01,992 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-25 05:31:01,995 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-25 05:31:02,644 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-25 05:31:03,182 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-25 05:31:03,659 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-25 05:31:04,061 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 05:31:04,095 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-25 05:31:04,119 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 05:31:04,143 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 05:31:04,166 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 05:31:04,189 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-25 05:31:04,238 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 05:31:04,264 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-25 05:31:04,286 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 05:31:04,293 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-25 05:31:04,294 p=1 u=root |  192.168.50.119             : ok=1    changed=1    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
2020-04-25 05:51:54,327 p=18 u=root |  ERROR! 'template' is not a valid attribute for a Play

The error appears to be in '/etc/ansible/roles/init.yaml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- name: 拷贝初始化文件到节点
  ^ here

2020-04-25 05:53:45,245 p=22 u=root |  ERROR! The field 'hosts' has an invalid value, which includes an undefined variable. The error was: 'host_groups' is undefined

The error appears to be in '/etc/ansible/roles/init.yaml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

## 初始化节点
- hosts: "{{ host_groups }}"
  ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes. Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2020-04-25 06:20:16,818 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-04-25 06:20:17,684 p=1 u=root |  ERROR! vars file /etc/ansible/config/all.yaml was not found on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2020-04-25 06:20:40,878 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-04-25 06:20:41,748 p=1 u=root |  ERROR! vars file /etc/ansible/config/all.yaml was not found on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2020-04-25 06:20:53,483 p=1 u=root |  ERROR! vars file /etc/ansible/config/all.yaml was not found on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2020-04-25 06:21:11,035 p=1 u=root |  ERROR! vars file /etc/ansible/config/all.yaml was not found on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2020-04-25 06:21:30,257 p=1 u=root |  ERROR! vars file /etc/ansible/config/all.yaml was not found on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2020-04-25 06:22:09,857 p=1 u=root |  ERROR! vars file /etc/ansible/config/all.yaml was not found on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2020-04-25 06:26:04,182 p=1 u=root |  ERROR! vars file /etc/ansible/config/all.yaml was not found on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2020-04-25 06:26:41,797 p=1 u=root |  ERROR! the role 'custom-k8s-cfg' was not found in /etc/ansible/roles/roles:/etc/ansible/roles:/etc/ansible/roles

The error appears to be in '/etc/ansible/roles/all.yaml': line 67, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  roles:
  - { role: 'custom-k8s-cfg' }
    ^ here
This one looks easy to fix. It seems that there is a value started
with a quote, and the YAML parser is expecting to see the line ended
with the same kind of quote. For instance:

    when: "ok" in result.stdout

Could be written as:

   when: '"ok" in result.stdout'

Or equivalently:

   when: "'ok' in result.stdout"

2020-04-25 06:27:41,457 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:27:41,486 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-25 06:27:41,516 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-25 06:27:42,713 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-25 06:27:42,717 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-25 06:27:43,406 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-25 06:27:43,897 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-25 06:27:44,372 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-25 06:27:44,469 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:27:44,490 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:27:44,515 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-25 06:27:44,537 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:27:44,563 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:27:44,588 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-25 06:27:44,611 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:27:44,634 p=1 u=root |  PLAY [local] *********************************************************************************************************************************************************************************************************
2020-04-25 06:27:44,654 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:27:44,665 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-25 06:27:44,667 p=1 u=root |  192.168.50.119             : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-04-25 06:28:31,724 p=1 u=root |  ERROR! vars file /etc/ansible/config/all.yaml was not found on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2020-04-25 06:30:49,257 p=1 u=root |  ERROR! vars file /etc/ansible/config/all.yaml was not found on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2020-04-25 06:31:40,232 p=1 u=root |  ERROR! vars file /etc/ansible/config/"{{ host_groups }}".yaml was not found on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2020-04-25 06:40:08,271 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:40:08,301 p=1 u=root |  PLAY [localdev] ******************************************************************************************************************************************************************************************************
2020-04-25 06:40:08,323 p=1 u=root |  PLAY [localdev] ******************************************************************************************************************************************************************************************************
2020-04-25 06:40:09,389 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-25 06:40:09,392 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-25 06:40:09,813 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-25 06:40:10,291 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-25 06:40:10,892 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-25 06:40:10,971 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:40:10,985 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:40:11,003 p=1 u=root |  PLAY [localdev] ******************************************************************************************************************************************************************************************************
2020-04-25 06:40:11,020 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:40:11,038 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:40:11,057 p=1 u=root |  PLAY [localdev] ******************************************************************************************************************************************************************************************************
2020-04-25 06:40:11,072 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:40:11,085 p=1 u=root |  PLAY [localdev] ******************************************************************************************************************************************************************************************************
2020-04-25 06:40:11,100 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:40:11,107 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-25 06:40:11,108 p=1 u=root |  192.168.50.119             : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-04-25 06:50:40,585 p=6 u=root |  ERROR! Missing target hosts
2020-04-25 06:51:18,297 p=9 u=root |  PLAY [Ansible Ad-Hoc] ************************************************************************************************************************************************************************************************
2020-04-25 06:51:18,493 p=9 u=root |  TASK [debug] *********************************************************************************************************************************************************************************************************
2020-04-25 06:51:18,497 p=9 u=root |  ok: [192.168.50.119] => 
  groups:
    all:
    - 192.168.50.119
    localdev:
    - 192.168.50.119
    ungrouped: []
2020-04-25 06:51:18,500 p=9 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-25 06:51:18,500 p=9 u=root |  192.168.50.119             : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-04-25 06:52:30,764 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:52:30,783 p=1 u=root |  PLAY [all] ***********************************************************************************************************************************************************************************************************
2020-04-25 06:52:30,810 p=1 u=root |  PLAY [localdev] ******************************************************************************************************************************************************************************************************
2020-04-25 06:52:31,891 p=1 u=root |  TASK [init : 拷贝初始化文件到节点] *********************************************************************************************************************************************************************************************
2020-04-25 06:52:31,893 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-04-25 06:52:32,330 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-04-25 06:52:32,845 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-04-25 06:52:33,294 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-04-25 06:52:33,384 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:52:33,397 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:52:33,421 p=1 u=root |  PLAY [localdev] ******************************************************************************************************************************************************************************************************
2020-04-25 06:52:33,442 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:52:33,467 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:52:33,491 p=1 u=root |  PLAY [localdev] ******************************************************************************************************************************************************************************************************
2020-04-25 06:52:33,508 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:52:33,527 p=1 u=root |  PLAY [localdev] ******************************************************************************************************************************************************************************************************
2020-04-25 06:52:33,544 p=1 u=root |  PLAY [127.0.0.1] *****************************************************************************************************************************************************************************************************
2020-04-25 06:52:33,557 p=1 u=root |  PLAY RECAP ***********************************************************************************************************************************************************************************************************
2020-04-25 06:52:33,559 p=1 u=root |  192.168.50.119             : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-04-25 10:51:18,961 p=1 u=root |  [WARNING]:  * Failed to parse /etc/ansible/config/hosts.yaml with script plugin: problem running /etc/ansible/config/hosts.yaml --list ([Errno 8]
Exec format error: '/etc/ansible/config/hosts.yaml')

2020-04-25 10:51:18,964 p=1 u=root |  [WARNING]:  * Failed to parse /etc/ansible/config/hosts.yaml with auto plugin: Syntax Error while loading YAML.   could not find expected ':'  The
error appears to be in '/etc/ansible/config/hosts.yaml': line 23, column 1, but may be elsewhere in the file depending on the exact syntax problem.
The offending line appears to be:  [localdev] 192.168.50.119 internal_address=192.168.50.119 role=controlplane,worker,etcd ingress=true
ansible_ssh_user=root ansible_ssh_pass=123456 ansible_ssh_port=22 ^ here

2020-04-25 10:51:18,965 p=1 u=root |  [WARNING]:  * Failed to parse /etc/ansible/config/hosts.yaml with yaml plugin: Syntax Error while loading YAML.   could not find expected ':'  The
error appears to be in '/etc/ansible/config/hosts.yaml': line 23, column 1, but may be elsewhere in the file depending on the exact syntax problem.
The offending line appears to be:  [localdev] 192.168.50.119 internal_address=192.168.50.119 role=controlplane,worker,etcd ingress=true
ansible_ssh_user=root ansible_ssh_pass=123456 ansible_ssh_port=22 ^ here

2020-04-25 10:51:18,967 p=1 u=root |  [WARNING]:  * Failed to parse /etc/ansible/config/hosts.yaml with ini plugin: Invalid host pattern 'local_k8s_hosts_group:' supplied, ending in ':'
is not allowed, this character is reserved to provide a port.

2020-04-25 10:51:18,967 p=1 u=root |  [WARNING]: Unable to parse /etc/ansible/config/hosts.yaml as an inventory source

2020-04-25 10:51:18,968 p=1 u=root |  [WARNING]: No inventory was parsed, only implicit localhost is available

2020-04-25 10:51:18,990 p=1 u=root |  [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2020-04-25 10:51:20,623 p=1 u=root |  ERROR! the role 'custom-k8s-cfg' was not found in /etc/ansible/roles/roles:/etc/ansible/roles:/etc/ansible/roles

The error appears to be in '/etc/ansible/roles/all.yaml': line 67, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  roles:
  - { role: 'custom-k8s-cfg' }
    ^ here
This one looks easy to fix. It seems that there is a value started
with a quote, and the YAML parser is expecting to see the line ended
with the same kind of quote. For instance:

    when: "ok" in result.stdout

Could be written as:

   when: '"ok" in result.stdout'

Or equivalently:

   when: "'ok' in result.stdout"

2020-04-25 10:52:35,893 p=1 u=root |  [WARNING]:  * Failed to parse /etc/ansible/config/hosts with script plugin: problem running /etc/ansible/config/hosts --list ([Errno 8] Exec format
error: '/etc/ansible/config/hosts')

2020-04-25 10:52:35,894 p=1 u=root |  [WARNING]:  * Failed to parse /etc/ansible/config/hosts with yaml plugin: Syntax Error while loading YAML.   could not find expected ':'  The error
appears to be in '/etc/ansible/config/hosts': line 23, column 1, but may be elsewhere in the file depending on the exact syntax problem.  The
offending line appears to be:  [localdev] 192.168.50.119 internal_address=192.168.50.119 role=controlplane,worker,etcd ingress=true
ansible_ssh_user=root ansible_ssh_pass=123456 ansible_ssh_port=22 ^ here

2020-04-25 10:52:35,895 p=1 u=root |  [WARNING]:  * Failed to parse /etc/ansible/config/hosts with ini plugin: Invalid host pattern 'local_k8s_hosts_group:' supplied, ending in ':' is not
allowed, this character is reserved to provide a port.

2020-04-25 10:52:35,896 p=1 u=root |  [WARNING]: Unable to parse /etc/ansible/config/hosts as an inventory source

2020-04-25 10:52:35,898 p=1 u=root |  [WARNING]: No inventory was parsed, only implicit localhost is available

2020-04-25 10:52:35,916 p=1 u=root |  [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2020-04-25 10:52:37,412 p=1 u=root |  ERROR! the role 'custom-k8s-cfg' was not found in /etc/ansible/roles/roles:/etc/ansible/roles:/etc/ansible/roles

The error appears to be in '/etc/ansible/roles/all.yaml': line 67, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  roles:
  - { role: 'custom-k8s-cfg' }
    ^ here
This one looks easy to fix. It seems that there is a value started
with a quote, and the YAML parser is expecting to see the line ended
with the same kind of quote. For instance:

    when: "ok" in result.stdout

Could be written as:

   when: '"ok" in result.stdout'

Or equivalently:

   when: "'ok' in result.stdout"

2020-04-25 10:53:17,114 p=1 u=root |  [WARNING]:  * Failed to parse /etc/ansible/config/hosts with script plugin: problem running /etc/ansible/config/hosts --list ([Errno 8] Exec format
error: '/etc/ansible/config/hosts')

2020-04-25 10:53:17,116 p=1 u=root |  [WARNING]:  * Failed to parse /etc/ansible/config/hosts with yaml plugin: Syntax Error while loading YAML.   could not find expected ':'  The error
appears to be in '/etc/ansible/config/hosts': line 22, column 1, but may be elsewhere in the file depending on the exact syntax problem.  The
offending line appears to be:  [localdev] 192.168.50.119 internal_address=192.168.50.119 role=controlplane,worker,etcd ingress=true
ansible_ssh_user=root ansible_ssh_pass=123456 ansible_ssh_port=22 ^ here

2020-04-25 10:53:17,117 p=1 u=root |  [WARNING]:  * Failed to parse /etc/ansible/config/hosts with ini plugin: Invalid host pattern 'local_k8s_hosts_group:' supplied, ending in ':' is not
allowed, this character is reserved to provide a port.

2020-04-25 10:53:17,118 p=1 u=root |  [WARNING]: Unable to parse /etc/ansible/config/hosts as an inventory source

2020-04-25 10:53:17,119 p=1 u=root |  [WARNING]: No inventory was parsed, only implicit localhost is available

2020-04-25 10:53:17,132 p=1 u=root |  [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2020-04-25 10:53:18,505 p=1 u=root |  ERROR! the role 'custom-k8s-cfg' was not found in /etc/ansible/roles/roles:/etc/ansible/roles:/etc/ansible/roles

The error appears to be in '/etc/ansible/roles/all.yaml': line 67, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  roles:
  - { role: 'custom-k8s-cfg' }
    ^ here
This one looks easy to fix. It seems that there is a value started
with a quote, and the YAML parser is expecting to see the line ended
with the same kind of quote. For instance:

    when: "ok" in result.stdout

Could be written as:

   when: '"ok" in result.stdout'

Or equivalently:

   when: "'ok' in result.stdout"

2020-04-25 10:54:48,498 p=1 u=root |  [WARNING]:  * Failed to parse /etc/ansible/config/hosts with script plugin: problem running /etc/ansible/config/hosts --list ([Errno 8] Exec format
error: '/etc/ansible/config/hosts')

2020-04-25 10:54:48,499 p=1 u=root |  [WARNING]:  * Failed to parse /etc/ansible/config/hosts with yaml plugin: Syntax Error while loading YAML.   could not find expected ':'  The error
appears to be in '/etc/ansible/config/hosts': line 22, column 1, but may be elsewhere in the file depending on the exact syntax problem.  The
offending line appears to be:  [localdev] 192.168.50.119 internal_address=192.168.50.119 role=controlplane,worker,etcd ingress=true
ansible_ssh_user=root ansible_ssh_pass=123456 ansible_ssh_port=22 ^ here

2020-04-25 10:54:48,500 p=1 u=root |  [WARNING]:  * Failed to parse /etc/ansible/config/hosts with ini plugin: Invalid host pattern 'local_k8s_hosts_group:' supplied, ending in ':' is not
allowed, this character is reserved to provide a port.

2020-04-25 10:54:48,501 p=1 u=root |  [WARNING]: Unable to parse /etc/ansible/config/hosts as an inventory source

2020-04-25 10:54:48,502 p=1 u=root |  [WARNING]: No inventory was parsed, only implicit localhost is available

2020-04-25 10:54:48,516 p=1 u=root |  [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2020-04-25 10:54:50,438 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:54:50,456 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-04-25 10:54:50,456 p=1 u=root |  skipping: no hosts matched
2020-04-25 10:54:50,463 p=1 u=root |  [WARNING]: Could not match supplied host pattern, ignoring: local-dev-1

2020-04-25 10:54:50,464 p=1 u=root |  PLAY [local-dev-1] ***********************************************************************************************************************************
2020-04-25 10:54:50,465 p=1 u=root |  skipping: no hosts matched
2020-04-25 10:54:50,471 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:54:50,485 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:54:50,496 p=1 u=root |  PLAY [local-dev-1] ***********************************************************************************************************************************
2020-04-25 10:54:50,497 p=1 u=root |  skipping: no hosts matched
2020-04-25 10:54:50,505 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:54:50,519 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:54:50,532 p=1 u=root |  PLAY [local-dev-1] ***********************************************************************************************************************************
2020-04-25 10:54:50,533 p=1 u=root |  skipping: no hosts matched
2020-04-25 10:54:50,540 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:54:50,554 p=1 u=root |  PLAY [local-dev-1] ***********************************************************************************************************************************
2020-04-25 10:54:50,554 p=1 u=root |  skipping: no hosts matched
2020-04-25 10:54:50,563 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:54:50,570 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-04-25 10:55:33,563 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:55:33,584 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-04-25 10:55:33,607 p=1 u=root |  [WARNING]: Could not match supplied host pattern, ignoring: local-dev-1

2020-04-25 10:55:33,608 p=1 u=root |  PLAY [local-dev-1] ***********************************************************************************************************************************
2020-04-25 10:55:33,609 p=1 u=root |  skipping: no hosts matched
2020-04-25 10:55:33,619 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:55:33,631 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:55:33,644 p=1 u=root |  PLAY [local-dev-1] ***********************************************************************************************************************************
2020-04-25 10:55:33,646 p=1 u=root |  skipping: no hosts matched
2020-04-25 10:55:33,656 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:55:33,670 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:55:33,682 p=1 u=root |  PLAY [local-dev-1] ***********************************************************************************************************************************
2020-04-25 10:55:33,683 p=1 u=root |  skipping: no hosts matched
2020-04-25 10:55:33,690 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:55:33,705 p=1 u=root |  PLAY [local-dev-1] ***********************************************************************************************************************************
2020-04-25 10:55:33,706 p=1 u=root |  skipping: no hosts matched
2020-04-25 10:55:33,713 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:55:33,722 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-04-25 10:56:12,887 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:56:12,906 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-04-25 10:56:12,934 p=1 u=root |  [WARNING]: Could not match supplied host pattern, ignoring: local-dev-1

2020-04-25 10:56:12,935 p=1 u=root |  PLAY [local-dev-1] ***********************************************************************************************************************************
2020-04-25 10:56:12,937 p=1 u=root |  skipping: no hosts matched
2020-04-25 10:56:12,948 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:56:12,963 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:56:12,976 p=1 u=root |  PLAY [local-dev-1] ***********************************************************************************************************************************
2020-04-25 10:56:12,978 p=1 u=root |  skipping: no hosts matched
2020-04-25 10:56:12,987 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:56:13,003 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:56:13,016 p=1 u=root |  PLAY [local-dev-1] ***********************************************************************************************************************************
2020-04-25 10:56:13,017 p=1 u=root |  skipping: no hosts matched
2020-04-25 10:56:13,024 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:56:13,037 p=1 u=root |  PLAY [local-dev-1] ***********************************************************************************************************************************
2020-04-25 10:56:13,038 p=1 u=root |  skipping: no hosts matched
2020-04-25 10:56:13,046 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-04-25 10:56:13,053 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-05-07 03:45:58,193 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-05-07 03:46:00,077 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-05-07 03:46:01,486 p=1 u=root |  TASK [Gathering Facts] *******************************************************************************************************************************
2020-05-07 03:46:01,487 p=1 u=root |  ok: [127.0.0.1]
2020-05-07 03:46:01,498 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-05-07 03:46:02,952 p=1 u=root |  TASK [Gathering Facts] *******************************************************************************************************************************
2020-05-07 03:46:02,953 p=1 u=root |  ok: [192.168.50.119]
2020-05-07 03:46:02,965 p=1 u=root |  PLAY [local] *****************************************************************************************************************************************
2020-05-07 03:46:03,965 p=1 u=root |  TASK [init : 拷贝模块加载脚本到节点] ****************************************************************************************************************************
2020-05-07 03:46:03,966 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-05-07 03:46:04,810 p=1 u=root |  TASK [init : 拷贝节点清理脚本到节点] ****************************************************************************************************************************
2020-05-07 03:46:04,813 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-05-07 03:46:05,498 p=1 u=root |  TASK [init : 拷贝节点配置初始化脚本到节点] *************************************************************************************************************************
2020-05-07 03:46:05,500 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-05-07 03:46:05,506 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-05-07 03:46:05,507 p=1 u=root |  127.0.0.1                  : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-05-07 03:46:05,508 p=1 u=root |  192.168.50.119             : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-05-07 03:46:07,639 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-05-07 03:46:07,897 p=1 u=root |   [ERROR]: User interrupted execution

2020-05-07 03:47:59,624 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-05-07 03:48:01,405 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-05-07 03:48:01,428 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-05-07 03:48:01,452 p=1 u=root |  PLAY [local] *****************************************************************************************************************************************
2020-05-07 03:48:01,679 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-05-07 03:48:01,680 p=1 u=root |  192.168.50.119             : ok=0    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2020-05-07 03:48:03,564 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-05-07 03:48:04,452 p=1 u=root |   [ERROR]: User interrupted execution

2020-05-07 03:48:12,051 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-05-07 03:48:13,782 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-05-07 03:48:13,813 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-05-07 03:48:13,835 p=1 u=root |  PLAY [local] *****************************************************************************************************************************************
2020-05-07 03:48:14,063 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-05-07 03:48:14,064 p=1 u=root |  192.168.50.119             : ok=0    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2020-05-07 03:48:15,739 p=1 u=root |   [ERROR]: User interrupted execution

2020-05-07 03:50:25,305 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-05-07 03:50:26,757 p=1 u=root |   [ERROR]: User interrupted execution

2020-05-07 03:50:28,667 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-05-07 03:50:29,814 p=1 u=root |   [ERROR]: User interrupted execution

2020-05-07 03:50:31,606 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-05-07 03:50:31,669 p=1 u=root |   [ERROR]: User interrupted execution

2020-05-07 03:50:44,761 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-05-07 03:50:45,231 p=1 u=root |   [ERROR]: User interrupted execution

2020-05-07 03:52:43,286 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-05-07 03:52:43,310 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-05-07 03:52:43,340 p=1 u=root |  PLAY [local] *****************************************************************************************************************************************
2020-05-07 03:52:43,602 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-05-07 03:52:43,604 p=1 u=root |  192.168.50.119             : ok=0    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2020-05-07 03:52:47,206 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-05-07 03:52:47,229 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-05-07 03:52:47,255 p=1 u=root |  [WARNING]: Could not match supplied host pattern, ignoring: custom-dev1

2020-05-07 03:52:47,257 p=1 u=root |  PLAY [custom-dev1] ***********************************************************************************************************************************
2020-05-07 03:52:47,258 p=1 u=root |  skipping: no hosts matched
2020-05-07 03:52:47,259 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-05-07 03:53:52,659 p=1 u=root |   [ERROR]: User interrupted execution

2020-05-07 03:53:56,781 p=1 u=root |   [ERROR]: User interrupted execution

2020-05-07 03:54:00,787 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-05-07 03:54:00,810 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-05-07 03:54:00,838 p=1 u=root |  [WARNING]: Could not match supplied host pattern, ignoring: import-dev1

2020-05-07 03:54:00,840 p=1 u=root |  PLAY [import-dev1] ***********************************************************************************************************************************
2020-05-07 03:54:00,842 p=1 u=root |  skipping: no hosts matched
2020-05-07 03:54:00,843 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-05-07 03:54:04,727 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-05-07 03:54:04,746 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-05-07 03:54:04,771 p=1 u=root |  [WARNING]: Could not match supplied host pattern, ignoring: import-dev2

2020-05-07 03:54:04,772 p=1 u=root |  PLAY [import-dev2] ***********************************************************************************************************************************
2020-05-07 03:54:04,773 p=1 u=root |  skipping: no hosts matched
2020-05-07 03:54:04,774 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-05-07 03:55:29,745 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-05-07 03:55:29,770 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-05-07 03:55:29,793 p=1 u=root |  PLAY [local] *****************************************************************************************************************************************
2020-05-07 03:55:30,045 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-05-07 03:55:30,047 p=1 u=root |  192.168.50.119             : ok=0    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2020-05-07 03:55:51,715 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-05-07 03:55:51,737 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-05-07 03:55:51,760 p=1 u=root |  PLAY [local] *****************************************************************************************************************************************
2020-05-07 03:55:51,977 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-05-07 03:55:51,979 p=1 u=root |  192.168.50.119             : ok=0    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2020-05-07 03:56:13,892 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-05-07 03:56:13,914 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-05-07 03:56:13,941 p=1 u=root |  PLAY [local] *****************************************************************************************************************************************
2020-05-07 03:56:14,174 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-05-07 03:56:14,176 p=1 u=root |  192.168.50.119             : ok=0    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2020-05-07 03:56:35,294 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-05-07 03:56:35,313 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-05-07 03:56:35,337 p=1 u=root |  PLAY [local] *****************************************************************************************************************************************
2020-05-07 03:56:35,599 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-05-07 03:56:35,601 p=1 u=root |  192.168.50.119             : ok=0    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2020-05-07 03:58:27,677 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-05-07 03:58:27,703 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-05-07 03:58:27,727 p=1 u=root |  PLAY [local] *****************************************************************************************************************************************
2020-05-07 03:58:27,956 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-05-07 03:58:27,959 p=1 u=root |  192.168.50.119             : ok=0    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2020-05-07 03:58:44,906 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-05-07 03:58:44,927 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-05-07 03:58:44,952 p=1 u=root |  PLAY [local] *****************************************************************************************************************************************
2020-05-07 03:58:46,110 p=1 u=root |  TASK [init : 拷贝模块加载脚本到节点] ****************************************************************************************************************************
2020-05-07 03:58:46,114 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-05-07 03:58:46,650 p=1 u=root |  TASK [init : 拷贝节点清理脚本到节点] ****************************************************************************************************************************
2020-05-07 03:58:46,651 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-05-07 03:58:47,271 p=1 u=root |  TASK [init : 拷贝节点配置初始化脚本到节点] *************************************************************************************************************************
2020-05-07 03:58:47,273 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-05-07 03:58:47,279 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-05-07 03:58:47,281 p=1 u=root |  192.168.50.119             : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-05-07 04:10:16,200 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-05-07 04:10:16,224 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-05-07 04:10:16,248 p=1 u=root |  PLAY [local] *****************************************************************************************************************************************
2020-05-07 04:10:17,416 p=1 u=root |  TASK [init : 拷贝模块加载脚本到节点] ****************************************************************************************************************************
2020-05-07 04:10:17,419 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-05-07 04:10:18,018 p=1 u=root |  TASK [init : 拷贝节点清理脚本到节点] ****************************************************************************************************************************
2020-05-07 04:10:18,019 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-05-07 04:10:18,695 p=1 u=root |  TASK [init : 拷贝节点配置初始化脚本到节点] *************************************************************************************************************************
2020-05-07 04:10:18,696 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-05-07 04:10:19,463 p=1 u=root |  TASK [init : 拷贝Docker配置初始化脚本到节点] *********************************************************************************************************************
2020-05-07 04:10:19,464 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-05-07 04:10:19,934 p=1 u=root |  TASK [init : adjust default sysctl values] ***********************************************************************************************************
2020-05-07 04:10:19,935 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-05-07 04:10:20,143 p=1 u=root |  changed: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-05-07 04:10:20,338 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-05-07 04:10:20,540 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-05-07 04:10:20,790 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-05-07 04:10:21,018 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-05-07 04:10:21,244 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-05-07 04:10:24,206 p=1 u=root |  TASK [init : Node 配置初始化] *****************************************************************************************************************************
2020-05-07 04:10:24,207 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-05-07 04:10:24,651 p=1 u=root |  TASK [init : 加载系统内核模块] *******************************************************************************************************************************
2020-05-07 04:10:24,653 p=1 u=root |  changed: [192.168.50.119] => (item=/etc/profile.d/load-mod.sh)
2020-05-07 04:10:38,113 p=1 u=root |  TASK [init : Docker 配置初始化] ***************************************************************************************************************************
2020-05-07 04:10:38,115 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-05-07 04:10:41,995 p=1 u=root |  TASK [init : Node 残留清理] ******************************************************************************************************************************
2020-05-07 04:10:41,996 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-05-07 04:10:43,147 p=1 u=root |  TASK [init : 拷贝Kubectl到节点] ***************************************************************************************************************************
2020-05-07 04:10:43,150 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-05-07 04:10:43,157 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-05-07 04:10:43,158 p=1 u=root |  192.168.50.119             : ok=10   changed=6    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-05-07 04:11:50,261 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-05-07 04:11:50,279 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-05-07 04:11:50,301 p=1 u=root |  PLAY [local] *****************************************************************************************************************************************
2020-05-07 04:11:52,803 p=1 u=root |  TASK [init : 拷贝模块加载脚本到节点] ****************************************************************************************************************************
2020-05-07 04:11:52,806 p=1 u=root |  fatal: [192.168.50.119]: FAILED! => 
  msg: Incorrect sudo password
2020-05-07 04:11:52,809 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-05-07 04:11:52,810 p=1 u=root |  192.168.50.119             : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2020-05-07 04:17:59,862 p=1 u=root |  PLAY [127.0.0.1] *************************************************************************************************************************************
2020-05-07 04:17:59,887 p=1 u=root |  PLAY [all] *******************************************************************************************************************************************
2020-05-07 04:17:59,912 p=1 u=root |  PLAY [local] *****************************************************************************************************************************************
2020-05-07 04:18:00,982 p=1 u=root |  TASK [init : 拷贝模块加载脚本到节点] ****************************************************************************************************************************
2020-05-07 04:18:00,987 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-05-07 04:18:01,522 p=1 u=root |  TASK [init : 拷贝节点清理脚本到节点] ****************************************************************************************************************************
2020-05-07 04:18:01,523 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-05-07 04:18:02,149 p=1 u=root |  TASK [init : 拷贝节点配置初始化脚本到节点] *************************************************************************************************************************
2020-05-07 04:18:02,151 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-05-07 04:18:02,673 p=1 u=root |  TASK [init : 拷贝Docker配置初始化脚本到节点] *********************************************************************************************************************
2020-05-07 04:18:02,676 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-05-07 04:18:03,143 p=1 u=root |  TASK [init : adjust default sysctl values] ***********************************************************************************************************
2020-05-07 04:18:03,144 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-05-07 04:18:03,342 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-05-07 04:18:03,580 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-05-07 04:18:03,790 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-05-07 04:18:03,998 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-05-07 04:18:04,211 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-05-07 04:18:04,410 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-05-07 04:18:04,614 p=1 u=root |  changed: [192.168.50.119] => (item={'name': 'fs.inotify.max_user_watches', 'value': 1048576})
2020-05-07 04:18:06,142 p=1 u=root |  TASK [init : Node 配置初始化] *****************************************************************************************************************************
2020-05-07 04:18:06,143 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-05-07 04:18:06,610 p=1 u=root |  TASK [init : 加载系统内核模块] *******************************************************************************************************************************
2020-05-07 04:18:06,611 p=1 u=root |  changed: [192.168.50.119] => (item=/etc/profile.d/load-mod.sh)
2020-05-07 04:18:07,466 p=1 u=root |  TASK [init : Docker 配置初始化] ***************************************************************************************************************************
2020-05-07 04:18:07,469 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-05-07 04:18:08,856 p=1 u=root |  TASK [init : Node 残留清理] ******************************************************************************************************************************
2020-05-07 04:18:08,858 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-05-07 04:18:09,549 p=1 u=root |  TASK [init : 拷贝Kubectl到节点] ***************************************************************************************************************************
2020-05-07 04:18:09,551 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-05-07 04:18:09,555 p=1 u=root |  PLAY RECAP *******************************************************************************************************************************************
2020-05-07 04:18:09,556 p=1 u=root |  192.168.50.119             : ok=10   changed=5    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-05-07 07:51:52,538 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-05-07 07:51:54,326 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 07:51:54,348 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 07:51:54,372 p=1 u=root |  PLAY [custom-dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 07:51:54,393 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 07:51:54,414 p=1 u=root |  PLAY [custom-dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 07:51:54,431 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 07:51:54,447 p=1 u=root |  PLAY [custom-dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 07:51:56,565 p=1 u=root |  TASK [custom-k8s : 拷贝注册命令到节点] ***************************************************************************************************************************************************************************************************************
2020-05-07 07:51:56,569 p=1 u=root |  fatal: [192.168.50.119]: FAILED! => changed=false 
  msg: 'AnsibleUndefinedVariable: ''host'' is undefined'
2020-05-07 07:51:56,571 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 07:51:56,572 p=1 u=root |  192.168.50.119             : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2020-05-07 08:05:47,378 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-05-07 08:05:49,192 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:05:49,221 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:05:49,251 p=1 u=root |  PLAY [custom-dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:05:49,268 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:05:49,289 p=1 u=root |  PLAY [custom-dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:05:49,301 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:05:49,320 p=1 u=root |  PLAY [custom-dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:05:50,036 p=1 u=root |  TASK [custom-k8s : 拷贝注册命令到节点] ***************************************************************************************************************************************************************************************************************
2020-05-07 08:05:50,038 p=1 u=root |  fatal: [192.168.50.119]: FAILED! => changed=false 
  msg: 'AnsibleUndefinedVariable: ''host'' is undefined'
2020-05-07 08:05:50,040 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:05:50,041 p=1 u=root |  192.168.50.119             : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2020-05-07 08:06:57,154 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-05-07 08:06:58,861 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:06:58,886 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:06:58,911 p=1 u=root |  PLAY [custom-dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:06:58,930 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:06:58,944 p=1 u=root |  PLAY [custom-dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:06:58,958 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:06:58,975 p=1 u=root |  PLAY [custom-dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:07:02,007 p=1 u=root |  TASK [custom-k8s : 拷贝注册命令到节点] ***************************************************************************************************************************************************************************************************************
2020-05-07 08:07:02,008 p=1 u=root |  changed: [192.168.50.119]
2020-05-07 08:07:02,012 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:07:02,013 p=1 u=root |  192.168.50.119             : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-05-07 08:08:05,840 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-05-07 08:08:07,648 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:08:07,681 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:08:07,721 p=1 u=root |  PLAY [custom-dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:08:07,750 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:08:07,775 p=1 u=root |  PLAY [custom-dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:08:07,798 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:08:07,821 p=1 u=root |  PLAY [custom-dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:08:09,400 p=1 u=root |  TASK [custom-k8s : 拷贝注册命令到节点] ***************************************************************************************************************************************************************************************************************
2020-05-07 08:08:09,402 p=1 u=root |  ok: [192.168.50.119]
2020-05-07 08:08:09,407 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:08:09,409 p=1 u=root |  192.168.50.119             : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-05-07 08:08:22,906 p=1 u=root |  ansible-playbook 2.8.11
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.7/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.7.5 (default, Oct 17 2019, 12:25:15) [GCC 8.3.0]
2020-05-07 08:08:22,908 p=1 u=root |  Using /etc/ansible/ansible.cfg as config file
2020-05-07 08:08:22,921 p=1 u=root |  setting up inventory plugins
2020-05-07 08:08:22,964 p=1 u=root |  host_list declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 08:08:22,975 p=1 u=root |  auto declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 08:08:23,000 p=1 u=root |  Not replacing invalid character(s) "{'-'}" in group name (custom-dev1)
2020-05-07 08:08:23,002 p=1 u=root |  [WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details

2020-05-07 08:08:23,005 p=1 u=root |  Not replacing invalid character(s) "{'-'}" in group name (custom-dev1)
2020-05-07 08:08:23,013 p=1 u=root |  Parsed /etc/ansible/config/hosts inventory source with ini plugin
2020-05-07 08:08:23,902 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:23,903 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,188 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,190 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,225 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,226 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,269 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,271 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,313 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,315 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,366 p=1 u=root |  Loading callback plugin yaml of type stdout, v2.0 from /usr/lib/python3.7/site-packages/ansible/plugins/callback/yaml.py
2020-05-07 08:08:24,804 p=1 u=root |  PLAYBOOK: custom-k8s-rancher.yaml ***********************************************************************************************************************************************************************************************************
2020-05-07 08:08:24,806 p=1 u=root |  7 plays in ./roles/custom-k8s-rancher.yaml
2020-05-07 08:08:24,837 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:08:24,854 p=1 u=root |  META: ran handlers
2020-05-07 08:08:24,856 p=1 u=root |  META: ran handlers
2020-05-07 08:08:24,857 p=1 u=root |  META: ran handlers
2020-05-07 08:08:24,868 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:08:24,885 p=1 u=root |  META: ran handlers
2020-05-07 08:08:24,886 p=1 u=root |  META: ran handlers
2020-05-07 08:08:24,888 p=1 u=root |  META: ran handlers
2020-05-07 08:08:24,893 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,896 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,901 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,903 p=1 u=root |  PLAY [custom-dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:08:24,916 p=1 u=root |  META: ran handlers
2020-05-07 08:08:24,917 p=1 u=root |  META: ran handlers
2020-05-07 08:08:24,919 p=1 u=root |  META: ran handlers
2020-05-07 08:08:24,923 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,926 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,930 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,932 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:08:24,937 p=1 u=root |  META: ran handlers
2020-05-07 08:08:24,940 p=1 u=root |  META: ran handlers
2020-05-07 08:08:24,943 p=1 u=root |  META: ran handlers
2020-05-07 08:08:24,951 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,956 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,962 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,963 p=1 u=root |  PLAY [custom-dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:08:24,969 p=1 u=root |  META: ran handlers
2020-05-07 08:08:24,970 p=1 u=root |  META: ran handlers
2020-05-07 08:08:24,971 p=1 u=root |  META: ran handlers
2020-05-07 08:08:24,976 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,980 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,984 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:24,986 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:08:24,992 p=1 u=root |  META: ran handlers
2020-05-07 08:08:24,993 p=1 u=root |  META: ran handlers
2020-05-07 08:08:24,995 p=1 u=root |  META: ran handlers
2020-05-07 08:08:24,999 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:25,002 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:25,008 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:25,010 p=1 u=root |  PLAY [custom-dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:08:25,015 p=1 u=root |  META: ran handlers
2020-05-07 08:08:25,070 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:08:25,093 p=1 u=root |  <192.168.50.119> ESTABLISH SSH CONNECTION FOR USER: rancher
2020-05-07 08:08:25,101 p=1 u=root |  <192.168.50.119> SSH: EXEC sshpass -d11 ssh -vvv -C -o ControlMaster=auto -o ControlPersist=120s -o StrictHostKeyChecking=no -o Port=22 -o 'User="rancher"' -o ConnectTimeout=5 -o ControlPath=/root/.ansible/cp/0e67d8a304 192.168.50.119 '/bin/sh -c '"'"'echo ~rancher && sleep 0'"'"''
2020-05-07 08:08:26,312 p=1 u=root |  <192.168.50.119> (0, b'/home/rancher\n', b'OpenSSH_8.1p1, OpenSSL 1.1.1g  21 Apr 2020\r\ndebug1: Reading configuration data /root/.ssh/config\r\ndebug1: /root/.ssh/config line 1: Applying options for *\r\ndebug1: Reading configuration data /etc/ssh/ssh_config\r\ndebug2: resolve_canonicalize: hostname 192.168.50.119 is address\r\ndebug1: auto-mux: Trying existing master\r\ndebug1: Control socket "/root/.ansible/cp/0e67d8a304" does not exist\r\ndebug2: ssh_connect_direct\r\ndebug1: Connecting to 192.168.50.119 [192.168.50.119] port 22.\r\ndebug2: fd 3 setting O_NONBLOCK\r\ndebug1: fd 3 clearing O_NONBLOCK\r\ndebug1: Connection established.\r\ndebug3: timeout: 4992 ms remain after connect\r\ndebug1: identity file /root/.ssh/id_rsa type -1\r\ndebug1: identity file /root/.ssh/id_rsa-cert type -1\r\ndebug1: identity file /root/.ssh/id_dsa type -1\r\ndebug1: identity file /root/.ssh/id_dsa-cert type -1\r\ndebug1: identity file /root/.ssh/id_ecdsa type -1\r\ndebug1: identity file /root/.ssh/id_ecdsa-cert type -1\r\ndebug1: identity file /root/.ssh/id_ed25519 type -1\r\ndebug1: identity file /root/.ssh/id_ed25519-cert type -1\r\ndebug1: identity file /root/.ssh/id_xmss type -1\r\ndebug1: identity file /root/.ssh/id_xmss-cert type -1\r\ndebug1: Local version string SSH-2.0-OpenSSH_8.1\r\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.2p2 Ubuntu-4ubuntu2.8\r\ndebug1: match: OpenSSH_7.2p2 Ubuntu-4ubuntu2.8 pat OpenSSH_7.0*,OpenSSH_7.1*,OpenSSH_7.2*,OpenSSH_7.3*,OpenSSH_7.4*,OpenSSH_7.5*,OpenSSH_7.6*,OpenSSH_7.7* compat 0x04000002\r\ndebug2: fd 3 setting O_NONBLOCK\r\ndebug1: Authenticating to 192.168.50.119:22 as \'rancher\'\r\ndebug3: send packet: type 20\r\ndebug1: SSH2_MSG_KEXINIT sent\r\ndebug3: receive packet: type 20\r\ndebug1: SSH2_MSG_KEXINIT received\r\ndebug2: local client KEXINIT proposal\r\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c\r\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\r\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\r\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\r\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\r\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\r\ndebug2: compression ctos: zlib@openssh.com,zlib,none\r\ndebug2: compression stoc: zlib@openssh.com,zlib,none\r\ndebug2: languages ctos: \r\ndebug2: languages stoc: \r\ndebug2: first_kex_follows 0 \r\ndebug2: reserved 0 \r\ndebug2: peer server KEXINIT proposal\r\ndebug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1\r\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\r\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\r\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\r\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\r\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\r\ndebug2: compression ctos: none,zlib@openssh.com\r\ndebug2: compression stoc: none,zlib@openssh.com\r\ndebug2: languages ctos: \r\ndebug2: languages stoc: \r\ndebug2: first_kex_follows 0 \r\ndebug2: reserved 0 \r\ndebug1: kex: algorithm: curve25519-sha256@libssh.org\r\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\r\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: zlib@openssh.com\r\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: zlib@openssh.com\r\ndebug3: send packet: type 30\r\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\r\ndebug3: receive packet: type 31\r\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:6h83PVbAHd+pKcEbmAnwaiUCnEGlG32DGZZp1Eb6iKY\r\nWarning: Permanently added \'192.168.50.119\' (ECDSA) to the list of known hosts.\r\ndebug3: send packet: type 21\r\ndebug2: set_newkeys: mode 1\r\ndebug1: rekey out after 134217728 blocks\r\ndebug1: SSH2_MSG_NEWKEYS sent\r\ndebug1: expecting SSH2_MSG_NEWKEYS\r\ndebug3: receive packet: type 21\r\ndebug1: SSH2_MSG_NEWKEYS received\r\ndebug2: set_newkeys: mode 0\r\ndebug1: rekey in after 134217728 blocks\r\ndebug1: Will attempt key: /root/.ssh/id_rsa \r\ndebug1: Will attempt key: /root/.ssh/id_dsa \r\ndebug1: Will attempt key: /root/.ssh/id_ecdsa \r\ndebug1: Will attempt key: /root/.ssh/id_ed25519 \r\ndebug1: Will attempt key: /root/.ssh/id_xmss \r\ndebug2: pubkey_prepare: done\r\ndebug3: send packet: type 5\r\ndebug3: receive packet: type 7\r\ndebug1: SSH2_MSG_EXT_INFO received\r\ndebug1: kex_input_ext_info: server-sig-algs=<rsa-sha2-256,rsa-sha2-512>\r\ndebug3: receive packet: type 6\r\ndebug2: service_accept: ssh-userauth\r\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\r\ndebug3: send packet: type 50\r\ndebug3: receive packet: type 51\r\ndebug1: Authentications that can continue: publickey,password\r\ndebug3: start over, passed a different list publickey,password\r\ndebug3: preferred publickey,keyboard-interactive,password\r\ndebug3: authmethod_lookup publickey\r\ndebug3: remaining preferred: keyboard-interactive,password\r\ndebug3: authmethod_is_enabled publickey\r\ndebug1: Next authentication method: publickey\r\ndebug1: Trying private key: /root/.ssh/id_rsa\r\ndebug3: no such identity: /root/.ssh/id_rsa: No such file or directory\r\ndebug1: Trying private key: /root/.ssh/id_dsa\r\ndebug3: no such identity: /root/.ssh/id_dsa: No such file or directory\r\ndebug1: Trying private key: /root/.ssh/id_ecdsa\r\ndebug3: no such identity: /root/.ssh/id_ecdsa: No such file or directory\r\ndebug1: Trying private key: /root/.ssh/id_ed25519\r\ndebug3: no such identity: /root/.ssh/id_ed25519: No such file or directory\r\ndebug1: Trying private key: /root/.ssh/id_xmss\r\ndebug3: no such identity: /root/.ssh/id_xmss: No such file or directory\r\ndebug2: we did not send a packet, disable method\r\ndebug3: authmethod_lookup password\r\ndebug3: remaining preferred: ,password\r\ndebug3: authmethod_is_enabled password\r\ndebug1: Next authentication method: password\r\ndebug3: send packet: type 50\r\ndebug2: we sent a password packet, wait for reply\r\ndebug3: receive packet: type 52\r\ndebug1: Enabling compression at level 6.\r\ndebug1: Authentication succeeded (password).\r\nAuthenticated to 192.168.50.119 ([192.168.50.119]:22).\r\ndebug1: setting up multiplex master socket\r\ndebug3: muxserver_listen: temporary control path /root/.ansible/cp/0e67d8a304.XrZub4aIwORzVWkP\r\ndebug2: fd 4 setting O_NONBLOCK\r\ndebug3: fd 4 is O_NONBLOCK\r\ndebug3: fd 4 is O_NONBLOCK\r\ndebug1: channel 0: new [/root/.ansible/cp/0e67d8a304]\r\ndebug3: muxserver_listen: mux listener channel 0 fd 4\r\ndebug2: fd 3 setting TCP_NODELAY\r\ndebug3: ssh_packet_set_tos: set IP_TOS 0x20\r\ndebug1: control_persist_detach: backgrounding master process\r\ndebug2: control_persist_detach: background process is 25\r\ndebug2: fd 4 setting O_NONBLOCK\r\ndebug1: forking to background\r\ndebug1: Entering interactive session.\r\ndebug1: pledge: id\r\ndebug2: set_control_persist_exit_time: schedule exit in 120 seconds\r\ndebug1: multiplexing control connection\r\ndebug2: fd 5 setting O_NONBLOCK\r\ndebug3: fd 5 is O_NONBLOCK\r\ndebug1: channel 1: new [mux-control]\r\ndebug3: channel_post_mux_listener: new mux channel 1 fd 5\r\ndebug3: mux_master_read_cb: channel 1: hello sent\r\ndebug2: set_control_persist_exit_time: cancel scheduled exit\r\ndebug3: mux_master_read_cb: channel 1 packet type 0x00000001 len 4\r\ndebug2: mux_master_process_hello: channel 1 slave version 4\r\ndebug2: mux_client_hello_exchange: master version 4\r\ndebug3: mux_client_forwards: request forwardings: 0 local, 0 remote\r\ndebug3: mux_client_request_session: entering\r\ndebug3: mux_client_request_alive: entering\r\ndebug3: mux_master_read_cb: channel 1 packet type 0x10000004 len 4\r\ndebug2: mux_master_process_alive_check: channel 1: alive check\r\ndebug3: mux_client_request_alive: done pid = 29\r\ndebug3: mux_client_request_session: session request sent\r\ndebug3: mux_master_read_cb: channel 1 packet type 0x10000002 len 78\r\ndebug2: mux_master_process_new_session: channel 1: request tty 0, X 0, agent 0, subsys 0, term "xterm", cmd "/bin/sh -c \'echo ~rancher && sleep 0\'", env 0\r\ndebug3: mux_master_process_new_session: got fds stdin 6, stdout 7, stderr 8\r\ndebug2: fd 7 setting O_NONBLOCK\r\ndebug2: fd 8 setting O_NONBLOCK\r\ndebug1: channel 2: new [client-session]\r\ndebug2: mux_master_process_new_session: channel_new: 2 linked to control channel 1\r\ndebug2: channel 2: send open\r\ndebug3: send packet: type 90\r\ndebug3: receive packet: type 80\r\ndebug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0\r\ndebug3: receive packet: type 91\r\ndebug2: channel_input_open_confirmation: channel 2: callback start\r\ndebug2: client_session2_setup: id 2\r\ndebug1: Sending command: /bin/sh -c \'echo ~rancher && sleep 0\'\r\ndebug2: channel 2: request exec confirm 1\r\ndebug3: send packet: type 98\r\ndebug3: mux_session_confirm: sending success reply\r\ndebug2: channel_input_open_confirmation: channel 2: callback done\r\ndebug2: channel 2: open confirm rwindow 0 rmax 32768\r\ndebug2: channel 2: rcvd adjust 2097152\r\ndebug3: receive packet: type 99\r\ndebug2: channel_input_status_confirm: type 99 id 2\r\ndebug2: exec request accepted on channel 2\r\ndebug3: receive packet: type 98\r\ndebug1: client_input_channel_req: channel 2 rtype exit-status reply 0\r\ndebug3: mux_exit_message: channel 2: exit message, exitval 0\r\ndebug3: receive packet: type 98\r\ndebug1: client_input_channel_req: channel 2 rtype eow@openssh.com reply 0\r\ndebug2: channel 2: rcvd eow\r\ndebug2: channel 2: chan_shutdown_read (i0 o0 sock -1 wfd 6 efd 8 [write])\r\ndebug2: channel 2: input open -> closed\r\ndebug3: receive packet: type 96\r\ndebug2: channel 2: rcvd eof\r\ndebug2: channel 2: output open -> drain\r\ndebug2: channel 2: obuf empty\r\ndebug2: channel 2: chan_shutdown_write (i3 o1 sock -1 wfd 7 efd 8 [write])\r\ndebug2: channel 2: output drain -> closed\r\ndebug3: receive packet: type 97\r\ndebug2: channel 2: rcvd close\r\ndebug3: channel 2: will not send data after close\r\ndebug2: channel 2: send close\r\ndebug3: send packet: type 97\r\ndebug2: channel 2: is dead\r\ndebug2: channel 2: gc: notify user\r\ndebug3: mux_master_session_cleanup_cb: entering for channel 2\r\ndebug2: channel 1: rcvd close\r\ndebug2: channel 1: output open -> drain\r\ndebug2: channel 1: chan_shutdown_read (i0 o1 sock 5 wfd 5 efd -1 [closed])\r\ndebug2: channel 1: input open -> closed\r\ndebug2: channel 2: gc: user detached\r\ndebug2: channel 2: is dead\r\ndebug2: channel 2: garbage collecting\r\ndebug1: channel 2: free: client-session, nchannels 3\r\ndebug3: channel 2: status: The following connections are open:\r\n  #1 mux-control (t16 nr0 i3/0 o1/16 e[closed]/0 fd 5/5/-1 sock 5 cc -1)\r\n  #2 client-session (t4 r0 i3/0 o3/0 e[write]/0 fd -1/-1/8 sock -1 cc -1)\r\n\r\ndebug2: channel 1: obuf empty\r\ndebug2: channel 1: chan_shutdown_write (i3 o1 sock 5 wfd 5 efd -1 [closed])\r\ndebug2: channel 1: output drain -> closed\r\ndebug3: mux_client_read_packet: read header failed: Broken pipe\r\ndebug2: Received exit status from master 0\r\ndebug2: channel 1: is dead (local)\r\ndebug2: channel 1: gc: notify user\r\ndebug3: mux_master_control_cleanup_cb: entering for channel 1\r\ndebug2: channel 1: gc: user detached\r\ndebug2: channel 1: is dead (local)\r\ndebug2: channel 1: garbage collecting\r\ndebug1: channel 1: free: mux-control, nchannels 2\r\ndebug3: channel 1: status: The following connections are open:\r\n  #1 mux-control (t16 nr0 i3/0 o3/0 e[closed]/0 fd 5/5/-1 sock 5 cc -1)\r\n\r\ndebug2: set_control_persist_exit_time: schedule exit in 120 seconds\r\n')
2020-05-07 08:08:26,316 p=1 u=root |  <192.168.50.119> ESTABLISH SSH CONNECTION FOR USER: rancher
2020-05-07 08:08:26,318 p=1 u=root |  <192.168.50.119> SSH: EXEC sshpass -d11 ssh -vvv -C -o ControlMaster=auto -o ControlPersist=120s -o StrictHostKeyChecking=no -o Port=22 -o 'User="rancher"' -o ConnectTimeout=5 -o ControlPath=/root/.ansible/cp/0e67d8a304 192.168.50.119 '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /home/rancher/.ansible/tmp `"&& mkdir /home/rancher/.ansible/tmp/ansible-tmp-1588838906.3163652-21-10436343275383 && echo ansible-tmp-1588838906.3163652-21-10436343275383="` echo /home/rancher/.ansible/tmp/ansible-tmp-1588838906.3163652-21-10436343275383 `" ) && sleep 0'"'"''
2020-05-07 08:08:26,338 p=1 u=root |  <192.168.50.119> (0, b'ansible-tmp-1588838906.3163652-21-10436343275383=/home/rancher/.ansible/tmp/ansible-tmp-1588838906.3163652-21-10436343275383\n', b'OpenSSH_8.1p1, OpenSSL 1.1.1g  21 Apr 2020\r\ndebug1: Reading configuration data /root/.ssh/config\r\ndebug1: /root/.ssh/config line 1: Applying options for *\r\ndebug1: Reading configuration data /etc/ssh/ssh_config\r\ndebug2: resolve_canonicalize: hostname 192.168.50.119 is address\r\ndebug1: auto-mux: Trying existing master\r\ndebug2: fd 3 setting O_NONBLOCK\r\ndebug2: mux_client_hello_exchange: master version 4\r\ndebug3: mux_client_forwards: request forwardings: 0 local, 0 remote\r\ndebug3: mux_client_request_session: entering\r\ndebug3: mux_client_request_alive: entering\r\ndebug3: mux_client_request_alive: done pid = 29\r\ndebug3: mux_client_request_session: session request sent\r\ndebug3: mux_client_read_packet: read header failed: Broken pipe\r\ndebug2: Received exit status from master 0\r\n')
2020-05-07 08:08:26,516 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 08:08:26,517 p=1 u=root |  Pipelining is enabled.
2020-05-07 08:08:26,518 p=1 u=root |  <192.168.50.119> ESTABLISH SSH CONNECTION FOR USER: rancher
2020-05-07 08:08:26,519 p=1 u=root |  <192.168.50.119> SSH: EXEC sshpass -d11 ssh -vvv -C -o ControlMaster=auto -o ControlPersist=120s -o StrictHostKeyChecking=no -o Port=22 -o 'User="rancher"' -o ConnectTimeout=5 -o ControlPath=/root/.ansible/cp/0e67d8a304 192.168.50.119 '/bin/sh -c '"'"'sudo -H -S  -p "[sudo via ansible, key=qlgmqihrktgaaalfajkaqxrkupewlsam] password:" -u root /bin/sh -c '"'"'"'"'"'"'"'"'echo BECOME-SUCCESS-qlgmqihrktgaaalfajkaqxrkupewlsam ; /usr/bin/python3'"'"'"'"'"'"'"'"' && sleep 0'"'"''
2020-05-07 08:08:26,555 p=1 u=root |  Escalation succeeded
2020-05-07 08:08:26,730 p=1 u=root |  <192.168.50.119> (0, b'\n{"invocation": {"module_args": {"path": "/tmp/register-node.sh", "get_md5": null, "get_attributes": true, "get_checksum": true, "get_mime": true, "follow": false, "checksum_algorithm": "sha1"}}, "changed": false, "stat": {"mimetype": "text/x-shellscript", "issock": false, "mode": "0644", "inode": 1450615, "isblk": false, "islnk": false, "wgrp": false, "rusr": true, "readable": true, "gr_name": "root", "isdir": false, "woth": false, "mtime": 1588838820.9313736, "wusr": true, "rgrp": true, "ischr": false, "path": "/tmp/register-node.sh", "isreg": true, "dev": 64512, "writeable": true, "attr_flags": "e", "executable": false, "xgrp": false, "blocks": 8, "xoth": false, "isfifo": false, "size": 13, "nlink": 1, "attributes": ["extents"], "isgid": false, "version": "18446744072910999686", "isuid": false, "atime": 1588838888.6038072, "ctime": 1588838821.9233801, "gid": 0, "block_size": 4096, "uid": 0, "device_type": 0, "roth": true, "exists": true, "xusr": false, "charset": "us-ascii", "checksum": "66532ebb05b252e4304014aa6b724211c599c207", "pw_name": "root"}}\n', b'OpenSSH_8.1p1, OpenSSL 1.1.1g  21 Apr 2020\r\ndebug1: Reading configuration data /root/.ssh/config\r\ndebug1: /root/.ssh/config line 1: Applying options for *\r\ndebug1: Reading configuration data /etc/ssh/ssh_config\r\ndebug2: resolve_canonicalize: hostname 192.168.50.119 is address\r\ndebug1: auto-mux: Trying existing master\r\ndebug2: fd 3 setting O_NONBLOCK\r\ndebug2: mux_client_hello_exchange: master version 4\r\ndebug3: mux_client_forwards: request forwardings: 0 local, 0 remote\r\ndebug3: mux_client_request_session: entering\r\ndebug3: mux_client_request_alive: entering\r\ndebug3: mux_client_request_alive: done pid = 29\r\ndebug3: mux_client_request_session: session request sent\r\ndebug3: mux_client_read_packet: read header failed: Broken pipe\r\ndebug2: Received exit status from master 0\r\n')
2020-05-07 08:08:26,979 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/file.py
2020-05-07 08:08:26,980 p=1 u=root |  Pipelining is enabled.
2020-05-07 08:08:26,982 p=1 u=root |  <192.168.50.119> ESTABLISH SSH CONNECTION FOR USER: rancher
2020-05-07 08:08:26,984 p=1 u=root |  <192.168.50.119> SSH: EXEC sshpass -d11 ssh -vvv -C -o ControlMaster=auto -o ControlPersist=120s -o StrictHostKeyChecking=no -o Port=22 -o 'User="rancher"' -o ConnectTimeout=5 -o ControlPath=/root/.ansible/cp/0e67d8a304 192.168.50.119 '/bin/sh -c '"'"'sudo -H -S  -p "[sudo via ansible, key=ilzbibamqcfrsxiatnmbywecsacmhklh] password:" -u root /bin/sh -c '"'"'"'"'"'"'"'"'echo BECOME-SUCCESS-ilzbibamqcfrsxiatnmbywecsacmhklh ; /usr/bin/python3'"'"'"'"'"'"'"'"' && sleep 0'"'"''
2020-05-07 08:08:27,012 p=1 u=root |  Escalation succeeded
2020-05-07 08:08:27,174 p=1 u=root |  <192.168.50.119> (0, b'\n{"gid": 0, "diff": {"before": {"path": "/tmp/register-node.sh"}, "after": {"path": "/tmp/register-node.sh"}}, "mode": "0644", "size": 13, "invocation": {"module_args": {"mode": null, "attributes": null, "remote_src": null, "modification_time": null, "_diff_peek": null, "serole": null, "regexp": null, "owner": null, "backup": null, "selevel": null, "setype": null, "path": "/tmp/register-node.sh", "directory_mode": null, "dest": "/tmp/register-node.sh", "delimiter": null, "access_time": null, "src": null, "access_time_format": "%Y%m%d%H%M.%S", "unsafe_writes": null, "state": "file", "_original_basename": "register-node.sh.j2", "recurse": false, "follow": false, "modification_time_format": "%Y%m%d%H%M.%S", "content": null, "seuser": null, "force": false, "group": null}}, "state": "file", "uid": 0, "group": "root", "path": "/tmp/register-node.sh", "changed": false, "owner": "root"}\n', b'OpenSSH_8.1p1, OpenSSL 1.1.1g  21 Apr 2020\r\ndebug1: Reading configuration data /root/.ssh/config\r\ndebug1: /root/.ssh/config line 1: Applying options for *\r\ndebug1: Reading configuration data /etc/ssh/ssh_config\r\ndebug2: resolve_canonicalize: hostname 192.168.50.119 is address\r\ndebug1: auto-mux: Trying existing master\r\ndebug2: fd 3 setting O_NONBLOCK\r\ndebug2: mux_client_hello_exchange: master version 4\r\ndebug3: mux_client_forwards: request forwardings: 0 local, 0 remote\r\ndebug3: mux_client_request_session: entering\r\ndebug3: mux_client_request_alive: entering\r\ndebug3: mux_client_request_alive: done pid = 29\r\ndebug3: mux_client_request_session: session request sent\r\ndebug3: mux_client_read_packet: read header failed: Broken pipe\r\ndebug2: Received exit status from master 0\r\n')
2020-05-07 08:08:27,177 p=1 u=root |  <192.168.50.119> ESTABLISH SSH CONNECTION FOR USER: rancher
2020-05-07 08:08:27,183 p=1 u=root |  <192.168.50.119> SSH: EXEC sshpass -d11 ssh -vvv -C -o ControlMaster=auto -o ControlPersist=120s -o StrictHostKeyChecking=no -o Port=22 -o 'User="rancher"' -o ConnectTimeout=5 -o ControlPath=/root/.ansible/cp/0e67d8a304 192.168.50.119 '/bin/sh -c '"'"'rm -f -r /home/rancher/.ansible/tmp/ansible-tmp-1588838906.3163652-21-10436343275383/ > /dev/null 2>&1 && sleep 0'"'"''
2020-05-07 08:08:27,201 p=1 u=root |  <192.168.50.119> (0, b'', b'OpenSSH_8.1p1, OpenSSL 1.1.1g  21 Apr 2020\r\ndebug1: Reading configuration data /root/.ssh/config\r\ndebug1: /root/.ssh/config line 1: Applying options for *\r\ndebug1: Reading configuration data /etc/ssh/ssh_config\r\ndebug2: resolve_canonicalize: hostname 192.168.50.119 is address\r\ndebug1: auto-mux: Trying existing master\r\ndebug2: fd 3 setting O_NONBLOCK\r\ndebug2: mux_client_hello_exchange: master version 4\r\ndebug3: mux_client_forwards: request forwardings: 0 local, 0 remote\r\ndebug3: mux_client_request_session: entering\r\ndebug3: mux_client_request_alive: entering\r\ndebug3: mux_client_request_alive: done pid = 29\r\ndebug3: mux_client_request_session: session request sent\r\ndebug3: mux_client_read_packet: read header failed: Broken pipe\r\ndebug2: Received exit status from master 0\r\n')
2020-05-07 08:08:27,208 p=1 u=root |  TASK [custom-k8s : 拷贝注册命令到节点] ***************************************************************************************************************************************************************************************************************
2020-05-07 08:08:27,209 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s/tasks/main.yaml:3
2020-05-07 08:08:27,223 p=1 u=root |  ok: [192.168.50.119] => changed=false 
  checksum: 66532ebb05b252e4304014aa6b724211c599c207
  dest: /tmp/register-node.sh
  diff:
    after:
      path: /tmp/register-node.sh
    before:
      path: /tmp/register-node.sh
  gid: 0
  group: root
  invocation:
    module_args:
      _diff_peek: null
      _original_basename: register-node.sh.j2
      access_time: null
      access_time_format: '%Y%m%d%H%M.%S'
      attributes: null
      backup: null
      content: null
      delimiter: null
      dest: /tmp/register-node.sh
      directory_mode: null
      follow: false
      force: false
      group: null
      mode: null
      modification_time: null
      modification_time_format: '%Y%m%d%H%M.%S'
      owner: null
      path: /tmp/register-node.sh
      recurse: false
      regexp: null
      remote_src: null
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: null
      state: file
      unsafe_writes: null
  mode: '0644'
  owner: root
  path: /tmp/register-node.sh
  size: 13
  state: file
  uid: 0
2020-05-07 08:08:27,225 p=1 u=root |  META: ran handlers
2020-05-07 08:08:27,227 p=1 u=root |  META: ran handlers
2020-05-07 08:08:27,230 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:08:27,231 p=1 u=root |  192.168.50.119             : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-05-07 08:09:57,250 p=1 u=root |  ansible-playbook 2.8.11
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.7/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.7.5 (default, Oct 17 2019, 12:25:15) [GCC 8.3.0]
2020-05-07 08:09:57,251 p=1 u=root |  Using /etc/ansible/ansible.cfg as config file
2020-05-07 08:09:57,259 p=1 u=root |  setting up inventory plugins
2020-05-07 08:09:57,297 p=1 u=root |  host_list declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 08:09:57,308 p=1 u=root |  auto declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 08:09:57,326 p=1 u=root |  Parsed /etc/ansible/config/hosts inventory source with ini plugin
2020-05-07 08:09:58,174 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:58,175 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:58,458 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:58,460 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:58,491 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:58,492 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:58,532 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:58,534 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:58,573 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:58,575 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:58,622 p=1 u=root |  Loading callback plugin yaml of type stdout, v2.0 from /usr/lib/python3.7/site-packages/ansible/plugins/callback/yaml.py
2020-05-07 08:09:59,035 p=1 u=root |  PLAYBOOK: custom-k8s-rancher.yaml ***********************************************************************************************************************************************************************************************************
2020-05-07 08:09:59,038 p=1 u=root |  7 plays in ./roles/custom-k8s-rancher.yaml
2020-05-07 08:09:59,066 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:09:59,079 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,081 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,082 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,091 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:09:59,100 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,102 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,103 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,110 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:59,116 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:59,123 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:59,124 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:09:59,131 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,133 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,134 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,137 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:59,144 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:59,148 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:59,150 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:09:59,156 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,157 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,158 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,162 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:59,165 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:59,171 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:59,174 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:09:59,182 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,184 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,185 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,189 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:59,192 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:59,195 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:59,196 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:09:59,200 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,201 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,203 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,209 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:59,215 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:59,221 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:59,222 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:09:59,226 p=1 u=root |  META: ran handlers
2020-05-07 08:09:59,278 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 08:09:59,301 p=1 u=root |  <192.168.50.119> ESTABLISH SSH CONNECTION FOR USER: rancher
2020-05-07 08:09:59,313 p=1 u=root |  <192.168.50.119> SSH: EXEC sshpass -d11 ssh -vvv -C -o ControlMaster=auto -o ControlPersist=120s -o StrictHostKeyChecking=no -o Port=22 -o 'User="rancher"' -o ConnectTimeout=5 -o ControlPath=/root/.ansible/cp/0e67d8a304 192.168.50.119 '/bin/sh -c '"'"'echo ~rancher && sleep 0'"'"''
2020-05-07 08:10:00,545 p=1 u=root |  <192.168.50.119> (0, b'/home/rancher\n', b'OpenSSH_8.1p1, OpenSSL 1.1.1g  21 Apr 2020\r\ndebug1: Reading configuration data /root/.ssh/config\r\ndebug1: /root/.ssh/config line 1: Applying options for *\r\ndebug1: Reading configuration data /etc/ssh/ssh_config\r\ndebug2: resolve_canonicalize: hostname 192.168.50.119 is address\r\ndebug1: auto-mux: Trying existing master\r\ndebug1: Control socket "/root/.ansible/cp/0e67d8a304" does not exist\r\ndebug2: ssh_connect_direct\r\ndebug1: Connecting to 192.168.50.119 [192.168.50.119] port 22.\r\ndebug2: fd 3 setting O_NONBLOCK\r\ndebug1: fd 3 clearing O_NONBLOCK\r\ndebug1: Connection established.\r\ndebug3: timeout: 4981 ms remain after connect\r\ndebug1: identity file /root/.ssh/id_rsa type -1\r\ndebug1: identity file /root/.ssh/id_rsa-cert type -1\r\ndebug1: identity file /root/.ssh/id_dsa type -1\r\ndebug1: identity file /root/.ssh/id_dsa-cert type -1\r\ndebug1: identity file /root/.ssh/id_ecdsa type -1\r\ndebug1: identity file /root/.ssh/id_ecdsa-cert type -1\r\ndebug1: identity file /root/.ssh/id_ed25519 type -1\r\ndebug1: identity file /root/.ssh/id_ed25519-cert type -1\r\ndebug1: identity file /root/.ssh/id_xmss type -1\r\ndebug1: identity file /root/.ssh/id_xmss-cert type -1\r\ndebug1: Local version string SSH-2.0-OpenSSH_8.1\r\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.2p2 Ubuntu-4ubuntu2.8\r\ndebug1: match: OpenSSH_7.2p2 Ubuntu-4ubuntu2.8 pat OpenSSH_7.0*,OpenSSH_7.1*,OpenSSH_7.2*,OpenSSH_7.3*,OpenSSH_7.4*,OpenSSH_7.5*,OpenSSH_7.6*,OpenSSH_7.7* compat 0x04000002\r\ndebug2: fd 3 setting O_NONBLOCK\r\ndebug1: Authenticating to 192.168.50.119:22 as \'rancher\'\r\ndebug3: send packet: type 20\r\ndebug1: SSH2_MSG_KEXINIT sent\r\ndebug3: receive packet: type 20\r\ndebug1: SSH2_MSG_KEXINIT received\r\ndebug2: local client KEXINIT proposal\r\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c\r\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\r\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\r\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\r\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\r\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\r\ndebug2: compression ctos: zlib@openssh.com,zlib,none\r\ndebug2: compression stoc: zlib@openssh.com,zlib,none\r\ndebug2: languages ctos: \r\ndebug2: languages stoc: \r\ndebug2: first_kex_follows 0 \r\ndebug2: reserved 0 \r\ndebug2: peer server KEXINIT proposal\r\ndebug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1\r\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\r\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\r\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\r\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\r\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\r\ndebug2: compression ctos: none,zlib@openssh.com\r\ndebug2: compression stoc: none,zlib@openssh.com\r\ndebug2: languages ctos: \r\ndebug2: languages stoc: \r\ndebug2: first_kex_follows 0 \r\ndebug2: reserved 0 \r\ndebug1: kex: algorithm: curve25519-sha256@libssh.org\r\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\r\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: zlib@openssh.com\r\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: zlib@openssh.com\r\ndebug3: send packet: type 30\r\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\r\ndebug3: receive packet: type 31\r\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:6h83PVbAHd+pKcEbmAnwaiUCnEGlG32DGZZp1Eb6iKY\r\nWarning: Permanently added \'192.168.50.119\' (ECDSA) to the list of known hosts.\r\ndebug3: send packet: type 21\r\ndebug2: set_newkeys: mode 1\r\ndebug1: rekey out after 134217728 blocks\r\ndebug1: SSH2_MSG_NEWKEYS sent\r\ndebug1: expecting SSH2_MSG_NEWKEYS\r\ndebug3: receive packet: type 21\r\ndebug1: SSH2_MSG_NEWKEYS received\r\ndebug2: set_newkeys: mode 0\r\ndebug1: rekey in after 134217728 blocks\r\ndebug1: Will attempt key: /root/.ssh/id_rsa \r\ndebug1: Will attempt key: /root/.ssh/id_dsa \r\ndebug1: Will attempt key: /root/.ssh/id_ecdsa \r\ndebug1: Will attempt key: /root/.ssh/id_ed25519 \r\ndebug1: Will attempt key: /root/.ssh/id_xmss \r\ndebug2: pubkey_prepare: done\r\ndebug3: send packet: type 5\r\ndebug3: receive packet: type 7\r\ndebug1: SSH2_MSG_EXT_INFO received\r\ndebug1: kex_input_ext_info: server-sig-algs=<rsa-sha2-256,rsa-sha2-512>\r\ndebug3: receive packet: type 6\r\ndebug2: service_accept: ssh-userauth\r\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\r\ndebug3: send packet: type 50\r\ndebug3: receive packet: type 51\r\ndebug1: Authentications that can continue: publickey,password\r\ndebug3: start over, passed a different list publickey,password\r\ndebug3: preferred publickey,keyboard-interactive,password\r\ndebug3: authmethod_lookup publickey\r\ndebug3: remaining preferred: keyboard-interactive,password\r\ndebug3: authmethod_is_enabled publickey\r\ndebug1: Next authentication method: publickey\r\ndebug1: Trying private key: /root/.ssh/id_rsa\r\ndebug3: no such identity: /root/.ssh/id_rsa: No such file or directory\r\ndebug1: Trying private key: /root/.ssh/id_dsa\r\ndebug3: no such identity: /root/.ssh/id_dsa: No such file or directory\r\ndebug1: Trying private key: /root/.ssh/id_ecdsa\r\ndebug3: no such identity: /root/.ssh/id_ecdsa: No such file or directory\r\ndebug1: Trying private key: /root/.ssh/id_ed25519\r\ndebug3: no such identity: /root/.ssh/id_ed25519: No such file or directory\r\ndebug1: Trying private key: /root/.ssh/id_xmss\r\ndebug3: no such identity: /root/.ssh/id_xmss: No such file or directory\r\ndebug2: we did not send a packet, disable method\r\ndebug3: authmethod_lookup password\r\ndebug3: remaining preferred: ,password\r\ndebug3: authmethod_is_enabled password\r\ndebug1: Next authentication method: password\r\ndebug3: send packet: type 50\r\ndebug2: we sent a password packet, wait for reply\r\ndebug3: receive packet: type 52\r\ndebug1: Enabling compression at level 6.\r\ndebug1: Authentication succeeded (password).\r\nAuthenticated to 192.168.50.119 ([192.168.50.119]:22).\r\ndebug1: setting up multiplex master socket\r\ndebug3: muxserver_listen: temporary control path /root/.ansible/cp/0e67d8a304.7ogkuZxny05K7ggj\r\ndebug2: fd 4 setting O_NONBLOCK\r\ndebug3: fd 4 is O_NONBLOCK\r\ndebug3: fd 4 is O_NONBLOCK\r\ndebug1: channel 0: new [/root/.ansible/cp/0e67d8a304]\r\ndebug3: muxserver_listen: mux listener channel 0 fd 4\r\ndebug2: fd 3 setting TCP_NODELAY\r\ndebug3: ssh_packet_set_tos: set IP_TOS 0x20\r\ndebug1: control_persist_detach: backgrounding master process\r\ndebug2: control_persist_detach: background process is 23\r\ndebug2: fd 4 setting O_NONBLOCK\r\ndebug1: forking to background\r\ndebug1: Entering interactive session.\r\ndebug1: pledge: id\r\ndebug2: set_control_persist_exit_time: schedule exit in 120 seconds\r\ndebug1: multiplexing control connection\r\ndebug2: fd 5 setting O_NONBLOCK\r\ndebug3: fd 5 is O_NONBLOCK\r\ndebug1: channel 1: new [mux-control]\r\ndebug3: channel_post_mux_listener: new mux channel 1 fd 5\r\ndebug3: mux_master_read_cb: channel 1: hello sent\r\ndebug2: set_control_persist_exit_time: cancel scheduled exit\r\ndebug3: mux_master_read_cb: channel 1 packet type 0x00000001 len 4\r\ndebug2: mux_master_process_hello: channel 1 slave version 4\r\ndebug2: mux_client_hello_exchange: master version 4\r\ndebug3: mux_client_forwards: request forwardings: 0 local, 0 remote\r\ndebug3: mux_client_request_session: entering\r\ndebug3: mux_client_request_alive: entering\r\ndebug3: mux_master_read_cb: channel 1 packet type 0x10000004 len 4\r\ndebug2: mux_master_process_alive_check: channel 1: alive check\r\ndebug3: mux_client_request_alive: done pid = 27\r\ndebug3: mux_client_request_session: session request sent\r\ndebug3: mux_master_read_cb: channel 1 packet type 0x10000002 len 78\r\ndebug2: mux_master_process_new_session: channel 1: request tty 0, X 0, agent 0, subsys 0, term "xterm", cmd "/bin/sh -c \'echo ~rancher && sleep 0\'", env 0\r\ndebug3: mux_master_process_new_session: got fds stdin 6, stdout 7, stderr 8\r\ndebug2: fd 7 setting O_NONBLOCK\r\ndebug2: fd 8 setting O_NONBLOCK\r\ndebug1: channel 2: new [client-session]\r\ndebug2: mux_master_process_new_session: channel_new: 2 linked to control channel 1\r\ndebug2: channel 2: send open\r\ndebug3: send packet: type 90\r\ndebug3: receive packet: type 80\r\ndebug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0\r\ndebug3: receive packet: type 91\r\ndebug2: channel_input_open_confirmation: channel 2: callback start\r\ndebug2: client_session2_setup: id 2\r\ndebug1: Sending command: /bin/sh -c \'echo ~rancher && sleep 0\'\r\ndebug2: channel 2: request exec confirm 1\r\ndebug3: send packet: type 98\r\ndebug3: mux_session_confirm: sending success reply\r\ndebug2: channel_input_open_confirmation: channel 2: callback done\r\ndebug2: channel 2: open confirm rwindow 0 rmax 32768\r\ndebug2: channel 2: rcvd adjust 2097152\r\ndebug3: receive packet: type 99\r\ndebug2: channel_input_status_confirm: type 99 id 2\r\ndebug2: exec request accepted on channel 2\r\ndebug3: receive packet: type 98\r\ndebug1: client_input_channel_req: channel 2 rtype exit-status reply 0\r\ndebug3: mux_exit_message: channel 2: exit message, exitval 0\r\ndebug3: receive packet: type 98\r\ndebug1: client_input_channel_req: channel 2 rtype eow@openssh.com reply 0\r\ndebug2: channel 2: rcvd eow\r\ndebug2: channel 2: chan_shutdown_read (i0 o0 sock -1 wfd 6 efd 8 [write])\r\ndebug2: channel 2: input open -> closed\r\ndebug3: receive packet: type 96\r\ndebug2: channel 2: rcvd eof\r\ndebug2: channel 2: output open -> drain\r\ndebug2: channel 2: obuf empty\r\ndebug2: channel 2: chan_shutdown_write (i3 o1 sock -1 wfd 7 efd 8 [write])\r\ndebug2: channel 2: output drain -> closed\r\ndebug3: receive packet: type 97\r\ndebug2: channel 2: rcvd close\r\ndebug3: channel 2: will not send data after close\r\ndebug2: channel 2: send close\r\ndebug3: send packet: type 97\r\ndebug2: channel 2: is dead\r\ndebug2: channel 2: gc: notify user\r\ndebug3: mux_master_session_cleanup_cb: entering for channel 2\r\ndebug2: channel 1: rcvd close\r\ndebug2: channel 1: output open -> drain\r\ndebug2: channel 1: chan_shutdown_read (i0 o1 sock 5 wfd 5 efd -1 [closed])\r\ndebug2: channel 1: input open -> closed\r\ndebug2: channel 2: gc: user detached\r\ndebug2: channel 2: is dead\r\ndebug2: channel 2: garbage collecting\r\ndebug1: channel 2: free: client-session, nchannels 3\r\ndebug3: channel 2: status: The following connections are open:\r\n  #1 mux-control (t16 nr0 i3/0 o1/16 e[closed]/0 fd 5/5/-1 sock 5 cc -1)\r\n  #2 client-session (t4 r0 i3/0 o3/0 e[write]/0 fd -1/-1/8 sock -1 cc -1)\r\n\r\ndebug2: channel 1: obuf empty\r\ndebug2: channel 1: chan_shutdown_write (i3 o1 sock 5 wfd 5 efd -1 [closed])\r\ndebug3: mux_client_read_packet: read header failed: Broken pipe\r\ndebug2: channel 1: output drain -> closed\r\ndebug2: channel 1: is dead (local)\r\ndebug2: channel 1: gc: notify user\r\ndebug2: Received exit status from master 0\r\ndebug3: mux_master_control_cleanup_cb: entering for channel 1\r\ndebug2: channel 1: gc: user detached\r\ndebug2: channel 1: is dead (local)\r\ndebug2: channel 1: garbage collecting\r\ndebug1: channel 1: free: mux-control, nchannels 2\r\ndebug3: channel 1: status: The following connections are open:\r\n  #1 mux-control (t16 nr0 i3/0 o3/0 e[closed]/0 fd 5/5/-1 sock 5 cc -1)\r\n\r\ndebug2: set_control_persist_exit_time: schedule exit in 120 seconds\r\n')
2020-05-07 08:10:00,548 p=1 u=root |  <192.168.50.119> ESTABLISH SSH CONNECTION FOR USER: rancher
2020-05-07 08:10:00,550 p=1 u=root |  <192.168.50.119> SSH: EXEC sshpass -d11 ssh -vvv -C -o ControlMaster=auto -o ControlPersist=120s -o StrictHostKeyChecking=no -o Port=22 -o 'User="rancher"' -o ConnectTimeout=5 -o ControlPath=/root/.ansible/cp/0e67d8a304 192.168.50.119 '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /home/rancher/.ansible/tmp `"&& mkdir /home/rancher/.ansible/tmp/ansible-tmp-1588839000.5474944-19-244998783399641 && echo ansible-tmp-1588839000.5474944-19-244998783399641="` echo /home/rancher/.ansible/tmp/ansible-tmp-1588839000.5474944-19-244998783399641 `" ) && sleep 0'"'"''
2020-05-07 08:10:00,571 p=1 u=root |  <192.168.50.119> (0, b'ansible-tmp-1588839000.5474944-19-244998783399641=/home/rancher/.ansible/tmp/ansible-tmp-1588839000.5474944-19-244998783399641\n', b'OpenSSH_8.1p1, OpenSSL 1.1.1g  21 Apr 2020\r\ndebug1: Reading configuration data /root/.ssh/config\r\ndebug1: /root/.ssh/config line 1: Applying options for *\r\ndebug1: Reading configuration data /etc/ssh/ssh_config\r\ndebug2: resolve_canonicalize: hostname 192.168.50.119 is address\r\ndebug1: auto-mux: Trying existing master\r\ndebug2: fd 3 setting O_NONBLOCK\r\ndebug2: mux_client_hello_exchange: master version 4\r\ndebug3: mux_client_forwards: request forwardings: 0 local, 0 remote\r\ndebug3: mux_client_request_session: entering\r\ndebug3: mux_client_request_alive: entering\r\ndebug3: mux_client_request_alive: done pid = 27\r\ndebug3: mux_client_request_session: session request sent\r\ndebug3: mux_client_read_packet: read header failed: Broken pipe\r\ndebug2: Received exit status from master 0\r\n')
2020-05-07 08:10:00,754 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 08:10:00,755 p=1 u=root |  Pipelining is enabled.
2020-05-07 08:10:00,756 p=1 u=root |  <192.168.50.119> ESTABLISH SSH CONNECTION FOR USER: rancher
2020-05-07 08:10:00,757 p=1 u=root |  <192.168.50.119> SSH: EXEC sshpass -d11 ssh -vvv -C -o ControlMaster=auto -o ControlPersist=120s -o StrictHostKeyChecking=no -o Port=22 -o 'User="rancher"' -o ConnectTimeout=5 -o ControlPath=/root/.ansible/cp/0e67d8a304 192.168.50.119 '/bin/sh -c '"'"'sudo -H -S  -p "[sudo via ansible, key=skorkpeaicbbyjabzdfiubujchsrdqdz] password:" -u root /bin/sh -c '"'"'"'"'"'"'"'"'echo BECOME-SUCCESS-skorkpeaicbbyjabzdfiubujchsrdqdz ; /usr/bin/python3'"'"'"'"'"'"'"'"' && sleep 0'"'"''
2020-05-07 08:10:00,784 p=1 u=root |  Escalation succeeded
2020-05-07 08:10:00,949 p=1 u=root |  <192.168.50.119> (0, b'\n{"stat": {"wusr": true, "attr_flags": "e", "charset": "us-ascii", "block_size": 4096, "ctime": 1588838821.9233801, "isfifo": false, "attributes": ["extents"], "dev": 64512, "size": 13, "xusr": false, "nlink": 1, "mtime": 1588838820.9313736, "isdir": false, "uid": 0, "mimetype": "text/x-shellscript", "isuid": false, "isgid": false, "gr_name": "root", "woth": false, "isblk": false, "roth": true, "executable": false, "checksum": "66532ebb05b252e4304014aa6b724211c599c207", "rusr": true, "version": "18446744072910999686", "writeable": true, "device_type": 0, "issock": false, "path": "/tmp/register-node.sh", "mode": "0644", "ischr": false, "wgrp": false, "atime": 1588838888.6038072, "exists": true, "xgrp": false, "rgrp": true, "blocks": 8, "inode": 1450615, "pw_name": "root", "xoth": false, "islnk": false, "readable": true, "gid": 0, "isreg": true}, "changed": false, "invocation": {"module_args": {"checksum_algorithm": "sha1", "get_md5": null, "follow": false, "get_checksum": true, "path": "/tmp/register-node.sh", "get_attributes": true, "get_mime": true}}}\n', b'OpenSSH_8.1p1, OpenSSL 1.1.1g  21 Apr 2020\r\ndebug1: Reading configuration data /root/.ssh/config\r\ndebug1: /root/.ssh/config line 1: Applying options for *\r\ndebug1: Reading configuration data /etc/ssh/ssh_config\r\ndebug2: resolve_canonicalize: hostname 192.168.50.119 is address\r\ndebug1: auto-mux: Trying existing master\r\ndebug2: fd 3 setting O_NONBLOCK\r\ndebug2: mux_client_hello_exchange: master version 4\r\ndebug3: mux_client_forwards: request forwardings: 0 local, 0 remote\r\ndebug3: mux_client_request_session: entering\r\ndebug3: mux_client_request_alive: entering\r\ndebug3: mux_client_request_alive: done pid = 27\r\ndebug3: mux_client_request_session: session request sent\r\ndebug3: mux_client_read_packet: read header failed: Broken pipe\r\ndebug2: Received exit status from master 0\r\n')
2020-05-07 08:10:01,168 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/file.py
2020-05-07 08:10:01,169 p=1 u=root |  Pipelining is enabled.
2020-05-07 08:10:01,171 p=1 u=root |  <192.168.50.119> ESTABLISH SSH CONNECTION FOR USER: rancher
2020-05-07 08:10:01,172 p=1 u=root |  <192.168.50.119> SSH: EXEC sshpass -d11 ssh -vvv -C -o ControlMaster=auto -o ControlPersist=120s -o StrictHostKeyChecking=no -o Port=22 -o 'User="rancher"' -o ConnectTimeout=5 -o ControlPath=/root/.ansible/cp/0e67d8a304 192.168.50.119 '/bin/sh -c '"'"'sudo -H -S  -p "[sudo via ansible, key=rinjlisuxzceduptlljusfscptnfgiio] password:" -u root /bin/sh -c '"'"'"'"'"'"'"'"'echo BECOME-SUCCESS-rinjlisuxzceduptlljusfscptnfgiio ; /usr/bin/python3'"'"'"'"'"'"'"'"' && sleep 0'"'"''
2020-05-07 08:10:01,201 p=1 u=root |  Escalation succeeded
2020-05-07 08:10:01,360 p=1 u=root |  <192.168.50.119> (0, b'\n{"owner": "root", "size": 13, "uid": 0, "mode": "0644", "group": "root", "path": "/tmp/register-node.sh", "diff": {"after": {"path": "/tmp/register-node.sh"}, "before": {"path": "/tmp/register-node.sh"}}, "changed": false, "invocation": {"module_args": {"_original_basename": "register-node.sh.j2", "owner": null, "dest": "/tmp/register-node.sh", "mode": null, "path": "/tmp/register-node.sh", "state": "file", "serole": null, "attributes": null, "_diff_peek": null, "access_time_format": "%Y%m%d%H%M.%S", "selevel": null, "directory_mode": null, "recurse": false, "modification_time_format": "%Y%m%d%H%M.%S", "setype": null, "modification_time": null, "regexp": null, "group": null, "unsafe_writes": null, "access_time": null, "follow": false, "content": null, "force": false, "seuser": null, "backup": null, "remote_src": null, "delimiter": null, "src": null}}, "gid": 0, "state": "file"}\n', b'OpenSSH_8.1p1, OpenSSL 1.1.1g  21 Apr 2020\r\ndebug1: Reading configuration data /root/.ssh/config\r\ndebug1: /root/.ssh/config line 1: Applying options for *\r\ndebug1: Reading configuration data /etc/ssh/ssh_config\r\ndebug2: resolve_canonicalize: hostname 192.168.50.119 is address\r\ndebug1: auto-mux: Trying existing master\r\ndebug2: fd 3 setting O_NONBLOCK\r\ndebug2: mux_client_hello_exchange: master version 4\r\ndebug3: mux_client_forwards: request forwardings: 0 local, 0 remote\r\ndebug3: mux_client_request_session: entering\r\ndebug3: mux_client_request_alive: entering\r\ndebug3: mux_client_request_alive: done pid = 27\r\ndebug3: mux_client_request_session: session request sent\r\ndebug3: mux_client_read_packet: read header failed: Broken pipe\r\ndebug2: Received exit status from master 0\r\n')
2020-05-07 08:10:01,363 p=1 u=root |  <192.168.50.119> ESTABLISH SSH CONNECTION FOR USER: rancher
2020-05-07 08:10:01,364 p=1 u=root |  <192.168.50.119> SSH: EXEC sshpass -d11 ssh -vvv -C -o ControlMaster=auto -o ControlPersist=120s -o StrictHostKeyChecking=no -o Port=22 -o 'User="rancher"' -o ConnectTimeout=5 -o ControlPath=/root/.ansible/cp/0e67d8a304 192.168.50.119 '/bin/sh -c '"'"'rm -f -r /home/rancher/.ansible/tmp/ansible-tmp-1588839000.5474944-19-244998783399641/ > /dev/null 2>&1 && sleep 0'"'"''
2020-05-07 08:10:01,384 p=1 u=root |  <192.168.50.119> (0, b'', b'OpenSSH_8.1p1, OpenSSL 1.1.1g  21 Apr 2020\r\ndebug1: Reading configuration data /root/.ssh/config\r\ndebug1: /root/.ssh/config line 1: Applying options for *\r\ndebug1: Reading configuration data /etc/ssh/ssh_config\r\ndebug2: resolve_canonicalize: hostname 192.168.50.119 is address\r\ndebug1: auto-mux: Trying existing master\r\ndebug2: fd 3 setting O_NONBLOCK\r\ndebug2: mux_client_hello_exchange: master version 4\r\ndebug3: mux_client_forwards: request forwardings: 0 local, 0 remote\r\ndebug3: mux_client_request_session: entering\r\ndebug3: mux_client_request_alive: entering\r\ndebug3: mux_client_request_alive: done pid = 27\r\ndebug3: mux_client_request_session: session request sent\r\ndebug3: mux_client_read_packet: read header failed: Broken pipe\r\ndebug2: Received exit status from master 0\r\n')
2020-05-07 08:10:01,391 p=1 u=root |  TASK [custom-k8s : 拷贝注册命令到节点] ***************************************************************************************************************************************************************************************************************
2020-05-07 08:10:01,393 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s/tasks/main.yaml:3
2020-05-07 08:10:01,403 p=1 u=root |  ok: [192.168.50.119] => changed=false 
  checksum: 66532ebb05b252e4304014aa6b724211c599c207
  dest: /tmp/register-node.sh
  diff:
    after:
      path: /tmp/register-node.sh
    before:
      path: /tmp/register-node.sh
  gid: 0
  group: root
  invocation:
    module_args:
      _diff_peek: null
      _original_basename: register-node.sh.j2
      access_time: null
      access_time_format: '%Y%m%d%H%M.%S'
      attributes: null
      backup: null
      content: null
      delimiter: null
      dest: /tmp/register-node.sh
      directory_mode: null
      follow: false
      force: false
      group: null
      mode: null
      modification_time: null
      modification_time_format: '%Y%m%d%H%M.%S'
      owner: null
      path: /tmp/register-node.sh
      recurse: false
      regexp: null
      remote_src: null
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: null
      state: file
      unsafe_writes: null
  mode: '0644'
  owner: root
  path: /tmp/register-node.sh
  size: 13
  state: file
  uid: 0
2020-05-07 08:10:01,407 p=1 u=root |  META: ran handlers
2020-05-07 08:10:01,409 p=1 u=root |  META: ran handlers
2020-05-07 08:10:01,411 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:10:01,412 p=1 u=root |  192.168.50.119             : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-05-07 08:10:34,779 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:10:34,796 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:10:34,817 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:10:34,832 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:10:34,848 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:10:34,865 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:10:34,880 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:10:35,965 p=1 u=root |  TASK [custom-k8s : 拷贝注册命令到节点] ***************************************************************************************************************************************************************************************************************
2020-05-07 08:10:35,968 p=1 u=root |  ok: [192.168.50.119]
2020-05-07 08:10:35,972 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:10:35,973 p=1 u=root |  192.168.50.119             : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-05-07 08:23:45,466 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:23:45,493 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:23:45,523 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:23:45,546 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:23:45,567 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:23:45,583 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:23:45,605 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:23:46,837 p=1 u=root |  TASK [custom-k8s : 拷贝注册命令到节点] ***************************************************************************************************************************************************************************************************************
2020-05-07 08:23:46,840 p=1 u=root |  ok: [192.168.50.119]
2020-05-07 08:23:46,897 p=1 u=root |  TASK [custom-k8s : debug] *******************************************************************************************************************************************************************************************************************
2020-05-07 08:23:46,901 p=1 u=root |  fatal: [192.168.50.119]: FAILED! => 
  msg: '''dict object'' has no attribute ''host_groups'''
2020-05-07 08:23:46,903 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:23:46,904 p=1 u=root |  192.168.50.119             : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2020-05-07 08:24:13,687 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:24:13,714 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:24:13,734 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:24:13,748 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:24:13,763 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:24:13,778 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:24:13,797 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:24:14,870 p=1 u=root |  TASK [custom-k8s : 拷贝注册命令到节点] ***************************************************************************************************************************************************************************************************************
2020-05-07 08:24:14,874 p=1 u=root |  ok: [192.168.50.119]
2020-05-07 08:24:14,955 p=1 u=root |  TASK [custom-k8s : debug] *******************************************************************************************************************************************************************************************************************
2020-05-07 08:24:14,959 p=1 u=root |  ok: [192.168.50.119] => (item=192.168.50.119) => 
  msg: 192.168.50.119
2020-05-07 08:24:14,966 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:24:14,967 p=1 u=root |  192.168.50.119             : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-05-07 08:25:03,294 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:25:03,327 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:25:03,360 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:25:03,387 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:25:03,424 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:25:03,457 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:25:03,489 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:25:03,619 p=1 u=root |  TASK [custom-k8s : debug] *******************************************************************************************************************************************************************************************************************
2020-05-07 08:25:03,623 p=1 u=root |  ok: [192.168.50.119] => (item=192.168.50.119) => 
  msg: 192.168.50.119
2020-05-07 08:25:03,632 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:25:03,633 p=1 u=root |  192.168.50.119             : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-05-07 08:31:34,363 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:31:34,385 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:31:34,402 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:31:34,419 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:31:34,434 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:31:34,449 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:31:34,464 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:31:34,556 p=1 u=root |  TASK [custom-k8s : debug] *******************************************************************************************************************************************************************************************************************
2020-05-07 08:31:34,559 p=1 u=root |  ok: [192.168.50.119] => (item=192.168.50.119) => 
  msg: controlplane,worker,etcd
2020-05-07 08:31:34,561 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:31:34,562 p=1 u=root |  192.168.50.119             : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-05-07 08:33:10,077 p=1 u=root |  ERROR! conflicting action statements: debug, shell

The error appears to be in '/etc/ansible/roles/custom-k8s/tasks/main.yaml': line 13, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- debug:
  ^ here

2020-05-07 08:33:40,023 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:33:40,085 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:33:40,128 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:33:40,159 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:33:40,189 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:33:40,210 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:33:40,239 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:33:40,933 p=1 u=root |  TASK [custom-k8s : 执行注册命令] ******************************************************************************************************************************************************************************************************************
2020-05-07 08:33:40,935 p=1 u=root |  changed: [192.168.50.119] => (item=192.168.50.119)
2020-05-07 08:33:40,937 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:33:40,938 p=1 u=root |  192.168.50.119             : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-05-07 08:45:16,542 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:45:16,560 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:45:16,582 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:45:16,608 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:45:16,629 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:45:16,645 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:45:16,663 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:45:17,754 p=1 u=root |  TASK [custom-k8s : 执行注册命令] ******************************************************************************************************************************************************************************************************************
2020-05-07 08:45:17,759 p=1 u=root |  failed: [192.168.50.119] (item=192.168.50.119) => changed=true 
  ansible_loop_var: item
  cmd: 192.168.50.119
  delta: '0:00:00.004775'
  end: '2020-05-07 16:45:17.712476'
  item: 192.168.50.119
  msg: non-zero return code
  rc: 127
  start: '2020-05-07 16:45:17.707701'
  stderr: '/bin/sh: 1: 192.168.50.119: not found'
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
2020-05-07 08:45:17,762 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:45:17,763 p=1 u=root |  192.168.50.119             : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2020-05-07 08:45:40,884 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:45:40,903 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:45:40,928 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:45:40,944 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:45:40,961 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:45:40,975 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:45:40,990 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:45:41,676 p=1 u=root |  TASK [custom-k8s : 执行注册命令] ******************************************************************************************************************************************************************************************************************
2020-05-07 08:45:41,680 p=1 u=root |  failed: [192.168.50.119] (item=192.168.50.119) => changed=true 
  ansible_loop_var: item
  cmd: controlplane,worker,etcd
  delta: '0:00:00.029919'
  end: '2020-05-07 16:45:41.646107'
  item: 192.168.50.119
  msg: non-zero return code
  rc: 127
  start: '2020-05-07 16:45:41.616188'
  stderr: '/bin/sh: 1: controlplane,worker,etcd: not found'
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
2020-05-07 08:45:41,683 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:45:41,684 p=1 u=root |  192.168.50.119             : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2020-05-07 08:49:25,296 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:49:25,322 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:49:25,344 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:49:25,360 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:49:25,379 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:49:25,393 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:49:25,410 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:49:26,063 p=1 u=root |  TASK [custom-k8s : 执行注册命令] ******************************************************************************************************************************************************************************************************************
2020-05-07 08:49:26,067 p=1 u=root |  fatal: [192.168.50.119]: FAILED! => changed=true 
  cmd: controlplane,worker,etcd
  delta: '0:00:00.006444'
  end: '2020-05-07 16:49:26.005742'
  msg: non-zero return code
  rc: 127
  start: '2020-05-07 16:49:25.999298'
  stderr: '/bin/sh: 1: controlplane,worker,etcd: not found'
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
2020-05-07 08:49:26,069 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:49:26,070 p=1 u=root |  192.168.50.119             : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2020-05-07 08:51:39,050 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:51:39,077 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:51:39,118 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:51:39,149 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:51:39,173 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:51:39,194 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:51:39,216 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:51:39,871 p=1 u=root |  TASK [custom-k8s : 执行注册命令] ******************************************************************************************************************************************************************************************************************
2020-05-07 08:51:39,873 p=1 u=root |  changed: [192.168.50.119]
2020-05-07 08:51:39,875 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:51:39,876 p=1 u=root |  192.168.50.119             : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-05-07 08:52:53,781 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:52:53,806 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:52:55,382 p=1 u=root |  TASK [Gathering Facts] **********************************************************************************************************************************************************************************************************************
2020-05-07 08:52:55,385 p=1 u=root |  ok: [1.1.1.131]
2020-05-07 08:52:55,401 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:52:55,417 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:52:55,436 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:52:55,449 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 08:52:55,466 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 08:52:55,937 p=1 u=root |  TASK [custom-k8s : 执行注册命令] ******************************************************************************************************************************************************************************************************************
2020-05-07 08:52:55,940 p=1 u=root |  changed: [1.1.1.131]
2020-05-07 08:52:56,358 p=1 u=root |  changed: [192.168.50.119]
2020-05-07 08:52:56,362 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 08:52:56,363 p=1 u=root |  1.1.1.131                  : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-05-07 08:52:56,363 p=1 u=root |  192.168.50.119             : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-05-07 09:16:32,393 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:16:32,412 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:16:32,436 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:16:32,454 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:16:32,480 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:16:33,783 p=1 u=root |  TASK [custom-k8s : 拷贝注册命令到节点] ***************************************************************************************************************************************************************************************************************
2020-05-07 09:16:33,786 p=1 u=root |  changed: [192.168.50.119]
2020-05-07 09:16:33,790 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:16:33,791 p=1 u=root |  192.168.50.119             : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-05-07 09:17:31,092 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:17:31,120 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:17:31,138 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:17:31,151 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:17:31,163 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:17:32,501 p=1 u=root |  TASK [custom-k8s : 拷贝注册命令到节点] ***************************************************************************************************************************************************************************************************************
2020-05-07 09:17:32,503 p=1 u=root |  changed: [192.168.50.119]
2020-05-07 09:17:32,507 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:17:32,509 p=1 u=root |  192.168.50.119             : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-05-07 09:18:11,051 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:18:11,071 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:18:11,097 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:18:11,112 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:18:11,125 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:18:12,246 p=1 u=root |  TASK [custom-k8s : 拷贝注册命令到节点] ***************************************************************************************************************************************************************************************************************
2020-05-07 09:18:12,250 p=1 u=root |  changed: [192.168.50.119]
2020-05-07 09:18:12,252 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:18:12,254 p=1 u=root |  192.168.50.119             : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2020-05-07 09:40:03,533 p=1 u=root |  ansible-playbook 2.8.11
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.7/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.7.5 (default, Oct 17 2019, 12:25:15) [GCC 8.3.0]
2020-05-07 09:40:03,535 p=1 u=root |  Using /etc/ansible/ansible.cfg as config file
2020-05-07 09:40:03,588 p=1 u=root |  host_list declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:40:03,602 p=1 u=root |  auto declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:40:03,623 p=1 u=root |  Parsed /etc/ansible/config/hosts inventory source with ini plugin
2020-05-07 09:40:04,461 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:40:04,462 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:40:04,738 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:40:04,740 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:40:04,783 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:40:04,785 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:40:05,242 p=1 u=root |  PLAYBOOK: custom-k8s-rancher.yaml ***********************************************************************************************************************************************************************************************************
2020-05-07 09:40:05,243 p=1 u=root |  5 plays in ./roles/custom-k8s-rancher.yaml
2020-05-07 09:40:05,268 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:40:05,289 p=1 u=root |  META: ran handlers
2020-05-07 09:40:05,290 p=1 u=root |  META: ran handlers
2020-05-07 09:40:05,292 p=1 u=root |  META: ran handlers
2020-05-07 09:40:05,302 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:40:05,316 p=1 u=root |  META: ran handlers
2020-05-07 09:40:05,317 p=1 u=root |  META: ran handlers
2020-05-07 09:40:05,318 p=1 u=root |  META: ran handlers
2020-05-07 09:40:05,322 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:40:05,324 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:40:05,331 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:40:05,332 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:40:05,340 p=1 u=root |  META: ran handlers
2020-05-07 09:40:05,341 p=1 u=root |  META: ran handlers
2020-05-07 09:40:05,342 p=1 u=root |  META: ran handlers
2020-05-07 09:40:05,346 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:40:05,350 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:40:05,353 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:40:05,354 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:40:05,360 p=1 u=root |  META: ran handlers
2020-05-07 09:40:05,403 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:40:05,442 p=1 u=root |  TASK [custom-k8s-cfg : 获取 local 集群 agent token] *********************************************************************************************************************************************************************************************
2020-05-07 09:40:05,444 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:8
2020-05-07 09:40:05,448 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => 
  msg: |-
    The conditional check 'custom_k8s_dir_stat_result.stat.exists == False and (custom_rancher_api_key is defined and custom_rancher_api_key|length == 0) or custom_rancher_api_key is not defined' failed. The error was: error while evaluating conditional (custom_k8s_dir_stat_result.stat.exists == False and (custom_rancher_api_key is defined and custom_rancher_api_key|length == 0) or custom_rancher_api_key is not defined): 'custom_k8s_dir_stat_result' is undefined
  
    The error appears to be in '/etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml': line 8, column 3, but may
    be elsewhere in the file depending on the exact syntax problem.
  
    The offending line appears to be:
  
  
    - name:  local  agent token
      ^ here
2020-05-07 09:40:05,451 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:40:05,452 p=1 u=root |  127.0.0.1                  : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2020-05-07 09:42:40,238 p=1 u=root |  ansible-playbook 2.8.11
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.7/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.7.5 (default, Oct 17 2019, 12:25:15) [GCC 8.3.0]
2020-05-07 09:42:40,239 p=1 u=root |  Using /etc/ansible/ansible.cfg as config file
2020-05-07 09:42:40,290 p=1 u=root |  host_list declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:42:40,302 p=1 u=root |  auto declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:42:40,327 p=1 u=root |  Parsed /etc/ansible/config/hosts inventory source with ini plugin
2020-05-07 09:42:41,179 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:42:41,181 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:42:41,451 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:42:41,452 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:42:41,493 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:42:41,495 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:42:41,951 p=1 u=root |  PLAYBOOK: custom-k8s-rancher.yaml ***********************************************************************************************************************************************************************************************************
2020-05-07 09:42:41,952 p=1 u=root |  5 plays in ./roles/custom-k8s-rancher.yaml
2020-05-07 09:42:41,978 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:42:41,997 p=1 u=root |  META: ran handlers
2020-05-07 09:42:41,999 p=1 u=root |  META: ran handlers
2020-05-07 09:42:42,000 p=1 u=root |  META: ran handlers
2020-05-07 09:42:42,009 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:42:42,020 p=1 u=root |  META: ran handlers
2020-05-07 09:42:42,022 p=1 u=root |  META: ran handlers
2020-05-07 09:42:42,023 p=1 u=root |  META: ran handlers
2020-05-07 09:42:42,028 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:42:42,031 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:42:42,038 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:42:42,040 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:42:42,048 p=1 u=root |  META: ran handlers
2020-05-07 09:42:42,050 p=1 u=root |  META: ran handlers
2020-05-07 09:42:42,053 p=1 u=root |  META: ran handlers
2020-05-07 09:42:42,059 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:42:42,062 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:42:42,067 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:42:42,069 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:42:42,075 p=1 u=root |  META: ran handlers
2020-05-07 09:42:42,123 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:42:42,161 p=1 u=root |  TASK [custom-k8s-cfg : 获取 local 集群 agent token] *********************************************************************************************************************************************************************************************
2020-05-07 09:42:42,163 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:8
2020-05-07 09:42:42,169 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => 
  msg: |-
    The conditional check 'custom_k8s_dir_stat_result.stat.exists == False and (custom_rancher_api_key is defined and custom_rancher_api_key|length == 0) or custom_rancher_api_key is not defined' failed. The error was: error while evaluating conditional (custom_k8s_dir_stat_result.stat.exists == False and (custom_rancher_api_key is defined and custom_rancher_api_key|length == 0) or custom_rancher_api_key is not defined): 'custom_k8s_dir_stat_result' is undefined
  
    The error appears to be in '/etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml': line 8, column 3, but may
    be elsewhere in the file depending on the exact syntax problem.
  
    The offending line appears to be:
  
  
    - name:  local  agent token
      ^ here
2020-05-07 09:42:42,172 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:42:42,174 p=1 u=root |  127.0.0.1                  : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2020-05-07 09:43:20,589 p=1 u=root |  ansible-playbook 2.8.11
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.7/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.7.5 (default, Oct 17 2019, 12:25:15) [GCC 8.3.0]
2020-05-07 09:43:20,590 p=1 u=root |  Using /etc/ansible/ansible.cfg as config file
2020-05-07 09:43:20,649 p=1 u=root |  host_list declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:43:20,663 p=1 u=root |  auto declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:43:20,695 p=1 u=root |  Parsed /etc/ansible/config/hosts inventory source with ini plugin
2020-05-07 09:43:21,559 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:43:21,561 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:43:21,843 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:43:21,844 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:43:21,889 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:43:21,891 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:43:22,353 p=1 u=root |  PLAYBOOK: custom-k8s-rancher.yaml ***********************************************************************************************************************************************************************************************************
2020-05-07 09:43:22,354 p=1 u=root |  5 plays in ./roles/custom-k8s-rancher.yaml
2020-05-07 09:43:22,377 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:43:22,393 p=1 u=root |  META: ran handlers
2020-05-07 09:43:22,394 p=1 u=root |  META: ran handlers
2020-05-07 09:43:22,395 p=1 u=root |  META: ran handlers
2020-05-07 09:43:22,405 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:43:22,418 p=1 u=root |  META: ran handlers
2020-05-07 09:43:22,419 p=1 u=root |  META: ran handlers
2020-05-07 09:43:22,420 p=1 u=root |  META: ran handlers
2020-05-07 09:43:22,424 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:43:22,428 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:43:22,435 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:43:22,437 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:43:22,444 p=1 u=root |  META: ran handlers
2020-05-07 09:43:22,446 p=1 u=root |  META: ran handlers
2020-05-07 09:43:22,447 p=1 u=root |  META: ran handlers
2020-05-07 09:43:22,452 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:43:22,455 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:43:22,458 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:43:22,460 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:43:22,465 p=1 u=root |  META: ran handlers
2020-05-07 09:43:22,508 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:43:22,698 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 09:43:22,699 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:43:22,701 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:43:22,701 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:43:22,928 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 09:43:22,929 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:2
2020-05-07 09:43:22,932 p=1 u=root |  ok: [127.0.0.1] => changed=false 
  invocation:
    module_args:
      checksum_algorithm: sha1
      follow: false
      get_attributes: true
      get_checksum: true
      get_md5: null
      get_mime: true
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
  stat:
    exists: false
2020-05-07 09:43:22,968 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:43:23,034 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:43:23,067 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:43:23,068 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'echo ~root && sleep 0'
2020-05-07 09:43:23,081 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir /root/.ansible/tmp/ansible-tmp-1588844603.079744-22-207666479807828 && echo ansible-tmp-1588844603.079744-22-207666479807828="` echo /root/.ansible/tmp/ansible-tmp-1588844603.079744-22-207666479807828 `" ) && sleep 0'
2020-05-07 09:43:23,122 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1588844603.079744-22-207666479807828/ > /dev/null 2>&1 && sleep 0'
2020-05-07 09:43:23,137 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 09:43:23,138 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:14
2020-05-07 09:43:23,142 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=false 
  msg: 'AnsibleUndefinedVariable: ''url'' is undefined'
2020-05-07 09:43:23,145 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:43:23,146 p=1 u=root |  127.0.0.1                  : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2020-05-07 09:45:01,885 p=1 u=root |  ansible-playbook 2.8.11
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.7/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.7.5 (default, Oct 17 2019, 12:25:15) [GCC 8.3.0]
2020-05-07 09:45:01,886 p=1 u=root |  Using /etc/ansible/ansible.cfg as config file
2020-05-07 09:45:01,946 p=1 u=root |  host_list declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:45:01,959 p=1 u=root |  auto declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:45:01,989 p=1 u=root |  Parsed /etc/ansible/config/hosts inventory source with ini plugin
2020-05-07 09:45:02,846 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:45:02,848 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:45:03,127 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:45:03,129 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:45:03,175 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:45:03,176 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:45:03,670 p=1 u=root |  PLAYBOOK: custom-k8s-rancher.yaml ***********************************************************************************************************************************************************************************************************
2020-05-07 09:45:03,671 p=1 u=root |  5 plays in ./roles/custom-k8s-rancher.yaml
2020-05-07 09:45:03,697 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:45:03,709 p=1 u=root |  META: ran handlers
2020-05-07 09:45:03,710 p=1 u=root |  META: ran handlers
2020-05-07 09:45:03,711 p=1 u=root |  META: ran handlers
2020-05-07 09:45:03,725 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:45:03,739 p=1 u=root |  META: ran handlers
2020-05-07 09:45:03,740 p=1 u=root |  META: ran handlers
2020-05-07 09:45:03,742 p=1 u=root |  META: ran handlers
2020-05-07 09:45:03,746 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:45:03,749 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:45:03,759 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:45:03,762 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:45:03,772 p=1 u=root |  META: ran handlers
2020-05-07 09:45:03,774 p=1 u=root |  META: ran handlers
2020-05-07 09:45:03,775 p=1 u=root |  META: ran handlers
2020-05-07 09:45:03,780 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:45:03,783 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:45:03,787 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:45:03,789 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:45:03,795 p=1 u=root |  META: ran handlers
2020-05-07 09:45:03,842 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:45:04,035 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 09:45:04,036 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:45:04,038 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:45:04,039 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:45:04,265 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 09:45:04,272 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:2
2020-05-07 09:45:04,274 p=1 u=root |  ok: [127.0.0.1] => changed=false 
  invocation:
    module_args:
      checksum_algorithm: sha1
      follow: false
      get_attributes: true
      get_checksum: true
      get_md5: null
      get_mime: true
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
  stat:
    exists: false
2020-05-07 09:45:04,308 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:45:04,371 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:45:04,400 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:45:04,401 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'echo ~root && sleep 0'
2020-05-07 09:45:04,411 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir /root/.ansible/tmp/ansible-tmp-1588844704.4094296-21-137041382491354 && echo ansible-tmp-1588844704.4094296-21-137041382491354="` echo /root/.ansible/tmp/ansible-tmp-1588844704.4094296-21-137041382491354 `" ) && sleep 0'
2020-05-07 09:45:04,450 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1588844704.4094296-21-137041382491354/ > /dev/null 2>&1 && sleep 0'
2020-05-07 09:45:04,465 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 09:45:04,466 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:14
2020-05-07 09:45:04,469 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=false 
  msg: 'AnsibleUndefinedVariable: ''rancher_api_key'' is undefined'
2020-05-07 09:45:04,471 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:45:04,473 p=1 u=root |  127.0.0.1                  : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2020-05-07 09:47:05,167 p=1 u=root |  ansible-playbook 2.8.11
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.7/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.7.5 (default, Oct 17 2019, 12:25:15) [GCC 8.3.0]
2020-05-07 09:47:05,169 p=1 u=root |  Using /etc/ansible/ansible.cfg as config file
2020-05-07 09:47:05,225 p=1 u=root |  host_list declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:47:05,236 p=1 u=root |  auto declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:47:05,261 p=1 u=root |  Parsed /etc/ansible/config/hosts inventory source with ini plugin
2020-05-07 09:47:06,110 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:47:06,112 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:47:06,383 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:47:06,384 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:47:06,426 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:47:06,428 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:47:06,887 p=1 u=root |  PLAYBOOK: custom-k8s-rancher.yaml ***********************************************************************************************************************************************************************************************************
2020-05-07 09:47:06,888 p=1 u=root |  5 plays in ./roles/custom-k8s-rancher.yaml
2020-05-07 09:47:06,913 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:47:06,933 p=1 u=root |  META: ran handlers
2020-05-07 09:47:06,934 p=1 u=root |  META: ran handlers
2020-05-07 09:47:06,935 p=1 u=root |  META: ran handlers
2020-05-07 09:47:06,943 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:47:06,955 p=1 u=root |  META: ran handlers
2020-05-07 09:47:06,957 p=1 u=root |  META: ran handlers
2020-05-07 09:47:06,958 p=1 u=root |  META: ran handlers
2020-05-07 09:47:06,963 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:47:06,966 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:47:06,971 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:47:06,973 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:47:06,981 p=1 u=root |  META: ran handlers
2020-05-07 09:47:06,985 p=1 u=root |  META: ran handlers
2020-05-07 09:47:06,987 p=1 u=root |  META: ran handlers
2020-05-07 09:47:06,991 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:47:06,994 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:47:07,001 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:47:07,004 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:47:07,012 p=1 u=root |  META: ran handlers
2020-05-07 09:47:07,061 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:47:07,259 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 09:47:07,261 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:47:07,264 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:47:07,266 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:47:07,480 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 09:47:07,482 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:2
2020-05-07 09:47:07,485 p=1 u=root |  ok: [127.0.0.1] => changed=false 
  invocation:
    module_args:
      checksum_algorithm: sha1
      follow: false
      get_attributes: true
      get_checksum: true
      get_md5: null
      get_mime: true
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
  stat:
    exists: false
2020-05-07 09:47:07,523 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:47:07,589 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:47:07,619 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:47:07,620 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'echo ~root && sleep 0'
2020-05-07 09:47:07,633 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir /root/.ansible/tmp/ansible-tmp-1588844827.631394-21-152517925801246 && echo ansible-tmp-1588844827.631394-21-152517925801246="` echo /root/.ansible/tmp/ansible-tmp-1588844827.631394-21-152517925801246 `" ) && sleep 0'
2020-05-07 09:47:07,668 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1588844827.631394-21-152517925801246/ > /dev/null 2>&1 && sleep 0'
2020-05-07 09:47:07,679 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 09:47:07,681 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:14
2020-05-07 09:47:07,684 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=false 
  msg: 'AnsibleUndefinedVariable: ''canal'' is undefined'
2020-05-07 09:47:07,687 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:47:07,689 p=1 u=root |  127.0.0.1                  : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2020-05-07 09:48:00,599 p=1 u=root |  ansible-playbook 2.8.11
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.7/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.7.5 (default, Oct 17 2019, 12:25:15) [GCC 8.3.0]
2020-05-07 09:48:00,600 p=1 u=root |  Using /etc/ansible/ansible.cfg as config file
2020-05-07 09:48:00,654 p=1 u=root |  host_list declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:48:00,664 p=1 u=root |  auto declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:48:00,688 p=1 u=root |  Parsed /etc/ansible/config/hosts inventory source with ini plugin
2020-05-07 09:48:01,626 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:01,628 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:01,916 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:01,918 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:01,959 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:01,961 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:02,425 p=1 u=root |  PLAYBOOK: custom-k8s-rancher.yaml ***********************************************************************************************************************************************************************************************************
2020-05-07 09:48:02,427 p=1 u=root |  5 plays in ./roles/custom-k8s-rancher.yaml
2020-05-07 09:48:02,452 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:48:02,464 p=1 u=root |  META: ran handlers
2020-05-07 09:48:02,465 p=1 u=root |  META: ran handlers
2020-05-07 09:48:02,466 p=1 u=root |  META: ran handlers
2020-05-07 09:48:02,474 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:48:02,492 p=1 u=root |  META: ran handlers
2020-05-07 09:48:02,493 p=1 u=root |  META: ran handlers
2020-05-07 09:48:02,495 p=1 u=root |  META: ran handlers
2020-05-07 09:48:02,499 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:02,503 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:02,508 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:02,509 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:48:02,516 p=1 u=root |  META: ran handlers
2020-05-07 09:48:02,517 p=1 u=root |  META: ran handlers
2020-05-07 09:48:02,518 p=1 u=root |  META: ran handlers
2020-05-07 09:48:02,522 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:02,525 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:02,529 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:02,530 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:48:02,536 p=1 u=root |  META: ran handlers
2020-05-07 09:48:02,578 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:02,770 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 09:48:02,771 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:48:02,773 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:48:02,774 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:48:02,989 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 09:48:02,991 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:2
2020-05-07 09:48:02,998 p=1 u=root |  ok: [127.0.0.1] => changed=false 
  invocation:
    module_args:
      checksum_algorithm: sha1
      follow: false
      get_attributes: true
      get_checksum: true
      get_md5: null
      get_mime: true
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
  stat:
    exists: false
2020-05-07 09:48:03,037 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:03,113 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:03,145 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:48:03,146 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'echo ~root && sleep 0'
2020-05-07 09:48:03,153 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir /root/.ansible/tmp/ansible-tmp-1588844883.1530402-22-105446211939648 && echo ansible-tmp-1588844883.1530402-22-105446211939648="` echo /root/.ansible/tmp/ansible-tmp-1588844883.1530402-22-105446211939648 `" ) && sleep 0'
2020-05-07 09:48:03,196 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1588844883.1530402-22-105446211939648/ > /dev/null 2>&1 && sleep 0'
2020-05-07 09:48:03,211 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 09:48:03,212 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:14
2020-05-07 09:48:03,214 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=false 
  msg: 'AnsibleUndefinedVariable: ''canal'' is undefined'
2020-05-07 09:48:03,216 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:48:03,217 p=1 u=root |  127.0.0.1                  : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2020-05-07 09:48:38,933 p=1 u=root |  ansible-playbook 2.8.11
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.7/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.7.5 (default, Oct 17 2019, 12:25:15) [GCC 8.3.0]
2020-05-07 09:48:38,934 p=1 u=root |  Using /etc/ansible/ansible.cfg as config file
2020-05-07 09:48:38,985 p=1 u=root |  host_list declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:48:38,995 p=1 u=root |  auto declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:48:39,024 p=1 u=root |  Parsed /etc/ansible/config/hosts inventory source with ini plugin
2020-05-07 09:48:39,868 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:39,870 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:40,139 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:40,140 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:40,182 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:40,183 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:40,635 p=1 u=root |  PLAYBOOK: custom-k8s-rancher.yaml ***********************************************************************************************************************************************************************************************************
2020-05-07 09:48:40,636 p=1 u=root |  5 plays in ./roles/custom-k8s-rancher.yaml
2020-05-07 09:48:40,664 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:48:40,676 p=1 u=root |  META: ran handlers
2020-05-07 09:48:40,677 p=1 u=root |  META: ran handlers
2020-05-07 09:48:40,679 p=1 u=root |  META: ran handlers
2020-05-07 09:48:40,687 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:48:40,701 p=1 u=root |  META: ran handlers
2020-05-07 09:48:40,702 p=1 u=root |  META: ran handlers
2020-05-07 09:48:40,703 p=1 u=root |  META: ran handlers
2020-05-07 09:48:40,710 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:40,714 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:40,718 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:40,720 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:48:40,732 p=1 u=root |  META: ran handlers
2020-05-07 09:48:40,733 p=1 u=root |  META: ran handlers
2020-05-07 09:48:40,734 p=1 u=root |  META: ran handlers
2020-05-07 09:48:40,738 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:40,741 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:40,744 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:40,745 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:48:40,750 p=1 u=root |  META: ran handlers
2020-05-07 09:48:40,803 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:41,007 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 09:48:41,008 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:48:41,011 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:48:41,012 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:48:41,293 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 09:48:41,302 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:2
2020-05-07 09:48:41,306 p=1 u=root |  ok: [127.0.0.1] => changed=false 
  invocation:
    module_args:
      checksum_algorithm: sha1
      follow: false
      get_attributes: true
      get_checksum: true
      get_md5: null
      get_mime: true
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
  stat:
    exists: false
2020-05-07 09:48:41,340 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:41,411 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:48:41,442 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:48:41,444 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'echo ~root && sleep 0'
2020-05-07 09:48:41,456 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir /root/.ansible/tmp/ansible-tmp-1588844921.4548235-22-115744231679689 && echo ansible-tmp-1588844921.4548235-22-115744231679689="` echo /root/.ansible/tmp/ansible-tmp-1588844921.4548235-22-115744231679689 `" ) && sleep 0'
2020-05-07 09:48:41,498 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 09:48:41,499 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:48:41,502 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:48:41,706 p=1 u=root |  <127.0.0.1> PUT /root/.ansible/tmp/ansible-local-1s9_fsufz/tmpxjtwi4b6/custom.sh.j2 TO /root/.ansible/tmp/ansible-tmp-1588844921.4548235-22-115744231679689/source
2020-05-07 09:48:41,708 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1588844921.4548235-22-115744231679689/ /root/.ansible/tmp/ansible-tmp-1588844921.4548235-22-115744231679689/source && sleep 0'
2020-05-07 09:48:41,884 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/copy.py
2020-05-07 09:48:41,885 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:48:41,887 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:48:42,121 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1588844921.4548235-22-115744231679689/ > /dev/null 2>&1 && sleep 0'
2020-05-07 09:48:42,131 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 09:48:42,132 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:14
2020-05-07 09:48:42,137 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=false 
  checksum: 4384c494ad0efeaea8851bc79cc77f670c174fd0
  diff: []
  invocation:
    module_args:
      _original_basename: custom.sh.j2
      attributes: null
      backup: false
      checksum: 4384c494ad0efeaea8851bc79cc77f670c174fd0
      content: null
      delimiter: null
      dest: /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
      directory_mode: null
      follow: false
      force: true
      group: null
      local_follow: null
      mode: null
      owner: null
      regexp: null
      remote_src: null
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: /root/.ansible/tmp/ansible-tmp-1588844921.4548235-22-115744231679689/source
      unsafe_writes: null
      validate: null
  msg: Destination directory /etc/ansible/cluster/custom-k8s/custom_dev1 does not exist
2020-05-07 09:48:42,139 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:48:42,141 p=1 u=root |  127.0.0.1                  : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2020-05-07 09:52:02,623 p=1 u=root |  ansible-playbook 2.8.11
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.7/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.7.5 (default, Oct 17 2019, 12:25:15) [GCC 8.3.0]
2020-05-07 09:52:02,630 p=1 u=root |  Using /etc/ansible/ansible.cfg as config file
2020-05-07 09:52:02,687 p=1 u=root |  host_list declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:52:02,698 p=1 u=root |  auto declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:52:02,721 p=1 u=root |  Parsed /etc/ansible/config/hosts inventory source with ini plugin
2020-05-07 09:52:03,737 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:52:03,739 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:52:04,017 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:52:04,019 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:52:04,065 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:52:04,067 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:52:04,524 p=1 u=root |  PLAYBOOK: custom-k8s-rancher.yaml ***********************************************************************************************************************************************************************************************************
2020-05-07 09:52:04,525 p=1 u=root |  5 plays in ./roles/custom-k8s-rancher.yaml
2020-05-07 09:52:04,550 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:52:04,570 p=1 u=root |  META: ran handlers
2020-05-07 09:52:04,572 p=1 u=root |  META: ran handlers
2020-05-07 09:52:04,573 p=1 u=root |  META: ran handlers
2020-05-07 09:52:04,582 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:52:04,592 p=1 u=root |  META: ran handlers
2020-05-07 09:52:04,593 p=1 u=root |  META: ran handlers
2020-05-07 09:52:04,595 p=1 u=root |  META: ran handlers
2020-05-07 09:52:04,599 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:52:04,603 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:52:04,609 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:52:04,610 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:52:04,618 p=1 u=root |  META: ran handlers
2020-05-07 09:52:04,619 p=1 u=root |  META: ran handlers
2020-05-07 09:52:04,620 p=1 u=root |  META: ran handlers
2020-05-07 09:52:04,623 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:52:04,627 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:52:04,631 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:52:04,633 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:52:04,640 p=1 u=root |  META: ran handlers
2020-05-07 09:52:04,686 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:52:04,891 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 09:52:04,892 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:52:04,894 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:52:04,895 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:52:05,123 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 09:52:05,124 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:2
2020-05-07 09:52:05,127 p=1 u=root |  ok: [127.0.0.1] => changed=false 
  invocation:
    module_args:
      checksum_algorithm: sha1
      follow: false
      get_attributes: true
      get_checksum: true
      get_md5: null
      get_mime: true
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
  stat:
    exists: false
2020-05-07 09:52:05,164 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:52:05,233 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:52:05,268 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:52:05,270 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'echo ~root && sleep 0'
2020-05-07 09:52:05,286 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir /root/.ansible/tmp/ansible-tmp-1588845125.2849534-21-122780287483130 && echo ansible-tmp-1588845125.2849534-21-122780287483130="` echo /root/.ansible/tmp/ansible-tmp-1588845125.2849534-21-122780287483130 `" ) && sleep 0'
2020-05-07 09:52:05,342 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 09:52:05,344 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:52:05,346 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:52:05,566 p=1 u=root |  <127.0.0.1> PUT /root/.ansible/tmp/ansible-local-1cwitu3i6/tmpyxmvw19w/custom.sh.j2 TO /root/.ansible/tmp/ansible-tmp-1588845125.2849534-21-122780287483130/source
2020-05-07 09:52:05,569 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1588845125.2849534-21-122780287483130/ /root/.ansible/tmp/ansible-tmp-1588845125.2849534-21-122780287483130/source && sleep 0'
2020-05-07 09:52:05,746 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/copy.py
2020-05-07 09:52:05,747 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:52:05,749 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:52:05,966 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1588845125.2849534-21-122780287483130/ > /dev/null 2>&1 && sleep 0'
2020-05-07 09:52:05,978 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 09:52:05,980 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:20
2020-05-07 09:52:05,985 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=false 
  checksum: 4384c494ad0efeaea8851bc79cc77f670c174fd0
  diff: []
  invocation:
    module_args:
      _original_basename: custom.sh.j2
      attributes: null
      backup: false
      checksum: 4384c494ad0efeaea8851bc79cc77f670c174fd0
      content: null
      delimiter: null
      dest: /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
      directory_mode: null
      follow: false
      force: true
      group: null
      local_follow: null
      mode: null
      owner: null
      regexp: null
      remote_src: null
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: /root/.ansible/tmp/ansible-tmp-1588845125.2849534-21-122780287483130/source
      unsafe_writes: null
      validate: null
  msg: Destination directory /etc/ansible/cluster/custom-k8s/custom_dev1 does not exist
2020-05-07 09:52:05,987 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:52:05,987 p=1 u=root |  127.0.0.1                  : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2020-05-07 09:54:17,796 p=1 u=root |  ansible-playbook 2.8.11
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.7/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.7.5 (default, Oct 17 2019, 12:25:15) [GCC 8.3.0]
2020-05-07 09:54:17,802 p=1 u=root |  Using /etc/ansible/ansible.cfg as config file
2020-05-07 09:54:17,849 p=1 u=root |  host_list declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:54:17,859 p=1 u=root |  auto declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:54:17,876 p=1 u=root |  Parsed /etc/ansible/config/hosts inventory source with ini plugin
2020-05-07 09:54:18,712 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:18,713 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:19,062 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:19,065 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:19,141 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:19,143 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:19,699 p=1 u=root |  PLAYBOOK: custom-k8s-rancher.yaml ***********************************************************************************************************************************************************************************************************
2020-05-07 09:54:19,700 p=1 u=root |  5 plays in ./roles/custom-k8s-rancher.yaml
2020-05-07 09:54:19,725 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:54:19,742 p=1 u=root |  META: ran handlers
2020-05-07 09:54:19,743 p=1 u=root |  META: ran handlers
2020-05-07 09:54:19,744 p=1 u=root |  META: ran handlers
2020-05-07 09:54:19,752 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:54:19,762 p=1 u=root |  META: ran handlers
2020-05-07 09:54:19,763 p=1 u=root |  META: ran handlers
2020-05-07 09:54:19,764 p=1 u=root |  META: ran handlers
2020-05-07 09:54:19,768 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:19,771 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:19,777 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:19,778 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:54:19,785 p=1 u=root |  META: ran handlers
2020-05-07 09:54:19,787 p=1 u=root |  META: ran handlers
2020-05-07 09:54:19,788 p=1 u=root |  META: ran handlers
2020-05-07 09:54:19,791 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:19,795 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:19,798 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:19,799 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:54:19,805 p=1 u=root |  META: ran handlers
2020-05-07 09:54:19,843 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:20,032 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 09:54:20,033 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:54:20,035 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:54:20,036 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:54:20,272 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 09:54:20,274 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:2
2020-05-07 09:54:20,278 p=1 u=root |  ok: [127.0.0.1] => changed=false 
  invocation:
    module_args:
      checksum_algorithm: sha1
      follow: false
      get_attributes: true
      get_checksum: true
      get_md5: null
      get_mime: true
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
  stat:
    exists: false
2020-05-07 09:54:20,316 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:20,375 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:20,406 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:54:20,407 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'echo ~root && sleep 0'
2020-05-07 09:54:20,421 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir /root/.ansible/tmp/ansible-tmp-1588845260.419908-21-92128041783340 && echo ansible-tmp-1588845260.419908-21-92128041783340="` echo /root/.ansible/tmp/ansible-tmp-1588845260.419908-21-92128041783340 `" ) && sleep 0'
2020-05-07 09:54:20,468 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 09:54:20,469 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:54:20,470 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:54:20,701 p=1 u=root |  <127.0.0.1> PUT /root/.ansible/tmp/ansible-local-1b2rpaz4s/tmpxioraa8o/custom.sh.j2 TO /root/.ansible/tmp/ansible-tmp-1588845260.419908-21-92128041783340/source
2020-05-07 09:54:20,703 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1588845260.419908-21-92128041783340/ /root/.ansible/tmp/ansible-tmp-1588845260.419908-21-92128041783340/source && sleep 0'
2020-05-07 09:54:20,895 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/copy.py
2020-05-07 09:54:20,896 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:54:20,898 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:54:21,125 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1588845260.419908-21-92128041783340/ > /dev/null 2>&1 && sleep 0'
2020-05-07 09:54:21,137 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 09:54:21,138 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:20
2020-05-07 09:54:21,143 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=false 
  checksum: 4384c494ad0efeaea8851bc79cc77f670c174fd0
  diff: []
  invocation:
    module_args:
      _original_basename: custom.sh.j2
      attributes: null
      backup: false
      checksum: 4384c494ad0efeaea8851bc79cc77f670c174fd0
      content: null
      delimiter: null
      dest: /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
      directory_mode: null
      follow: false
      force: true
      group: null
      local_follow: null
      mode: null
      owner: null
      regexp: null
      remote_src: null
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: /root/.ansible/tmp/ansible-tmp-1588845260.419908-21-92128041783340/source
      unsafe_writes: null
      validate: null
  msg: Destination directory /etc/ansible/cluster/custom-k8s/custom_dev1 does not exist
2020-05-07 09:54:21,147 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:54:21,148 p=1 u=root |  127.0.0.1                  : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2020-05-07 09:54:31,296 p=1 u=root |  ansible-playbook 2.8.11
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.7/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.7.5 (default, Oct 17 2019, 12:25:15) [GCC 8.3.0]
2020-05-07 09:54:31,297 p=1 u=root |  Using /etc/ansible/ansible.cfg as config file
2020-05-07 09:54:31,351 p=1 u=root |  host_list declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:54:31,363 p=1 u=root |  auto declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:54:31,387 p=1 u=root |  Parsed /etc/ansible/config/hosts inventory source with ini plugin
2020-05-07 09:54:32,250 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:32,252 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:32,534 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:32,536 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:32,577 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:32,578 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:33,037 p=1 u=root |  PLAYBOOK: custom-k8s-rancher.yaml ***********************************************************************************************************************************************************************************************************
2020-05-07 09:54:33,038 p=1 u=root |  5 plays in ./roles/custom-k8s-rancher.yaml
2020-05-07 09:54:33,073 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:54:33,093 p=1 u=root |  META: ran handlers
2020-05-07 09:54:33,097 p=1 u=root |  META: ran handlers
2020-05-07 09:54:33,099 p=1 u=root |  META: ran handlers
2020-05-07 09:54:33,111 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:54:33,123 p=1 u=root |  META: ran handlers
2020-05-07 09:54:33,125 p=1 u=root |  META: ran handlers
2020-05-07 09:54:33,128 p=1 u=root |  META: ran handlers
2020-05-07 09:54:33,134 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:33,138 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:33,143 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:33,145 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:54:33,156 p=1 u=root |  META: ran handlers
2020-05-07 09:54:33,158 p=1 u=root |  META: ran handlers
2020-05-07 09:54:33,159 p=1 u=root |  META: ran handlers
2020-05-07 09:54:33,164 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:33,171 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:33,176 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:33,178 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:54:33,184 p=1 u=root |  META: ran handlers
2020-05-07 09:54:33,230 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:33,425 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 09:54:33,426 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:54:33,428 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:54:33,429 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:54:33,671 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 09:54:33,672 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:2
2020-05-07 09:54:33,675 p=1 u=root |  ok: [127.0.0.1] => changed=false 
  invocation:
    module_args:
      checksum_algorithm: sha1
      follow: false
      get_attributes: true
      get_checksum: true
      get_md5: null
      get_mime: true
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
  stat:
    exists: false
2020-05-07 09:54:33,707 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:33,909 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/file.py
2020-05-07 09:54:33,910 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:54:33,913 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:54:33,915 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:54:34,125 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-05-07 09:54:34,128 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:8
2020-05-07 09:54:34,137 p=1 u=root |  changed: [127.0.0.1] => changed=true 
  diff:
    after:
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
      state: directory
    before:
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
      state: absent
  gid: 0
  group: root
  invocation:
    module_args:
      _diff_peek: null
      _original_basename: null
      access_time: null
      access_time_format: '%Y%m%d%H%M.%S'
      attributes: null
      backup: null
      content: null
      delimiter: null
      directory_mode: null
      follow: true
      force: false
      group: null
      mode: null
      modification_time: null
      modification_time_format: '%Y%m%d%H%M.%S'
      owner: null
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
      recurse: false
      regexp: null
      remote_src: null
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: null
      state: directory
      unsafe_writes: null
  mode: '0755'
  owner: root
  path: /etc/ansible/cluster/custom-k8s/custom_dev1/
  size: 64
  state: directory
  uid: 0
2020-05-07 09:54:34,185 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:34,254 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:34,285 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:54:34,286 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'echo ~root && sleep 0'
2020-05-07 09:54:34,296 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir /root/.ansible/tmp/ansible-tmp-1588845274.2951603-26-157761730855324 && echo ansible-tmp-1588845274.2951603-26-157761730855324="` echo /root/.ansible/tmp/ansible-tmp-1588845274.2951603-26-157761730855324 `" ) && sleep 0'
2020-05-07 09:54:34,345 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 09:54:34,346 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:54:34,348 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:54:34,555 p=1 u=root |  <127.0.0.1> PUT /root/.ansible/tmp/ansible-local-1oinwxd05/tmpjrerpldp/custom.sh.j2 TO /root/.ansible/tmp/ansible-tmp-1588845274.2951603-26-157761730855324/source
2020-05-07 09:54:34,558 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1588845274.2951603-26-157761730855324/ /root/.ansible/tmp/ansible-tmp-1588845274.2951603-26-157761730855324/source && sleep 0'
2020-05-07 09:54:34,737 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/copy.py
2020-05-07 09:54:34,738 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:54:34,740 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:54:35,018 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1588845274.2951603-26-157761730855324/ > /dev/null 2>&1 && sleep 0'
2020-05-07 09:54:35,033 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 09:54:35,035 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:21
2020-05-07 09:54:35,052 p=1 u=root |  changed: [127.0.0.1] => changed=true 
  checksum: 4384c494ad0efeaea8851bc79cc77f670c174fd0
  dest: /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
  diff: []
  gid: 0
  group: root
  invocation:
    module_args:
      _original_basename: custom.sh.j2
      attributes: null
      backup: false
      checksum: 4384c494ad0efeaea8851bc79cc77f670c174fd0
      content: null
      delimiter: null
      dest: /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
      directory_mode: null
      follow: false
      force: true
      group: null
      local_follow: null
      mode: null
      owner: null
      regexp: null
      remote_src: null
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: /root/.ansible/tmp/ansible-tmp-1588845274.2951603-26-157761730855324/source
      unsafe_writes: null
      validate: null
  md5sum: eb40618214a2bf09ae56819fe32691b1
  mode: '0644'
  owner: root
  size: 5389
  src: /root/.ansible/tmp/ansible-tmp-1588845274.2951603-26-157761730855324/source
  state: file
  uid: 0
2020-05-07 09:54:35,094 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:35,321 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/commands/command.py
2020-05-07 09:54:35,322 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:54:35,324 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:54:35,325 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:54:36,398 p=1 u=root |  TASK [custom-k8s-cfg : 创建自定义集群 custom_dev1] *************************************************************************************************************************************************************************************************
2020-05-07 09:54:36,400 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:28
2020-05-07 09:54:36,418 p=1 u=root |  changed: [127.0.0.1] => changed=true 
  cmd: bash /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
  delta: '0:00:00.836769'
  end: '2020-05-07 09:54:36.381906'
  invocation:
    module_args:
      _raw_params: bash /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
      _uses_shell: true
      argv: null
      chdir: null
      creates: null
      executable: null
      removes: null
      stdin: null
      stdin_add_newline: true
      strip_empty_ends: true
      warn: true
  rc: 0
  start: '2020-05-07 09:54:35.545137'
  stderr: |2-
      % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                     Dload  Upload   Total   Spent    Left  Speed
      0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  4487  100   373  100  4114    909  10034 --:--:-- --:--:-- --:--:-- 10917
      % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                     Dload  Upload   Total   Spent    Left  Speed
      0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   192  100   173  100    19   1061    116 --:--:-- --:--:-- --:--:--  1177
  stderr_lines: <omitted>
  stdout: |-
    {"baseType":"error","code":"InvalidFormat","fieldName":"name","message":"InvalidFormat 422: invalid value custom_dev1: a DNS-1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?')","status":422,"type":"error"}
    {"baseType":"error","code":"NotFound","message":"the server could not find the requested resource (post clusterregistrationtokens.meta.k8s.io)","status":404,"type":"error"}
  stdout_lines: <omitted>
2020-05-07 09:54:36,457 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:54:36,491 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:54:36,493 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'echo ~root && sleep 0'
2020-05-07 09:54:36,502 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir /root/.ansible/tmp/ansible-tmp-1588845276.5015025-61-229192009968244 && echo ansible-tmp-1588845276.5015025-61-229192009968244="` echo /root/.ansible/tmp/ansible-tmp-1588845276.5015025-61-229192009968244 `" ) && sleep 0'
2020-05-07 09:54:36,546 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1588845276.5015025-61-229192009968244/ > /dev/null 2>&1 && sleep 0'
2020-05-07 09:54:36,561 p=1 u=root |  TASK [custom-k8s-cfg : 生成获取节点注册命令脚本] ********************************************************************************************************************************************************************************************************
2020-05-07 09:54:36,562 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:33
2020-05-07 09:54:36,565 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=false 
  msg: 'AnsibleUndefinedVariable: ''url'' is undefined'
2020-05-07 09:54:36,567 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:54:36,568 p=1 u=root |  127.0.0.1                  : ok=4    changed=3    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2020-05-07 09:58:21,806 p=1 u=root |  ansible-playbook 2.8.11
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.7/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.7.5 (default, Oct 17 2019, 12:25:15) [GCC 8.3.0]
2020-05-07 09:58:21,814 p=1 u=root |  Using /etc/ansible/ansible.cfg as config file
2020-05-07 09:58:21,866 p=1 u=root |  host_list declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:58:21,883 p=1 u=root |  auto declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 09:58:21,908 p=1 u=root |  Parsed /etc/ansible/config/hosts inventory source with ini plugin
2020-05-07 09:58:22,775 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:22,777 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:23,051 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:23,054 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:23,104 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:23,106 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:23,562 p=1 u=root |  PLAYBOOK: custom-k8s-rancher.yaml ***********************************************************************************************************************************************************************************************************
2020-05-07 09:58:23,563 p=1 u=root |  5 plays in ./roles/custom-k8s-rancher.yaml
2020-05-07 09:58:23,588 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:58:23,607 p=1 u=root |  META: ran handlers
2020-05-07 09:58:23,609 p=1 u=root |  META: ran handlers
2020-05-07 09:58:23,612 p=1 u=root |  META: ran handlers
2020-05-07 09:58:23,621 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:58:23,632 p=1 u=root |  META: ran handlers
2020-05-07 09:58:23,634 p=1 u=root |  META: ran handlers
2020-05-07 09:58:23,635 p=1 u=root |  META: ran handlers
2020-05-07 09:58:23,639 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:23,643 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:23,649 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:23,651 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:58:23,658 p=1 u=root |  META: ran handlers
2020-05-07 09:58:23,659 p=1 u=root |  META: ran handlers
2020-05-07 09:58:23,661 p=1 u=root |  META: ran handlers
2020-05-07 09:58:23,665 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:23,668 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:23,672 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:23,674 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:58:23,680 p=1 u=root |  META: ran handlers
2020-05-07 09:58:23,720 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:23,910 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 09:58:23,911 p=1 u=root |  Pipelining is enabled.
2020-05-07 09:58:23,913 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 09:58:23,914 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 09:58:24,143 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 09:58:24,144 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:2
2020-05-07 09:58:24,150 p=1 u=root |  ok: [127.0.0.1] => changed=false 
  invocation:
    module_args:
      checksum_algorithm: sha1
      follow: false
      get_attributes: true
      get_checksum: true
      get_md5: null
      get_mime: true
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
  stat:
    atime: 1588845279.0
    attr_flags: ''
    attributes: []
    block_size: 4096
    blocks: 0
    charset: unknown
    ctime: 1588845274.0
    dev: 83
    device_type: 0
    executable: true
    exists: true
    gid: 0
    gr_name: root
    inode: 12925070652
    isblk: false
    ischr: false
    isdir: true
    isfifo: false
    isgid: false
    islnk: false
    isreg: false
    issock: false
    isuid: false
    mimetype: unknown
    mode: '0755'
    mtime: 1588845274.0
    nlink: 3
    path: /etc/ansible/cluster/custom-k8s/custom_dev1/
    pw_name: root
    readable: true
    rgrp: true
    roth: true
    rusr: true
    size: 96
    uid: 0
    version: null
    wgrp: false
    woth: false
    writeable: true
    wusr: true
    xgrp: true
    xoth: true
    xusr: true
2020-05-07 09:58:24,183 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:24,244 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:24,307 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:24,374 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:24,443 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:24,509 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:24,538 p=1 u=root |  META: ran handlers
2020-05-07 09:58:24,541 p=1 u=root |  META: ran handlers
2020-05-07 09:58:24,546 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:24,553 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:24,559 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 09:58:24,560 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:58:24,564 p=1 u=root |  META: ran handlers
2020-05-07 09:58:24,566 p=1 u=root |  META: ran handlers
2020-05-07 09:58:24,568 p=1 u=root |  META: ran handlers
2020-05-07 09:58:24,573 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:58:24,576 p=1 u=root |  127.0.0.1                  : ok=1    changed=0    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2020-05-07 09:59:11,245 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:59:11,269 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:59:11,291 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:59:11,308 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 09:59:11,761 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 09:59:11,762 p=1 u=root |  ok: [127.0.0.1]
2020-05-07 09:59:12,109 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 09:59:12,113 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 09:59:12,114 p=1 u=root |  127.0.0.1                  : ok=1    changed=0    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2020-05-07 10:00:08,705 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:00:08,729 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:00:08,751 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:00:08,766 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:00:09,213 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 10:00:09,215 p=1 u=root |  ok: [127.0.0.1]
2020-05-07 10:00:09,652 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-05-07 10:00:09,654 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:00:10,490 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 10:00:10,493 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:00:11,800 p=1 u=root |  TASK [custom-k8s-cfg : 创建自定义集群 custom_dev1] *************************************************************************************************************************************************************************************************
2020-05-07 10:00:11,802 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:00:11,908 p=1 u=root |  TASK [custom-k8s-cfg : 生成获取节点注册命令脚本] ********************************************************************************************************************************************************************************************************
2020-05-07 10:00:11,911 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=false 
  msg: 'AnsibleUndefinedVariable: ''url'' is undefined'
2020-05-07 10:00:11,914 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:00:11,914 p=1 u=root |  127.0.0.1                  : ok=4    changed=3    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2020-05-07 10:01:41,723 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:01:41,740 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:01:41,760 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:01:41,774 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:01:42,218 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 10:01:42,219 p=1 u=root |  ok: [127.0.0.1]
2020-05-07 10:01:42,666 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-05-07 10:01:42,667 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:01:43,522 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 10:01:43,523 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:01:44,950 p=1 u=root |  TASK [custom-k8s-cfg : 创建自定义集群 custom_dev1] *************************************************************************************************************************************************************************************************
2020-05-07 10:01:44,952 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:01:45,487 p=1 u=root |  TASK [custom-k8s-cfg : 生成获取节点注册命令脚本] ********************************************************************************************************************************************************************************************************
2020-05-07 10:01:45,489 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:01:46,198 p=1 u=root |  TASK [custom-k8s-cfg : 获取节点注册命令] ************************************************************************************************************************************************************************************************************
2020-05-07 10:01:46,200 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:01:46,216 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:01:46,228 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:01:46,229 p=1 u=root |  127.0.0.1                  : ok=6    changed=5    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-05-07 10:04:15,818 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:04:15,836 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:04:15,855 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:04:15,870 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:04:16,332 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 10:04:16,334 p=1 u=root |  ok: [127.0.0.1]
2020-05-07 10:04:16,785 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-05-07 10:04:16,786 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:04:17,604 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 10:04:17,606 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:04:18,842 p=1 u=root |  TASK [custom-k8s-cfg : 创建自定义集群 custom_dev1] *************************************************************************************************************************************************************************************************
2020-05-07 10:04:18,843 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:04:19,391 p=1 u=root |  TASK [custom-k8s-cfg : 生成获取节点注册命令脚本] ********************************************************************************************************************************************************************************************************
2020-05-07 10:04:19,392 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:04:20,125 p=1 u=root |  TASK [custom-k8s-cfg : 获取节点注册命令] ************************************************************************************************************************************************************************************************************
2020-05-07 10:04:20,127 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:04:20,142 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:04:20,147 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:04:20,148 p=1 u=root |  127.0.0.1                  : ok=6    changed=5    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-05-07 10:04:50,991 p=1 u=root |  ansible-playbook 2.8.11
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.7/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.7.5 (default, Oct 17 2019, 12:25:15) [GCC 8.3.0]
2020-05-07 10:04:50,992 p=1 u=root |  Using /etc/ansible/ansible.cfg as config file
2020-05-07 10:04:51,039 p=1 u=root |  host_list declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 10:04:51,049 p=1 u=root |  auto declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 10:04:51,071 p=1 u=root |  Parsed /etc/ansible/config/hosts inventory source with ini plugin
2020-05-07 10:04:51,905 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:51,906 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:52,171 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:52,172 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:52,212 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:52,213 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:52,675 p=1 u=root |  PLAYBOOK: custom-k8s-rancher.yaml ***********************************************************************************************************************************************************************************************************
2020-05-07 10:04:52,676 p=1 u=root |  5 plays in ./roles/custom-k8s-rancher.yaml
2020-05-07 10:04:52,705 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:04:52,721 p=1 u=root |  META: ran handlers
2020-05-07 10:04:52,722 p=1 u=root |  META: ran handlers
2020-05-07 10:04:52,724 p=1 u=root |  META: ran handlers
2020-05-07 10:04:52,737 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:04:52,749 p=1 u=root |  META: ran handlers
2020-05-07 10:04:52,753 p=1 u=root |  META: ran handlers
2020-05-07 10:04:52,755 p=1 u=root |  META: ran handlers
2020-05-07 10:04:52,760 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:52,766 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:52,774 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:52,775 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:04:52,783 p=1 u=root |  META: ran handlers
2020-05-07 10:04:52,785 p=1 u=root |  META: ran handlers
2020-05-07 10:04:52,787 p=1 u=root |  META: ran handlers
2020-05-07 10:04:52,791 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:52,795 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:52,802 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:52,804 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:04:52,809 p=1 u=root |  META: ran handlers
2020-05-07 10:04:52,855 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:53,048 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 10:04:53,049 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:04:53,052 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 10:04:53,052 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:04:53,263 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 10:04:53,264 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:2
2020-05-07 10:04:53,267 p=1 u=root |  ok: [127.0.0.1] => changed=false 
  invocation:
    module_args:
      checksum_algorithm: sha1
      follow: false
      get_attributes: true
      get_checksum: true
      get_md5: null
      get_mime: true
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
  stat:
    exists: false
2020-05-07 10:04:53,299 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:53,498 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/file.py
2020-05-07 10:04:53,500 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:04:53,502 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 10:04:53,502 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:04:53,719 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-05-07 10:04:53,720 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:8
2020-05-07 10:04:53,728 p=1 u=root |  changed: [127.0.0.1] => changed=true 
  diff:
    after:
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
      state: directory
    before:
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
      state: absent
  gid: 0
  group: root
  invocation:
    module_args:
      _diff_peek: null
      _original_basename: null
      access_time: null
      access_time_format: '%Y%m%d%H%M.%S'
      attributes: null
      backup: null
      content: null
      delimiter: null
      directory_mode: null
      follow: true
      force: false
      group: null
      mode: null
      modification_time: null
      modification_time_format: '%Y%m%d%H%M.%S'
      owner: null
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
      recurse: false
      regexp: null
      remote_src: null
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: null
      state: directory
      unsafe_writes: null
  mode: '0755'
  owner: root
  path: /etc/ansible/cluster/custom-k8s/custom_dev1/
  size: 64
  state: directory
  uid: 0
2020-05-07 10:04:53,765 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:53,826 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:53,855 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 10:04:53,857 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'echo ~root && sleep 0'
2020-05-07 10:04:53,866 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir /root/.ansible/tmp/ansible-tmp-1588845893.8653173-25-240450442449345 && echo ansible-tmp-1588845893.8653173-25-240450442449345="` echo /root/.ansible/tmp/ansible-tmp-1588845893.8653173-25-240450442449345 `" ) && sleep 0'
2020-05-07 10:04:53,906 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 10:04:53,908 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:04:53,910 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:04:54,173 p=1 u=root |  <127.0.0.1> PUT /root/.ansible/tmp/ansible-local-17902vame/tmpnxwz9thb/custom.sh.j2 TO /root/.ansible/tmp/ansible-tmp-1588845893.8653173-25-240450442449345/source
2020-05-07 10:04:54,177 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1588845893.8653173-25-240450442449345/ /root/.ansible/tmp/ansible-tmp-1588845893.8653173-25-240450442449345/source && sleep 0'
2020-05-07 10:04:54,363 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/copy.py
2020-05-07 10:04:54,365 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:04:54,368 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:04:54,633 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1588845893.8653173-25-240450442449345/ > /dev/null 2>&1 && sleep 0'
2020-05-07 10:04:54,645 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 10:04:54,646 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:21
2020-05-07 10:04:54,652 p=1 u=root |  changed: [127.0.0.1] => changed=true 
  checksum: fd2a984aad137d024617555b30ab2a84b8e58a81
  dest: /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
  diff: []
  gid: 0
  group: root
  invocation:
    module_args:
      _original_basename: custom.sh.j2
      attributes: null
      backup: false
      checksum: fd2a984aad137d024617555b30ab2a84b8e58a81
      content: null
      delimiter: null
      dest: /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
      directory_mode: null
      follow: false
      force: true
      group: null
      local_follow: null
      mode: null
      owner: null
      regexp: null
      remote_src: null
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: /root/.ansible/tmp/ansible-tmp-1588845893.8653173-25-240450442449345/source
      unsafe_writes: null
      validate: null
  md5sum: 93bf9d1f836546f655afb75f16df857d
  mode: '0644'
  owner: root
  size: 5411
  src: /root/.ansible/tmp/ansible-tmp-1588845893.8653173-25-240450442449345/source
  state: file
  uid: 0
2020-05-07 10:04:54,698 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:54,924 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/commands/command.py
2020-05-07 10:04:54,925 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:04:54,927 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 10:04:54,928 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:04:55,754 p=1 u=root |  TASK [custom-k8s-cfg : 创建自定义集群 custom_dev1] *************************************************************************************************************************************************************************************************
2020-05-07 10:04:55,757 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:28
2020-05-07 10:04:55,768 p=1 u=root |  changed: [127.0.0.1] => changed=true 
  cmd: bash /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
  delta: '0:00:00.600988'
  end: '2020-05-07 10:04:55.734699'
  invocation:
    module_args:
      _raw_params: bash /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
      _uses_shell: true
      argv: null
      chdir: null
      creates: null
      executable: null
      removes: null
      stdin: null
      stdin_add_newline: true
      strip_empty_ends: true
      warn: true
  rc: 0
  start: '2020-05-07 10:04:55.133711'
  stderr: |2-
      % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                     Dload  Upload   Total   Spent    Left  Speed
      0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  4527  100   393  100  4134   2425  25518 --:--:-- --:--:-- --:--:-- 27773
      % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                     Dload  Upload   Total   Spent    Left  Speed
      0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   192  100   173  100    19   1074    118 --:--:-- --:--:-- --:--:--  1192
  stderr_lines: <omitted>
  stdout: |-
    {"baseType":"error","code":"InvalidFormat","fieldName":"name","message":"InvalidFormat 422: invalid value echo custom_dev1 | sed s/_/-/g : a DNS-1123 label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?')","status":422,"type":"error"}
    {"baseType":"error","code":"NotFound","message":"the server could not find the requested resource (post clusterregistrationtokens.meta.k8s.io)","status":404,"type":"error"}
  stdout_lines: <omitted>
2020-05-07 10:04:55,809 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:55,837 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 10:04:55,838 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'echo ~root && sleep 0'
2020-05-07 10:04:55,853 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir /root/.ansible/tmp/ansible-tmp-1588845895.8515744-60-256651751543523 && echo ansible-tmp-1588845895.8515744-60-256651751543523="` echo /root/.ansible/tmp/ansible-tmp-1588845895.8515744-60-256651751543523 `" ) && sleep 0'
2020-05-07 10:04:55,903 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 10:04:55,904 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:04:55,907 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:04:56,153 p=1 u=root |  <127.0.0.1> PUT /root/.ansible/tmp/ansible-local-17902vame/tmp4u6zpr_4/node-register-command.sh.j2 TO /root/.ansible/tmp/ansible-tmp-1588845895.8515744-60-256651751543523/source
2020-05-07 10:04:56,156 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1588845895.8515744-60-256651751543523/ /root/.ansible/tmp/ansible-tmp-1588845895.8515744-60-256651751543523/source && sleep 0'
2020-05-07 10:04:56,166 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/copy.py
2020-05-07 10:04:56,167 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:04:56,169 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:04:56,395 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1588845895.8515744-60-256651751543523/ > /dev/null 2>&1 && sleep 0'
2020-05-07 10:04:56,406 p=1 u=root |  TASK [custom-k8s-cfg : 生成获取节点注册命令脚本] ********************************************************************************************************************************************************************************************************
2020-05-07 10:04:56,407 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:33
2020-05-07 10:04:56,414 p=1 u=root |  changed: [127.0.0.1] => changed=true 
  checksum: 24bccebfedfacebf54a64250f907d90d2a1f994d
  dest: /etc/ansible/cluster/custom-k8s/custom_dev1/node-register-command.sh
  diff: []
  gid: 0
  group: root
  invocation:
    module_args:
      _original_basename: node-register-command.sh.j2
      attributes: null
      backup: false
      checksum: 24bccebfedfacebf54a64250f907d90d2a1f994d
      content: null
      delimiter: null
      dest: /etc/ansible/cluster/custom-k8s/custom_dev1/node-register-command.sh
      directory_mode: null
      follow: false
      force: true
      group: null
      local_follow: null
      mode: null
      owner: null
      regexp: null
      remote_src: null
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: /root/.ansible/tmp/ansible-tmp-1588845895.8515744-60-256651751543523/source
      unsafe_writes: null
      validate: null
  md5sum: 14f562465fd0382a41040eaeb6005596
  mode: '0644'
  owner: root
  size: 524
  src: /root/.ansible/tmp/ansible-tmp-1588845895.8515744-60-256651751543523/source
  state: file
  uid: 0
2020-05-07 10:04:56,453 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:56,485 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/commands/command.py
2020-05-07 10:04:56,486 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:04:56,489 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 10:04:56,490 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:04:57,160 p=1 u=root |  TASK [custom-k8s-cfg : 获取节点注册命令] ************************************************************************************************************************************************************************************************************
2020-05-07 10:04:57,162 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:40
2020-05-07 10:04:57,166 p=1 u=root |  changed: [127.0.0.1] => changed=true 
  cmd: 'bash /etc/ansible/cluster/custom-k8s/custom_dev1/node-register-command.sh '
  delta: '0:00:00.437786'
  end: '2020-05-07 10:04:57.142447'
  invocation:
    module_args:
      _raw_params: 'bash /etc/ansible/cluster/custom-k8s/custom_dev1/node-register-command.sh '
      _uses_shell: true
      argv: null
      chdir: null
      creates: null
      executable: null
      removes: null
      stdin: null
      stdin_add_newline: true
      strip_empty_ends: true
      warn: true
  rc: 0
  start: '2020-05-07 10:04:56.704661'
  stderr: ''
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
2020-05-07 10:04:57,169 p=1 u=root |  META: ran handlers
2020-05-07 10:04:57,170 p=1 u=root |  META: ran handlers
2020-05-07 10:04:57,175 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:57,179 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:57,186 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:04:57,188 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:04:57,192 p=1 u=root |  META: ran handlers
2020-05-07 10:04:57,193 p=1 u=root |  META: ran handlers
2020-05-07 10:04:57,194 p=1 u=root |  META: ran handlers
2020-05-07 10:04:57,196 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:04:57,197 p=1 u=root |  127.0.0.1                  : ok=6    changed=5    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-05-07 10:06:09,427 p=1 u=root |  ansible-playbook 2.8.11
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.7/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.7.5 (default, Oct 17 2019, 12:25:15) [GCC 8.3.0]
2020-05-07 10:06:09,433 p=1 u=root |  Using /etc/ansible/ansible.cfg as config file
2020-05-07 10:06:09,487 p=1 u=root |  host_list declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 10:06:09,500 p=1 u=root |  auto declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 10:06:09,530 p=1 u=root |  Parsed /etc/ansible/config/hosts inventory source with ini plugin
2020-05-07 10:06:10,378 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:10,380 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:10,650 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:10,652 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:10,706 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:10,707 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:11,170 p=1 u=root |  PLAYBOOK: custom-k8s-rancher.yaml ***********************************************************************************************************************************************************************************************************
2020-05-07 10:06:11,171 p=1 u=root |  5 plays in ./roles/custom-k8s-rancher.yaml
2020-05-07 10:06:11,198 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:06:11,215 p=1 u=root |  META: ran handlers
2020-05-07 10:06:11,217 p=1 u=root |  META: ran handlers
2020-05-07 10:06:11,219 p=1 u=root |  META: ran handlers
2020-05-07 10:06:11,232 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:06:11,243 p=1 u=root |  META: ran handlers
2020-05-07 10:06:11,249 p=1 u=root |  META: ran handlers
2020-05-07 10:06:11,252 p=1 u=root |  META: ran handlers
2020-05-07 10:06:11,257 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:11,264 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:11,270 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:11,272 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:06:11,285 p=1 u=root |  META: ran handlers
2020-05-07 10:06:11,286 p=1 u=root |  META: ran handlers
2020-05-07 10:06:11,288 p=1 u=root |  META: ran handlers
2020-05-07 10:06:11,293 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:11,296 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:11,299 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:11,300 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:06:11,305 p=1 u=root |  META: ran handlers
2020-05-07 10:06:11,357 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:11,555 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 10:06:11,556 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:06:11,558 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 10:06:11,559 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:06:11,787 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 10:06:11,788 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:2
2020-05-07 10:06:11,791 p=1 u=root |  ok: [127.0.0.1] => changed=false 
  invocation:
    module_args:
      checksum_algorithm: sha1
      follow: false
      get_attributes: true
      get_checksum: true
      get_md5: null
      get_mime: true
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
  stat:
    exists: false
2020-05-07 10:06:11,825 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:12,028 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/file.py
2020-05-07 10:06:12,029 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:06:12,032 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 10:06:12,032 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:06:12,258 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-05-07 10:06:12,259 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:8
2020-05-07 10:06:12,266 p=1 u=root |  changed: [127.0.0.1] => changed=true 
  diff:
    after:
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
      state: directory
    before:
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
      state: absent
  gid: 0
  group: root
  invocation:
    module_args:
      _diff_peek: null
      _original_basename: null
      access_time: null
      access_time_format: '%Y%m%d%H%M.%S'
      attributes: null
      backup: null
      content: null
      delimiter: null
      directory_mode: null
      follow: true
      force: false
      group: null
      mode: null
      modification_time: null
      modification_time_format: '%Y%m%d%H%M.%S'
      owner: null
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
      recurse: false
      regexp: null
      remote_src: null
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: null
      state: directory
      unsafe_writes: null
  mode: '0755'
  owner: root
  path: /etc/ansible/cluster/custom-k8s/custom_dev1/
  size: 64
  state: directory
  uid: 0
2020-05-07 10:06:12,302 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:12,377 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:12,407 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 10:06:12,408 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'echo ~root && sleep 0'
2020-05-07 10:06:12,419 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir /root/.ansible/tmp/ansible-tmp-1588845972.4178915-25-103815495144667 && echo ansible-tmp-1588845972.4178915-25-103815495144667="` echo /root/.ansible/tmp/ansible-tmp-1588845972.4178915-25-103815495144667 `" ) && sleep 0'
2020-05-07 10:06:12,463 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 10:06:12,465 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:06:12,467 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:06:12,726 p=1 u=root |  <127.0.0.1> PUT /root/.ansible/tmp/ansible-local-1sb20epj1/tmpyhyl4yy2/custom.sh.j2 TO /root/.ansible/tmp/ansible-tmp-1588845972.4178915-25-103815495144667/source
2020-05-07 10:06:12,728 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1588845972.4178915-25-103815495144667/ /root/.ansible/tmp/ansible-tmp-1588845972.4178915-25-103815495144667/source && sleep 0'
2020-05-07 10:06:12,920 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/copy.py
2020-05-07 10:06:12,921 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:06:12,923 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:06:13,176 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1588845972.4178915-25-103815495144667/ > /dev/null 2>&1 && sleep 0'
2020-05-07 10:06:13,188 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 10:06:13,189 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:21
2020-05-07 10:06:13,199 p=1 u=root |  changed: [127.0.0.1] => changed=true 
  checksum: 0b22f2ae35c3b93ae9843892e7e5872ff316d693
  dest: /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
  diff: []
  gid: 0
  group: root
  invocation:
    module_args:
      _original_basename: custom.sh.j2
      attributes: null
      backup: false
      checksum: 0b22f2ae35c3b93ae9843892e7e5872ff316d693
      content: null
      delimiter: null
      dest: /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
      directory_mode: null
      follow: false
      force: true
      group: null
      local_follow: null
      mode: null
      owner: null
      regexp: null
      remote_src: null
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: /root/.ansible/tmp/ansible-tmp-1588845972.4178915-25-103815495144667/source
      unsafe_writes: null
      validate: null
  md5sum: f8acc90d0a2f6ba174ab3c225e1ce62a
  mode: '0644'
  owner: root
  size: 5411
  src: /root/.ansible/tmp/ansible-tmp-1588845972.4178915-25-103815495144667/source
  state: file
  uid: 0
2020-05-07 10:06:13,236 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:13,460 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/commands/command.py
2020-05-07 10:06:13,461 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:06:13,463 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 10:06:13,463 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:06:15,708 p=1 u=root |  TASK [custom-k8s-cfg : 创建自定义集群 custom_dev1] *************************************************************************************************************************************************************************************************
2020-05-07 10:06:15,710 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:28
2020-05-07 10:06:15,738 p=1 u=root |  changed: [127.0.0.1] => changed=true 
  cmd: bash /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
  delta: '0:00:02.024054'
  end: '2020-05-07 10:06:15.690465'
  invocation:
    module_args:
      _raw_params: bash /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
      _uses_shell: true
      argv: null
      chdir: null
      creates: null
      executable: null
      removes: null
      stdin: null
      stdin_add_newline: true
      strip_empty_ends: true
      warn: true
  rc: 0
  start: '2020-05-07 10:06:13.666411'
  stderr: |2-
      % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                     Dload  Upload   Total   Spent    Left  Speed
      0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 10108    0  5994  100  4114  24768  17000 --:--:-- --:--:-- --:--:-- 41768
      % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                     Dload  Upload   Total   Spent    Left  Speed
      0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  1680  100  1654  100    26   9451    148 --:--:-- --:--:-- --:--:--  9600
  stderr_lines: <omitted>
  stdout: |-
    {"actions":{"backupEtcd":"https://demo.cnrancher.com/v3/clusters/c-cwfq5?action=backupEtcd","enableMonitoring":"https://demo.cnrancher.com/v3/clusters/c-cwfq5?action=enableMonitoring","exportYaml":"https://demo.cnrancher.com/v3/clusters/c-cwfq5?action=exportYaml","generateKubeconfig":"https://demo.cnrancher.com/v3/clusters/c-cwfq5?action=generateKubeconfig","importYaml":"https://demo.cnrancher.com/v3/clusters/c-cwfq5?action=importYaml","restoreFromEtcdBackup":"https://demo.cnrancher.com/v3/clusters/c-cwfq5?action=restoreFromEtcdBackup","rotateCertificates":"https://demo.cnrancher.com/v3/clusters/c-cwfq5?action=rotateCertificates","runSecurityScan":"https://demo.cnrancher.com/v3/clusters/c-cwfq5?action=runSecurityScan","saveAsTemplate":"https://demo.cnrancher.com/v3/clusters/c-cwfq5?action=saveAsTemplate"},"amazonElasticContainerServiceConfig":null,"annotations":{},"appliedEnableNetworkPolicy":false,"azureKubernetesServiceConfig":null,"baseType":"cluster","clusterTemplateId":null,"clusterTemplateRevisionId":null,"conditions":[{"status":"True","type":"Pending"},{"status":"Unknown","type":"Provisioned"},{"status":"Unknown","type":"Waiting"}],"created":"2020-05-07T10:06:13Z","createdTS":1588845973000,"creatorId":"user-592tz","defaultClusterRoleForProjectMembers":null,"defaultPodSecurityPolicyTemplateId":null,"dockerRootDir":"/var/lib/docker","enableClusterAlerting":false,"enableClusterMonitoring":false,"enableNetworkPolicy":false,"googleKubernetesEngineConfig":null,"id":"c-cwfq5","internal":false,"istioEnabled":false,"labels":{"cattle.io/creator":"norman"},"links":{"apiServices":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/apiservices","clusterAlertGroups":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/clusteralertgroups","clusterAlertRules":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/clusteralertrules","clusterAlerts":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/clusteralerts","clusterCatalogs":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/clustercatalogs","clusterLoggings":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/clusterloggings","clusterMonitorGraphs":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/clustermonitorgraphs","clusterRegistrationTokens":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/clusterregistrationtokens","clusterRoleTemplateBindings":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/clusterroletemplatebindings","clusterScans":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/clusterscans","etcdBackups":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/etcdbackups","namespaces":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/namespaces","nodePools":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/nodepools","nodes":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/nodes","notifiers":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/notifiers","persistentVolumes":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/persistentvolumes","projects":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/projects","remove":"https://demo.cnrancher.com/v3/clusters/c-cwfq5","self":"https://demo.cnrancher.com/v3/clusters/c-cwfq5","shell":"wss://demo.cnrancher.com/v3/clusters/c-cwfq5?shell=true","storageClasses":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/storageclasses","subscribe":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/subscribe","templates":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/templates","tokens":"https://demo.cnrancher.com/v3/clusters/c-cwfq5/tokens","update":"https://demo.cnrancher.com/v3/clusters/c-cwfq5"},"localClusterAuthEndpoint":{"enabled":true,"type":"/v3/schemas/localClusterAuthEndpoint"},"name":"custom-dev1","rancherKubernetesEngineConfig":{"addonJobTimeout":30,"authentication":{"strategy":"x509|webhook","type":"/v3/schemas/authnConfig"},"authorization":{"type":"/v3/schemas/authzConfig"},"bastionHost":{"sshAgentAuth":false,"type":"/v3/schemas/bastionHost"},"cloudProvider":{"type":"/v3/schemas/cloudProvider"},"ignoreDockerVersion":true,"ingress":{"provider":"nginx","type":"/v3/schemas/ingressConfig"},"kubernetesVersion":"v1.17.5-rancher1-1","monitoring":{"provider":"metrics-server","type":"/v3/schemas/monitoringConfig"},"network":{"mtu":1450,"options":{"flannel_backend_type":"vxlan"},"plugin":"canal","type":"/v3/schemas/networkConfig"},"restore":{"restore":false,"type":"/v3/schemas/restoreConfig"},"services":{"etcd":{"backupConfig":{"enabled":true,"intervalHours":12,"retention":6,"s3BackupConfig":null,"safeTimestamp":false,"type":"/v3/schemas/backupConfig"},"creation":"12h","extraArgs":{"auto-compaction-retention":"240","election-timeout":"5000","heartbeat-interval":"500","quota-backend-bytes":"6442450944"},"gid":0,"retention":"72h","snapshot":false,"type":"/v3/schemas/etcdService","uid":0},"kubeApi":{"alwaysPullImages":false,"podSecurityPolicy":false,"serviceNodePortRange":"30000-32767","type":"/v3/schemas/kubeAPIService"},"kubeController":{"extraArgs":{"node-monitor-grace-period":"20s","node-monitor-period":"5s","node-startup-grace-period":"30s","pod-eviction-timeout":"1m"},"type":"/v3/schemas/kubeControllerService"},"kubelet":{"extraArgs":{"eviction-hard":"memory.available\u003c300Mi,nodefs.available\u003c10%,imagefs.available\u003c15%,nodefs.inodesFree\u003c5%","kube-api-burst":"30","kube-api-qps":"15","kube-reserved":"memory=250Mi","max-open-files":"2000000","max-pods":"250","network-plugin-mtu":"1500","pod-infra-container-image":"rancher/pause:3.1","registry-burst":"10","registry-qps":"0","serialize-image-pulls":"false","sync-frequency":"3s","system-reserved":"memory=250Mi"},"failSwapOn":false,"generateServingCertificate":false,"type":"/v3/schemas/kubeletService"},"kubeproxy":{"type":"/v3/schemas/kubeproxyService"},"scheduler":{"type":"/v3/schemas/schedulerService"},"type":"/v3/schemas/rkeConfigServices"},"sshAgentAuth":false,"type":"/v3/schemas/rancherKubernetesEngineConfig"},"state":"provisioning","transitioning":"yes","transitioningMessage":"","type":"cluster","uuid":"83c4a802-bd22-4d73-bc87-1dec25eef3b1","windowsPreferedCluster":false}
    {"annotations":{},"baseType":"clusterRegistrationToken","clusterId":"c-cwfq5","command":"kubectl apply -f https://demo.cnrancher.com/v3/import/45zcksv8c9k9ksd24jfpcwlc8mqxbbc27q9bzc84rchf88dzs6pm6m.yaml","created":"2020-05-07T10:06:15Z","createdTS":1588845975000,"creatorId":"user-592tz","id":"c-cwfq5:crt-mfsd9","insecureCommand":"curl --insecure -sfL https://demo.cnrancher.com/v3/import/45zcksv8c9k9ksd24jfpcwlc8mqxbbc27q9bzc84rchf88dzs6pm6m.yaml | kubectl apply -f -","labels":{"cattle.io/creator":"norman"},"links":{"remove":"https://demo.cnrancher.com/v3/clusterRegistrationTokens/c-cwfq5:crt-mfsd9","self":"https://demo.cnrancher.com/v3/clusterRegistrationTokens/c-cwfq5:crt-mfsd9","update":"https://demo.cnrancher.com/v3/clusterRegistrationTokens/c-cwfq5:crt-mfsd9"},"manifestUrl":"https://demo.cnrancher.com/v3/import/45zcksv8c9k9ksd24jfpcwlc8mqxbbc27q9bzc84rchf88dzs6pm6m.yaml","name":"crt-mfsd9","namespaceId":null,"nodeCommand":"sudo docker run -d --privileged --restart=unless-stopped --net=host -v /etc/kubernetes:/etc/kubernetes -v /var/run:/var/run rancher/rancher-agent:v2.3.7 --server https://demo.cnrancher.com --token 45zcksv8c9k9ksd24jfpcwlc8mqxbbc27q9bzc84rchf88dzs6pm6m","state":"active","token":"45zcksv8c9k9ksd24jfpcwlc8mqxbbc27q9bzc84rchf88dzs6pm6m","transitioning":"no","transitioningMessage":"","type":"clusterRegistrationToken","uuid":"68e8810e-97b8-4e28-b9e1-20bbf0d11272","windowsNodeCommand":"PowerShell -NoLogo -NonInteractive -Command \"\u0026 {docker run -v c:/:c:/host rancher/rancher-agent:v2.3.7 bootstrap --server https://demo.cnrancher.com --token 45zcksv8c9k9ksd24jfpcwlc8mqxbbc27q9bzc84rchf88dzs6pm6m | iex}\""}
  stdout_lines: <omitted>
2020-05-07 10:06:15,775 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:15,807 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 10:06:15,808 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'echo ~root && sleep 0'
2020-05-07 10:06:15,822 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir /root/.ansible/tmp/ansible-tmp-1588845975.8203986-63-125811115780798 && echo ansible-tmp-1588845975.8203986-63-125811115780798="` echo /root/.ansible/tmp/ansible-tmp-1588845975.8203986-63-125811115780798 `" ) && sleep 0'
2020-05-07 10:06:15,867 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 10:06:15,869 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:06:15,871 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:06:16,105 p=1 u=root |  <127.0.0.1> PUT /root/.ansible/tmp/ansible-local-1sb20epj1/tmp119uu4vo/node-register-command.sh.j2 TO /root/.ansible/tmp/ansible-tmp-1588845975.8203986-63-125811115780798/source
2020-05-07 10:06:16,108 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1588845975.8203986-63-125811115780798/ /root/.ansible/tmp/ansible-tmp-1588845975.8203986-63-125811115780798/source && sleep 0'
2020-05-07 10:06:16,117 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/copy.py
2020-05-07 10:06:16,118 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:06:16,120 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:06:16,352 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1588845975.8203986-63-125811115780798/ > /dev/null 2>&1 && sleep 0'
2020-05-07 10:06:16,364 p=1 u=root |  TASK [custom-k8s-cfg : 生成获取节点注册命令脚本] ********************************************************************************************************************************************************************************************************
2020-05-07 10:06:16,366 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:33
2020-05-07 10:06:16,373 p=1 u=root |  changed: [127.0.0.1] => changed=true 
  checksum: 901235605bea5faa86a64277c682e15386dd7a10
  dest: /etc/ansible/cluster/custom-k8s/custom_dev1/node-register-command.sh
  diff: []
  gid: 0
  group: root
  invocation:
    module_args:
      _original_basename: node-register-command.sh.j2
      attributes: null
      backup: false
      checksum: 901235605bea5faa86a64277c682e15386dd7a10
      content: null
      delimiter: null
      dest: /etc/ansible/cluster/custom-k8s/custom_dev1/node-register-command.sh
      directory_mode: null
      follow: false
      force: true
      group: null
      local_follow: null
      mode: null
      owner: null
      regexp: null
      remote_src: null
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: /root/.ansible/tmp/ansible-tmp-1588845975.8203986-63-125811115780798/source
      unsafe_writes: null
      validate: null
  md5sum: 29f97fb8221acea12eb6696d29e774c9
  mode: '0644'
  owner: root
  size: 524
  src: /root/.ansible/tmp/ansible-tmp-1588845975.8203986-63-125811115780798/source
  state: file
  uid: 0
2020-05-07 10:06:16,415 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:06:16,448 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/commands/command.py
2020-05-07 10:06:16,449 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:06:16,451 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 10:06:16,452 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:06:18,636 p=1 u=root |  TASK [custom-k8s-cfg : 获取节点注册命令] ************************************************************************************************************************************************************************************************************
2020-05-07 10:06:18,638 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:40
2020-05-07 10:06:18,647 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => changed=true 
  cmd: 'bash /etc/ansible/cluster/custom-k8s/custom_dev1/node-register-command.sh '
  delta: '0:00:01.957333'
  end: '2020-05-07 10:06:18.614446'
  invocation:
    module_args:
      _raw_params: 'bash /etc/ansible/cluster/custom-k8s/custom_dev1/node-register-command.sh '
      _uses_shell: true
      argv: null
      chdir: null
      creates: null
      executable: null
      removes: null
      stdin: null
      stdin_add_newline: true
      strip_empty_ends: true
      warn: true
  msg: non-zero return code
  rc: 5
  start: '2020-05-07 10:06:16.657113'
  stderr: 'jq: error (at <stdin>:1): Cannot iterate over null (null)'
  stderr_lines: <omitted>
  stdout: ''
  stdout_lines: <omitted>
2020-05-07 10:06:18,649 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:06:18,650 p=1 u=root |  127.0.0.1                  : ok=5    changed=4    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2020-05-07 10:08:47,856 p=1 u=root |  ansible-playbook 2.8.11
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.7/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.7.5 (default, Oct 17 2019, 12:25:15) [GCC 8.3.0]
2020-05-07 10:08:47,864 p=1 u=root |  Using /etc/ansible/ansible.cfg as config file
2020-05-07 10:08:47,915 p=1 u=root |  host_list declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 10:08:47,930 p=1 u=root |  auto declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 10:08:47,954 p=1 u=root |  Parsed /etc/ansible/config/hosts inventory source with ini plugin
2020-05-07 10:08:48,799 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:08:48,800 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:08:49,071 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:08:49,073 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:08:49,113 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:08:49,114 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:08:49,555 p=1 u=root |  PLAYBOOK: custom-k8s-rancher.yaml ***********************************************************************************************************************************************************************************************************
2020-05-07 10:08:49,556 p=1 u=root |  5 plays in ./roles/custom-k8s-rancher.yaml
2020-05-07 10:08:49,582 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:08:49,604 p=1 u=root |  META: ran handlers
2020-05-07 10:08:49,605 p=1 u=root |  META: ran handlers
2020-05-07 10:08:49,606 p=1 u=root |  META: ran handlers
2020-05-07 10:08:49,614 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:08:49,622 p=1 u=root |  META: ran handlers
2020-05-07 10:08:49,624 p=1 u=root |  META: ran handlers
2020-05-07 10:08:49,626 p=1 u=root |  META: ran handlers
2020-05-07 10:08:49,630 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:08:49,634 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:08:49,640 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:08:49,641 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:08:49,651 p=1 u=root |  META: ran handlers
2020-05-07 10:08:49,653 p=1 u=root |  META: ran handlers
2020-05-07 10:08:49,654 p=1 u=root |  META: ran handlers
2020-05-07 10:08:49,657 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:08:49,660 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:08:49,663 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:08:49,664 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:08:49,670 p=1 u=root |  META: ran handlers
2020-05-07 10:08:49,714 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:08:49,748 p=1 u=root |  TASK [custom-k8s-cfg : 生成获取节点注册命令脚本] ********************************************************************************************************************************************************************************************************
2020-05-07 10:08:49,749 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:33
2020-05-07 10:08:49,752 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => 
  msg: |-
    The conditional check 'custom_k8s_dir_stat_result.stat.exists == False' failed. The error was: error while evaluating conditional (custom_k8s_dir_stat_result.stat.exists == False): 'custom_k8s_dir_stat_result' is undefined
  
    The error appears to be in '/etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml': line 33, column 3, but may
    be elsewhere in the file depending on the exact syntax problem.
  
    The offending line appears to be:
  
  
    - name:
      ^ here
2020-05-07 10:08:49,754 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:08:49,755 p=1 u=root |  127.0.0.1                  : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2020-05-07 10:09:09,927 p=1 u=root |  ansible-playbook 2.8.11
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.7/site-packages/ansible
  executable location = /usr/bin/ansible-playbook
  python version = 3.7.5 (default, Oct 17 2019, 12:25:15) [GCC 8.3.0]
2020-05-07 10:09:09,928 p=1 u=root |  Using /etc/ansible/ansible.cfg as config file
2020-05-07 10:09:09,977 p=1 u=root |  host_list declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 10:09:09,988 p=1 u=root |  auto declined parsing /etc/ansible/config/hosts as it did not pass it's verify_file() method
2020-05-07 10:09:10,013 p=1 u=root |  Parsed /etc/ansible/config/hosts inventory source with ini plugin
2020-05-07 10:09:10,870 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:10,872 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:11,141 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:11,142 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:11,189 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:11,191 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:11,653 p=1 u=root |  PLAYBOOK: custom-k8s-rancher.yaml ***********************************************************************************************************************************************************************************************************
2020-05-07 10:09:11,654 p=1 u=root |  5 plays in ./roles/custom-k8s-rancher.yaml
2020-05-07 10:09:11,681 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:09:11,694 p=1 u=root |  META: ran handlers
2020-05-07 10:09:11,696 p=1 u=root |  META: ran handlers
2020-05-07 10:09:11,697 p=1 u=root |  META: ran handlers
2020-05-07 10:09:11,706 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:09:11,721 p=1 u=root |  META: ran handlers
2020-05-07 10:09:11,723 p=1 u=root |  META: ran handlers
2020-05-07 10:09:11,724 p=1 u=root |  META: ran handlers
2020-05-07 10:09:11,728 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:11,731 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:11,737 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:11,739 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:09:11,746 p=1 u=root |  META: ran handlers
2020-05-07 10:09:11,747 p=1 u=root |  META: ran handlers
2020-05-07 10:09:11,750 p=1 u=root |  META: ran handlers
2020-05-07 10:09:11,755 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:11,758 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:11,761 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:11,763 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:09:11,769 p=1 u=root |  META: ran handlers
2020-05-07 10:09:11,810 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:12,000 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 10:09:12,001 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:09:12,003 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 10:09:12,004 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:09:12,220 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 10:09:12,222 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:2
2020-05-07 10:09:12,227 p=1 u=root |  ok: [127.0.0.1] => changed=false 
  invocation:
    module_args:
      checksum_algorithm: sha1
      follow: false
      get_attributes: true
      get_checksum: true
      get_md5: null
      get_mime: true
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
  stat:
    exists: false
2020-05-07 10:09:12,261 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:12,462 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/file.py
2020-05-07 10:09:12,463 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:09:12,465 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 10:09:12,465 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:09:12,684 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-05-07 10:09:12,685 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:8
2020-05-07 10:09:12,692 p=1 u=root |  changed: [127.0.0.1] => changed=true 
  diff:
    after:
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
      state: directory
    before:
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
      state: absent
  gid: 0
  group: root
  invocation:
    module_args:
      _diff_peek: null
      _original_basename: null
      access_time: null
      access_time_format: '%Y%m%d%H%M.%S'
      attributes: null
      backup: null
      content: null
      delimiter: null
      directory_mode: null
      follow: true
      force: false
      group: null
      mode: null
      modification_time: null
      modification_time_format: '%Y%m%d%H%M.%S'
      owner: null
      path: /etc/ansible/cluster/custom-k8s/custom_dev1/
      recurse: false
      regexp: null
      remote_src: null
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: null
      state: directory
      unsafe_writes: null
  mode: '0755'
  owner: root
  path: /etc/ansible/cluster/custom-k8s/custom_dev1/
  size: 64
  state: directory
  uid: 0
2020-05-07 10:09:12,727 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:12,792 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:12,822 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 10:09:12,824 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'echo ~root && sleep 0'
2020-05-07 10:09:12,832 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir /root/.ansible/tmp/ansible-tmp-1588846152.831346-26-40096167178468 && echo ansible-tmp-1588846152.831346-26-40096167178468="` echo /root/.ansible/tmp/ansible-tmp-1588846152.831346-26-40096167178468 `" ) && sleep 0'
2020-05-07 10:09:12,878 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 10:09:12,879 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:09:12,881 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:09:13,148 p=1 u=root |  <127.0.0.1> PUT /root/.ansible/tmp/ansible-local-1noev89lr/tmp5zwq5opk/custom.sh.j2 TO /root/.ansible/tmp/ansible-tmp-1588846152.831346-26-40096167178468/source
2020-05-07 10:09:13,152 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1588846152.831346-26-40096167178468/ /root/.ansible/tmp/ansible-tmp-1588846152.831346-26-40096167178468/source && sleep 0'
2020-05-07 10:09:13,332 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/copy.py
2020-05-07 10:09:13,333 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:09:13,336 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:09:13,567 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1588846152.831346-26-40096167178468/ > /dev/null 2>&1 && sleep 0'
2020-05-07 10:09:13,580 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 10:09:13,581 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:21
2020-05-07 10:09:13,587 p=1 u=root |  changed: [127.0.0.1] => changed=true 
  checksum: 0b22f2ae35c3b93ae9843892e7e5872ff316d693
  dest: /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
  diff: []
  gid: 0
  group: root
  invocation:
    module_args:
      _original_basename: custom.sh.j2
      attributes: null
      backup: false
      checksum: 0b22f2ae35c3b93ae9843892e7e5872ff316d693
      content: null
      delimiter: null
      dest: /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
      directory_mode: null
      follow: false
      force: true
      group: null
      local_follow: null
      mode: null
      owner: null
      regexp: null
      remote_src: null
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: /root/.ansible/tmp/ansible-tmp-1588846152.831346-26-40096167178468/source
      unsafe_writes: null
      validate: null
  md5sum: f8acc90d0a2f6ba174ab3c225e1ce62a
  mode: '0644'
  owner: root
  size: 5411
  src: /root/.ansible/tmp/ansible-tmp-1588846152.831346-26-40096167178468/source
  state: file
  uid: 0
2020-05-07 10:09:13,626 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:13,851 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/commands/command.py
2020-05-07 10:09:13,852 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:09:13,853 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 10:09:13,854 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:09:14,725 p=1 u=root |  TASK [custom-k8s-cfg : 创建自定义集群 custom_dev1] *************************************************************************************************************************************************************************************************
2020-05-07 10:09:14,727 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:28
2020-05-07 10:09:14,738 p=1 u=root |  changed: [127.0.0.1] => changed=true 
  cmd: bash /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
  delta: '0:00:00.638854'
  end: '2020-05-07 10:09:14.708294'
  invocation:
    module_args:
      _raw_params: bash /etc/ansible/cluster/custom-k8s/custom_dev1/custom.sh
      _uses_shell: true
      argv: null
      chdir: null
      creates: null
      executable: null
      removes: null
      stdin: null
      stdin_add_newline: true
      strip_empty_ends: true
      warn: true
  rc: 0
  start: '2020-05-07 10:09:14.069440'
  stderr: |2-
      % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                     Dload  Upload   Total   Spent    Left  Speed
      0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  4222  100   108  100  4114    565  21539 --:--:-- --:--:-- --:--:-- 22104
      % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                     Dload  Upload   Total   Spent    Left  Speed
      0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  1680  100  1654  100    26  10085    158 --:--:-- --:--:-- --:--:-- 10243
  stderr_lines: <omitted>
  stdout: |-
    {"baseType":"error","code":"NotUnique","fieldName":"Cluster name","message":"","status":422,"type":"error"}
    {"annotations":{},"baseType":"clusterRegistrationToken","clusterId":"c-cwfq5","command":"kubectl apply -f https://demo.cnrancher.com/v3/import/6w7nl5sn6sdxx69s6b877hnpjxvqkct8snc62rhgrcg6wjqzc952fd.yaml","created":"2020-05-07T10:09:14Z","createdTS":1588846154000,"creatorId":"user-592tz","id":"c-cwfq5:crt-gms25","insecureCommand":"curl --insecure -sfL https://demo.cnrancher.com/v3/import/6w7nl5sn6sdxx69s6b877hnpjxvqkct8snc62rhgrcg6wjqzc952fd.yaml | kubectl apply -f -","labels":{"cattle.io/creator":"norman"},"links":{"remove":"https://demo.cnrancher.com/v3/clusterRegistrationTokens/c-cwfq5:crt-gms25","self":"https://demo.cnrancher.com/v3/clusterRegistrationTokens/c-cwfq5:crt-gms25","update":"https://demo.cnrancher.com/v3/clusterRegistrationTokens/c-cwfq5:crt-gms25"},"manifestUrl":"https://demo.cnrancher.com/v3/import/6w7nl5sn6sdxx69s6b877hnpjxvqkct8snc62rhgrcg6wjqzc952fd.yaml","name":"crt-gms25","namespaceId":null,"nodeCommand":"sudo docker run -d --privileged --restart=unless-stopped --net=host -v /etc/kubernetes:/etc/kubernetes -v /var/run:/var/run rancher/rancher-agent:v2.3.7 --server https://demo.cnrancher.com --token 6w7nl5sn6sdxx69s6b877hnpjxvqkct8snc62rhgrcg6wjqzc952fd","state":"active","token":"6w7nl5sn6sdxx69s6b877hnpjxvqkct8snc62rhgrcg6wjqzc952fd","transitioning":"no","transitioningMessage":"","type":"clusterRegistrationToken","uuid":"407d7115-0b91-4b9c-ad64-512be32f6743","windowsNodeCommand":"PowerShell -NoLogo -NonInteractive -Command \"\u0026 {docker run -v c:/:c:/host rancher/rancher-agent:v2.3.7 bootstrap --server https://demo.cnrancher.com --token 6w7nl5sn6sdxx69s6b877hnpjxvqkct8snc62rhgrcg6wjqzc952fd | iex}\""}
  stdout_lines: <omitted>
2020-05-07 10:09:14,776 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:14,811 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 10:09:14,812 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'echo ~root && sleep 0'
2020-05-07 10:09:14,820 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir /root/.ansible/tmp/ansible-tmp-1588846154.819459-64-34273398916861 && echo ansible-tmp-1588846154.819459-64-34273398916861="` echo /root/.ansible/tmp/ansible-tmp-1588846154.819459-64-34273398916861 `" ) && sleep 0'
2020-05-07 10:09:14,862 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/stat.py
2020-05-07 10:09:14,863 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:09:14,865 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:09:15,080 p=1 u=root |  <127.0.0.1> PUT /root/.ansible/tmp/ansible-local-1noev89lr/tmpnk3hsk3n/node-register-command.sh.j2 TO /root/.ansible/tmp/ansible-tmp-1588846154.819459-64-34273398916861/source
2020-05-07 10:09:15,083 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1588846154.819459-64-34273398916861/ /root/.ansible/tmp/ansible-tmp-1588846154.819459-64-34273398916861/source && sleep 0'
2020-05-07 10:09:15,090 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/files/copy.py
2020-05-07 10:09:15,091 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:09:15,092 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:09:15,333 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1588846154.819459-64-34273398916861/ > /dev/null 2>&1 && sleep 0'
2020-05-07 10:09:15,343 p=1 u=root |  TASK [custom-k8s-cfg : 生成获取节点注册命令脚本] ********************************************************************************************************************************************************************************************************
2020-05-07 10:09:15,345 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:33
2020-05-07 10:09:15,351 p=1 u=root |  changed: [127.0.0.1] => changed=true 
  checksum: dc69ca5a7640e97142f1a6bea91c9e4a5fa41db4
  dest: /etc/ansible/cluster/custom-k8s/custom_dev1/node-register-command.sh
  diff: []
  gid: 0
  group: root
  invocation:
    module_args:
      _original_basename: node-register-command.sh.j2
      attributes: null
      backup: false
      checksum: dc69ca5a7640e97142f1a6bea91c9e4a5fa41db4
      content: null
      delimiter: null
      dest: /etc/ansible/cluster/custom-k8s/custom_dev1/node-register-command.sh
      directory_mode: null
      follow: false
      force: true
      group: null
      local_follow: null
      mode: null
      owner: null
      regexp: null
      remote_src: null
      selevel: null
      serole: null
      setype: null
      seuser: null
      src: /root/.ansible/tmp/ansible-tmp-1588846154.819459-64-34273398916861/source
      unsafe_writes: null
      validate: null
  md5sum: e99cecdf40bdc62ae662a0424581fb6c
  mode: '0644'
  owner: root
  size: 531
  src: /root/.ansible/tmp/ansible-tmp-1588846154.819459-64-34273398916861/source
  state: file
  uid: 0
2020-05-07 10:09:15,394 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:15,429 p=1 u=root |  Using module file /usr/lib/python3.7/site-packages/ansible/modules/commands/command.py
2020-05-07 10:09:15,430 p=1 u=root |  Pipelining is enabled.
2020-05-07 10:09:15,433 p=1 u=root |  <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: root
2020-05-07 10:09:15,434 p=1 u=root |  <127.0.0.1> EXEC /bin/sh -c '/usr/bin/python3 && sleep 0'
2020-05-07 10:09:16,078 p=1 u=root |  TASK [custom-k8s-cfg : 获取节点注册命令] ************************************************************************************************************************************************************************************************************
2020-05-07 10:09:16,079 p=1 u=root |  task path: /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml:40
2020-05-07 10:09:16,085 p=1 u=root |  changed: [127.0.0.1] => changed=true 
  cmd: 'bash /etc/ansible/cluster/custom-k8s/custom_dev1/node-register-command.sh '
  delta: '0:00:00.420119'
  end: '2020-05-07 10:09:16.060930'
  invocation:
    module_args:
      _raw_params: 'bash /etc/ansible/cluster/custom-k8s/custom_dev1/node-register-command.sh '
      _uses_shell: true
      argv: null
      chdir: null
      creates: null
      executable: null
      removes: null
      stdin: null
      stdin_add_newline: true
      strip_empty_ends: true
      warn: true
  rc: 0
  start: '2020-05-07 10:09:15.640811'
  stderr: ''
  stderr_lines: <omitted>
  stdout: |-
    sudo docker run -d --privileged --restart=unless-stopped --net=host -v /etc/kubernetes:/etc/kubernetes -v /var/run:/var/run rancher/rancher-agent:v2.3.7 --server https://demo.cnrancher.com --token 6w7nl5sn6sdxx69s6b877hnpjxvqkct8snc62rhgrcg6wjqzc952fd
    sudo docker run -d --privileged --restart=unless-stopped --net=host -v /etc/kubernetes:/etc/kubernetes -v /var/run:/var/run rancher/rancher-agent:v2.3.7 --server https://demo.cnrancher.com --token 45zcksv8c9k9ksd24jfpcwlc8mqxbbc27q9bzc84rchf88dzs6pm6m
  stdout_lines: <omitted>
2020-05-07 10:09:16,087 p=1 u=root |  META: ran handlers
2020-05-07 10:09:16,088 p=1 u=root |  META: ran handlers
2020-05-07 10:09:16,092 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:16,095 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:16,100 p=1 u=root |  Read vars_file '/etc/ansible/config/all.yaml'
2020-05-07 10:09:16,101 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:09:16,105 p=1 u=root |  META: ran handlers
2020-05-07 10:09:16,107 p=1 u=root |  META: ran handlers
2020-05-07 10:09:16,109 p=1 u=root |  META: ran handlers
2020-05-07 10:09:16,111 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:09:16,112 p=1 u=root |  127.0.0.1                  : ok=6    changed=5    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-05-07 10:14:00,506 p=1 u=root |  [WARNING]: While constructing a mapping from /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml, line 45, column 3, found a duplicate dict key (register). Using last defined value only.

2020-05-07 10:14:00,999 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:14:01,022 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:14:01,041 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:14:01,057 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:14:01,499 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 10:14:01,501 p=1 u=root |  ok: [127.0.0.1]
2020-05-07 10:14:01,964 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-05-07 10:14:01,966 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:14:02,773 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 10:14:02,774 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:14:03,947 p=1 u=root |  TASK [custom-k8s-cfg : 创建自定义集群 custom_dev1] *************************************************************************************************************************************************************************************************
2020-05-07 10:14:03,950 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:14:04,475 p=1 u=root |  TASK [custom-k8s-cfg : 生成获取节点注册命令脚本] ********************************************************************************************************************************************************************************************************
2020-05-07 10:14:04,477 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:14:05,174 p=1 u=root |  TASK [custom-k8s-cfg : 获取节点注册命令] ************************************************************************************************************************************************************************************************************
2020-05-07 10:14:05,175 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:14:05,188 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:14:05,195 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:14:05,196 p=1 u=root |  127.0.0.1                  : ok=6    changed=5    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-05-07 10:17:05,961 p=1 u=root |  [WARNING]: While constructing a mapping from /etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml, line 45, column 3, found a duplicate dict key (register). Using last defined value only.

2020-05-07 10:17:06,483 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:17:06,502 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:17:06,525 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:17:06,541 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:17:06,983 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 10:17:06,984 p=1 u=root |  ok: [127.0.0.1]
2020-05-07 10:17:07,608 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-05-07 10:17:07,610 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:17:08,533 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 10:17:08,534 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:17:12,702 p=1 u=root |  TASK [custom-k8s-cfg : 创建自定义集群 custom_dev1] *************************************************************************************************************************************************************************************************
2020-05-07 10:17:12,704 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:17:13,313 p=1 u=root |  TASK [custom-k8s-cfg : 生成获取节点注册命令脚本] ********************************************************************************************************************************************************************************************************
2020-05-07 10:17:13,315 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:17:15,993 p=1 u=root |  TASK [custom-k8s-cfg : 获取节点注册命令] ************************************************************************************************************************************************************************************************************
2020-05-07 10:17:15,997 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:17:16,018 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:17:16,026 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:17:16,027 p=1 u=root |  127.0.0.1                  : ok=6    changed=5    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-05-07 10:20:05,414 p=1 u=root |  ERROR! Syntax Error while loading YAML.
  found unacceptable key (unhashable type: 'AnsibleMapping')

The error appears to be in '/etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml': line 21, column 9, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

- debug:
  msg: {{ local_agent_token.stdout }}
        ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes. Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2020-05-07 10:22:43,154 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:22:43,179 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:22:43,201 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:22:43,217 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:22:43,651 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 10:22:43,653 p=1 u=root |  ok: [127.0.0.1]
2020-05-07 10:22:44,100 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-05-07 10:22:44,102 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:22:44,893 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 10:22:44,895 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:22:46,032 p=1 u=root |  TASK [custom-k8s-cfg : 创建自定义集群 custom_dev1] *************************************************************************************************************************************************************************************************
2020-05-07 10:22:46,034 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:22:46,572 p=1 u=root |  TASK [custom-k8s-cfg : 生成获取节点注册命令脚本] ********************************************************************************************************************************************************************************************************
2020-05-07 10:22:46,574 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:22:47,314 p=1 u=root |  TASK [custom-k8s-cfg : 获取节点注册命令] ************************************************************************************************************************************************************************************************************
2020-05-07 10:22:47,315 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:22:47,329 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:22:47,334 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:22:47,335 p=1 u=root |  127.0.0.1                  : ok=6    changed=5    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-05-07 10:22:59,372 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:22:59,391 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:22:59,414 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:22:59,432 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:22:59,861 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 10:22:59,863 p=1 u=root |  ok: [127.0.0.1]
2020-05-07 10:23:00,320 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-05-07 10:23:00,322 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:23:01,121 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 10:23:01,122 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:23:02,203 p=1 u=root |  TASK [custom-k8s-cfg : 创建自定义集群 custom_dev1] *************************************************************************************************************************************************************************************************
2020-05-07 10:23:02,206 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:23:02,750 p=1 u=root |  TASK [custom-k8s-cfg : 生成获取节点注册命令脚本] ********************************************************************************************************************************************************************************************************
2020-05-07 10:23:02,751 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:23:03,478 p=1 u=root |  TASK [custom-k8s-cfg : 获取节点注册命令] ************************************************************************************************************************************************************************************************************
2020-05-07 10:23:03,480 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:23:03,498 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:23:03,509 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:23:03,510 p=1 u=root |  127.0.0.1                  : ok=6    changed=5    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2020-05-07 10:23:50,853 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:23:50,875 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:23:50,899 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:23:50,914 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:23:51,361 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 10:23:51,363 p=1 u=root |  ok: [127.0.0.1]
2020-05-07 10:23:51,810 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-05-07 10:23:51,812 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:23:51,940 p=1 u=root |  TASK [custom-k8s-cfg : 获取 local 集群 agent token debug] ***************************************************************************************************************************************************************************************
2020-05-07 10:23:51,944 p=1 u=root |  fatal: [127.0.0.1]: FAILED! => 
  msg: |-
    The task includes an option with an undefined variable. The error was: 'dict object' has no attribute 'stdout'
  
    The error appears to be in '/etc/ansible/roles/custom-k8s-cfg/tasks/main.yaml': line 20, column 3, but may
    be elsewhere in the file depending on the exact syntax problem.
  
    The offending line appears to be:
  
      when: custom_k8s_dir_stat_result.stat.exists == False and (custom_rancher_api_key is defined and custom_rancher_api_key|length == 0) or custom_rancher_api_key is not defined
    - name:  local  agent token debug
      ^ here
2020-05-07 10:23:51,947 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:23:51,949 p=1 u=root |  127.0.0.1                  : ok=2    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2020-05-07 10:24:52,847 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:24:52,868 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:24:52,890 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:24:52,905 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:24:53,357 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 10:24:53,360 p=1 u=root |  ok: [127.0.0.1]
2020-05-07 10:24:53,814 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-05-07 10:24:53,815 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:24:54,681 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 10:24:54,684 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:24:56,008 p=1 u=root |  TASK [custom-k8s-cfg : 创建自定义集群 custom_dev1] *************************************************************************************************************************************************************************************************
2020-05-07 10:24:56,010 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:24:56,077 p=1 u=root |  TASK [custom-k8s-cfg : 创建自定义集群 custom_dev1 debug] *******************************************************************************************************************************************************************************************
2020-05-07 10:24:56,083 p=1 u=root |  ok: [127.0.0.1] => 
  msg: |-
    {"baseType":"error","code":"NotUnique","fieldName":"Cluster name","message":"","status":422,"type":"error"}
    {"annotations":{},"baseType":"clusterRegistrationToken","clusterId":"c-kczs4","command":"kubectl apply -f https://demo.cnrancher.com/v3/import/ll9s4wjfkkh2mjj2hr62cqtfcwclbm6hqm862cn7qsnpnjxvc2h49v.yaml","created":"2020-05-07T10:24:55Z","createdTS":1588847095000,"creatorId":"user-592tz","id":"c-kczs4:crt-w4glz","insecureCommand":"curl --insecure -sfL https://demo.cnrancher.com/v3/import/ll9s4wjfkkh2mjj2hr62cqtfcwclbm6hqm862cn7qsnpnjxvc2h49v.yaml | kubectl apply -f -","labels":{"cattle.io/creator":"norman"},"links":{"remove":"https://demo.cnrancher.com/v3/clusterRegistrationTokens/c-kczs4:crt-w4glz","self":"https://demo.cnrancher.com/v3/clusterRegistrationTokens/c-kczs4:crt-w4glz","update":"https://demo.cnrancher.com/v3/clusterRegistrationTokens/c-kczs4:crt-w4glz"},"manifestUrl":"https://demo.cnrancher.com/v3/import/ll9s4wjfkkh2mjj2hr62cqtfcwclbm6hqm862cn7qsnpnjxvc2h49v.yaml","name":"crt-w4glz","namespaceId":null,"nodeCommand":"sudo docker run -d --privileged --restart=unless-stopped --net=host -v /etc/kubernetes:/etc/kubernetes -v /var/run:/var/run rancher/rancher-agent:v2.3.7 --server https://demo.cnrancher.com --token ll9s4wjfkkh2mjj2hr62cqtfcwclbm6hqm862cn7qsnpnjxvc2h49v","state":"active","token":"ll9s4wjfkkh2mjj2hr62cqtfcwclbm6hqm862cn7qsnpnjxvc2h49v","transitioning":"no","transitioningMessage":"","type":"clusterRegistrationToken","uuid":"59f4c107-c396-4758-8918-6452d428aa10","windowsNodeCommand":"PowerShell -NoLogo -NonInteractive -Command \"\u0026 {docker run -v c:/:c:/host rancher/rancher-agent:v2.3.7 bootstrap --server https://demo.cnrancher.com --token ll9s4wjfkkh2mjj2hr62cqtfcwclbm6hqm862cn7qsnpnjxvc2h49v | iex}\""}
2020-05-07 10:24:56,605 p=1 u=root |  TASK [custom-k8s-cfg : 生成获取节点注册命令脚本] ********************************************************************************************************************************************************************************************************
2020-05-07 10:24:56,606 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:24:57,320 p=1 u=root |  TASK [custom-k8s-cfg : 获取节点注册命令] ************************************************************************************************************************************************************************************************************
2020-05-07 10:24:57,322 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:24:57,385 p=1 u=root |  TASK [custom-k8s-cfg : 获取节点注册命令 debug] ******************************************************************************************************************************************************************************************************
2020-05-07 10:24:57,393 p=1 u=root |  ok: [127.0.0.1] => 
  msg: |-
    sudo docker run -d --privileged --restart=unless-stopped --net=host -v /etc/kubernetes:/etc/kubernetes -v /var/run:/var/run rancher/rancher-agent:v2.3.7 --server https://demo.cnrancher.com --token cm4sqnvgnlg2msxs7xc5lxbdhgvgs7n8flkht9x7jhv8c72c97q9sv
    sudo docker run -d --privileged --restart=unless-stopped --net=host -v /etc/kubernetes:/etc/kubernetes -v /var/run:/var/run rancher/rancher-agent:v2.3.7 --server https://demo.cnrancher.com --token s2rh9zc2j46d2qxrbvq9ftt5b56zfp6v95ls9wfjh5pmgljsm49kqh
    sudo docker run -d --privileged --restart=unless-stopped --net=host -v /etc/kubernetes:/etc/kubernetes -v /var/run:/var/run rancher/rancher-agent:v2.3.7 --server https://demo.cnrancher.com --token crl5bg4b4h2rx7fk9bbd7bmh4952llccw9c4rblsvfj47qlfw7plkf
    sudo docker run -d --privileged --restart=unless-stopped --net=host -v /etc/kubernetes:/etc/kubernetes -v /var/run:/var/run rancher/rancher-agent:v2.3.7 --server https://demo.cnrancher.com --token ll9s4wjfkkh2mjj2hr62cqtfcwclbm6hqm862cn7qsnpnjxvc2h49v
2020-05-07 10:24:57,407 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:24:57,420 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:24:57,422 p=1 u=root |  127.0.0.1                  : ok=8    changed=5    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2020-05-07 10:44:16,785 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:44:16,812 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:44:16,832 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:44:16,849 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 10:44:17,302 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 10:44:17,304 p=1 u=root |  ok: [127.0.0.1]
2020-05-07 10:44:17,768 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-05-07 10:44:17,770 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:44:18,702 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 10:44:18,705 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:44:19,986 p=1 u=root |  TASK [custom-k8s-cfg : 创建自定义集群 custom_dev1] *************************************************************************************************************************************************************************************************
2020-05-07 10:44:19,988 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:44:20,059 p=1 u=root |  TASK [custom-k8s-cfg : 创建自定义集群 custom_dev1 debug] *******************************************************************************************************************************************************************************************
2020-05-07 10:44:20,086 p=1 u=root |  ok: [127.0.0.1] => 
  msg: |-
    {"actions":{"backupEtcd":"https://demo.cnrancher.com/v3/clusters/c-rjjl6?action=backupEtcd","enableMonitoring":"https://demo.cnrancher.com/v3/clusters/c-rjjl6?action=enableMonitoring","exportYaml":"https://demo.cnrancher.com/v3/clusters/c-rjjl6?action=exportYaml","generateKubeconfig":"https://demo.cnrancher.com/v3/clusters/c-rjjl6?action=generateKubeconfig","importYaml":"https://demo.cnrancher.com/v3/clusters/c-rjjl6?action=importYaml","restoreFromEtcdBackup":"https://demo.cnrancher.com/v3/clusters/c-rjjl6?action=restoreFromEtcdBackup","rotateCertificates":"https://demo.cnrancher.com/v3/clusters/c-rjjl6?action=rotateCertificates","runSecurityScan":"https://demo.cnrancher.com/v3/clusters/c-rjjl6?action=runSecurityScan","saveAsTemplate":"https://demo.cnrancher.com/v3/clusters/c-rjjl6?action=saveAsTemplate"},"amazonElasticContainerServiceConfig":null,"annotations":{},"appliedEnableNetworkPolicy":false,"azureKubernetesServiceConfig":null,"baseType":"cluster","clusterTemplateId":null,"clusterTemplateRevisionId":null,"conditions":[{"status":"True","type":"Pending"},{"status":"Unknown","type":"Provisioned"},{"status":"Unknown","type":"Waiting"}],"created":"2020-05-07T10:44:19Z","createdTS":1588848259000,"creatorId":"user-592tz","defaultClusterRoleForProjectMembers":null,"defaultPodSecurityPolicyTemplateId":null,"dockerRootDir":"/var/lib/docker","enableClusterAlerting":false,"enableClusterMonitoring":false,"enableNetworkPolicy":false,"googleKubernetesEngineConfig":null,"id":"c-rjjl6","internal":false,"istioEnabled":false,"labels":{"cattle.io/creator":"norman"},"links":{"apiServices":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/apiservices","clusterAlertGroups":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/clusteralertgroups","clusterAlertRules":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/clusteralertrules","clusterAlerts":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/clusteralerts","clusterCatalogs":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/clustercatalogs","clusterLoggings":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/clusterloggings","clusterMonitorGraphs":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/clustermonitorgraphs","clusterRegistrationTokens":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/clusterregistrationtokens","clusterRoleTemplateBindings":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/clusterroletemplatebindings","clusterScans":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/clusterscans","etcdBackups":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/etcdbackups","namespaces":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/namespaces","nodePools":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/nodepools","nodes":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/nodes","notifiers":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/notifiers","persistentVolumes":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/persistentvolumes","projects":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/projects","remove":"https://demo.cnrancher.com/v3/clusters/c-rjjl6","self":"https://demo.cnrancher.com/v3/clusters/c-rjjl6","shell":"wss://demo.cnrancher.com/v3/clusters/c-rjjl6?shell=true","storageClasses":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/storageclasses","subscribe":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/subscribe","templates":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/templates","tokens":"https://demo.cnrancher.com/v3/clusters/c-rjjl6/tokens","update":"https://demo.cnrancher.com/v3/clusters/c-rjjl6"},"localClusterAuthEndpoint":{"enabled":true,"type":"/v3/schemas/localClusterAuthEndpoint"},"name":"custom-dev1","rancherKubernetesEngineConfig":{"addonJobTimeout":30,"authentication":{"strategy":"x509|webhook","type":"/v3/schemas/authnConfig"},"authorization":{"type":"/v3/schemas/authzConfig"},"bastionHost":{"sshAgentAuth":false,"type":"/v3/schemas/bastionHost"},"cloudProvider":{"type":"/v3/schemas/cloudProvider"},"ignoreDockerVersion":true,"ingress":{"provider":"nginx","type":"/v3/schemas/ingressConfig"},"kubernetesVersion":"v1.17.5-rancher1-1","monitoring":{"provider":"metrics-server","type":"/v3/schemas/monitoringConfig"},"network":{"mtu":1450,"options":{"flannel_backend_type":"vxlan"},"plugin":"canal","type":"/v3/schemas/networkConfig"},"restore":{"restore":false,"type":"/v3/schemas/restoreConfig"},"services":{"etcd":{"backupConfig":{"enabled":true,"intervalHours":12,"retention":6,"s3BackupConfig":null,"safeTimestamp":false,"type":"/v3/schemas/backupConfig"},"creation":"12h","extraArgs":{"auto-compaction-retention":"240","election-timeout":"5000","heartbeat-interval":"500","quota-backend-bytes":"6442450944"},"gid":0,"retention":"72h","snapshot":false,"type":"/v3/schemas/etcdService","uid":0},"kubeApi":{"alwaysPullImages":false,"podSecurityPolicy":false,"serviceNodePortRange":"30000-32767","type":"/v3/schemas/kubeAPIService"},"kubeController":{"extraArgs":{"node-monitor-grace-period":"20s","node-monitor-period":"5s","node-startup-grace-period":"30s","pod-eviction-timeout":"1m"},"type":"/v3/schemas/kubeControllerService"},"kubelet":{"extraArgs":{"eviction-hard":"memory.available\u003c300Mi,nodefs.available\u003c10%,imagefs.available\u003c15%,nodefs.inodesFree\u003c5%","kube-api-burst":"30","kube-api-qps":"15","kube-reserved":"memory=250Mi","max-open-files":"2000000","max-pods":"250","network-plugin-mtu":"1500","pod-infra-container-image":"rancher/pause:3.1","registry-burst":"10","registry-qps":"0","serialize-image-pulls":"false","sync-frequency":"3s","system-reserved":"memory=250Mi"},"failSwapOn":false,"generateServingCertificate":false,"type":"/v3/schemas/kubeletService"},"kubeproxy":{"type":"/v3/schemas/kubeproxyService"},"scheduler":{"type":"/v3/schemas/schedulerService"},"type":"/v3/schemas/rkeConfigServices"},"sshAgentAuth":false,"type":"/v3/schemas/rancherKubernetesEngineConfig"},"state":"provisioning","transitioning":"yes","transitioningMessage":"","type":"cluster","uuid":"1e945b90-1e04-4c27-9fa9-ae42c75e3ea8","windowsPreferedCluster":false}
    {"annotations":{},"baseType":"clusterRegistrationToken","clusterId":"c-rjjl6","command":"kubectl apply -f https://demo.cnrancher.com/v3/import/wjdmsfpzjcnwpjlzs8gjrrl5vm7mgbgfns2s6plktqv2gwwjtb8jf5.yaml","created":"2020-05-07T10:44:19Z","createdTS":1588848259000,"creatorId":"user-592tz","id":"c-rjjl6:crt-2xn8n","insecureCommand":"curl --insecure -sfL https://demo.cnrancher.com/v3/import/wjdmsfpzjcnwpjlzs8gjrrl5vm7mgbgfns2s6plktqv2gwwjtb8jf5.yaml | kubectl apply -f -","labels":{"cattle.io/creator":"norman"},"links":{"remove":"https://demo.cnrancher.com/v3/clusterRegistrationTokens/c-rjjl6:crt-2xn8n","self":"https://demo.cnrancher.com/v3/clusterRegistrationTokens/c-rjjl6:crt-2xn8n","update":"https://demo.cnrancher.com/v3/clusterRegistrationTokens/c-rjjl6:crt-2xn8n"},"manifestUrl":"https://demo.cnrancher.com/v3/import/wjdmsfpzjcnwpjlzs8gjrrl5vm7mgbgfns2s6plktqv2gwwjtb8jf5.yaml","name":"crt-2xn8n","namespaceId":null,"nodeCommand":"sudo docker run -d --privileged --restart=unless-stopped --net=host -v /etc/kubernetes:/etc/kubernetes -v /var/run:/var/run rancher/rancher-agent:v2.3.7 --server https://demo.cnrancher.com --token wjdmsfpzjcnwpjlzs8gjrrl5vm7mgbgfns2s6plktqv2gwwjtb8jf5","state":"active","token":"wjdmsfpzjcnwpjlzs8gjrrl5vm7mgbgfns2s6plktqv2gwwjtb8jf5","transitioning":"no","transitioningMessage":"","type":"clusterRegistrationToken","uuid":"4e1084a1-ef40-401e-9af7-164f46784ff1","windowsNodeCommand":"PowerShell -NoLogo -NonInteractive -Command \"\u0026 {docker run -v c:/:c:/host rancher/rancher-agent:v2.3.7 bootstrap --server https://demo.cnrancher.com --token wjdmsfpzjcnwpjlzs8gjrrl5vm7mgbgfns2s6plktqv2gwwjtb8jf5 | iex}\""}
2020-05-07 10:44:20,686 p=1 u=root |  TASK [custom-k8s-cfg : 生成获取节点注册命令脚本] ********************************************************************************************************************************************************************************************************
2020-05-07 10:44:20,687 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:44:21,609 p=1 u=root |  TASK [custom-k8s-cfg : 获取节点注册命令] ************************************************************************************************************************************************************************************************************
2020-05-07 10:44:21,610 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 10:44:21,677 p=1 u=root |  TASK [custom-k8s-cfg : 获取节点注册命令 debug] ******************************************************************************************************************************************************************************************************
2020-05-07 10:44:21,681 p=1 u=root |  ok: [127.0.0.1] => 
  msg: sudo docker run -d --privileged --restart=unless-stopped --net=host -v /etc/kubernetes:/etc/kubernetes -v /var/run:/var/run rancher/rancher-agent:v2.3.7 --server https://demo.cnrancher.com --token wjdmsfpzjcnwpjlzs8gjrrl5vm7mgbgfns2s6plktqv2gwwjtb8jf5
2020-05-07 10:44:21,710 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 10:44:21,720 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 10:44:21,721 p=1 u=root |  127.0.0.1                  : ok=8    changed=5    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2020-05-07 11:00:14,529 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 11:00:14,552 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 11:00:14,577 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 11:00:14,592 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 11:00:14,611 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 11:00:14,987 p=1 u=root |  TASK [custom-k8s : 拷贝注册命令到节点] ***************************************************************************************************************************************************************************************************************
2020-05-07 11:00:14,990 p=1 u=root |  fatal: [192.168.50.119]: FAILED! => changed=false 
  msg: 'AnsibleUndefinedVariable: ''node_register_command'' is undefined'
2020-05-07 11:00:14,992 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 11:00:14,993 p=1 u=root |  192.168.50.119             : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2020-05-07 11:01:34,277 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 11:01:34,300 p=1 u=root |  PLAY [all] **********************************************************************************************************************************************************************************************************************************
2020-05-07 11:01:34,325 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 11:01:35,492 p=1 u=root |  TASK [init : 拷贝模块加载脚本到节点] *******************************************************************************************************************************************************************************************************************
2020-05-07 11:01:35,494 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/load-mod.sh.j2', 'dest': '/etc/profile.d/load-mod.sh'})
2020-05-07 11:01:36,041 p=1 u=root |  TASK [init : 拷贝节点清理脚本到节点] *******************************************************************************************************************************************************************************************************************
2020-05-07 11:01:36,045 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_clean.sh.j2', 'dest': '/tmp/node_clean.sh'})
2020-05-07 11:01:37,017 p=1 u=root |  TASK [init : 拷贝节点配置初始化脚本到节点] ****************************************************************************************************************************************************************************************************************
2020-05-07 11:01:37,020 p=1 u=root |  changed: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/node_init.sh.j2', 'dest': '/tmp/node_init.sh'})
2020-05-07 11:01:37,548 p=1 u=root |  TASK [init : 拷贝Docker配置初始化脚本到节点] ************************************************************************************************************************************************************************************************************
2020-05-07 11:01:37,550 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/etc/ansible/roles/init/templates/docker_init.sh.j2', 'dest': '/tmp/docker_init.sh'})
2020-05-07 11:01:38,058 p=1 u=root |  TASK [init : adjust default sysctl values] **************************************************************************************************************************************************************************************************
2020-05-07 11:01:38,059 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2020-05-07 11:01:38,258 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2020-05-07 11:01:38,458 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.tcp_syncookies', 'value': 1})
2020-05-07 11:01:38,673 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv4.ip_forward', 'value': 1})
2020-05-07 11:01:38,881 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.ipv6.conf.all.forwarding', 'value': 1})
2020-05-07 11:01:39,122 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2020-05-07 11:01:39,412 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2020-05-07 11:01:39,667 p=1 u=root |  ok: [192.168.50.119] => (item={'name': 'fs.inotify.max_user_watches', 'value': 1048576})
2020-05-07 11:01:51,212 p=1 u=root |  TASK [init : Node 配置初始化] ********************************************************************************************************************************************************************************************************************
2020-05-07 11:01:51,216 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_init.sh)
2020-05-07 11:01:51,817 p=1 u=root |  TASK [init : 加载系统内核模块] **********************************************************************************************************************************************************************************************************************
2020-05-07 11:01:51,819 p=1 u=root |  changed: [192.168.50.119] => (item=/etc/profile.d/load-mod.sh)
2020-05-07 11:01:56,107 p=1 u=root |  TASK [init : Docker 配置初始化] ******************************************************************************************************************************************************************************************************************
2020-05-07 11:01:56,109 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/docker_init.sh)
2020-05-07 11:01:57,029 p=1 u=root |  TASK [init : Node 残留清理] *********************************************************************************************************************************************************************************************************************
2020-05-07 11:01:57,030 p=1 u=root |  changed: [192.168.50.119] => (item=/tmp/node_clean.sh)
2020-05-07 11:01:58,845 p=1 u=root |  TASK [init : 拷贝Kubectl到节点] ******************************************************************************************************************************************************************************************************************
2020-05-07 11:01:58,846 p=1 u=root |  ok: [192.168.50.119] => (item={'src': '/usr/local/bin/kubectl', 'dest': '/usr/local/bin/kubectl'})
2020-05-07 11:01:58,857 p=1 u=root |  PLAY [127.0.0.1] ****************************************************************************************************************************************************************************************************************************
2020-05-07 11:01:59,153 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在] *********************************************************************************************************************************************************************************************
2020-05-07 11:01:59,155 p=1 u=root |  ok: [127.0.0.1]
2020-05-07 11:01:59,437 p=1 u=root |  TASK [custom-k8s-cfg : 检查 custom_dev1 集群目录是否存在，如果存在则跳过] *************************************************************************************************************************************************************************************
2020-05-07 11:01:59,439 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 11:02:00,202 p=1 u=root |  TASK [custom-k8s-cfg : 生成创建集群脚本] ************************************************************************************************************************************************************************************************************
2020-05-07 11:02:00,203 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 11:02:01,260 p=1 u=root |  TASK [custom-k8s-cfg : 创建自定义集群 custom_dev1] *************************************************************************************************************************************************************************************************
2020-05-07 11:02:01,261 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 11:02:01,334 p=1 u=root |  TASK [custom-k8s-cfg : 创建自定义集群 custom_dev1 debug] *******************************************************************************************************************************************************************************************
2020-05-07 11:02:01,364 p=1 u=root |  ok: [127.0.0.1] => 
  msg: |-
    {"actions":{"backupEtcd":"https://demo.cnrancher.com/v3/clusters/c-thls9?action=backupEtcd","enableMonitoring":"https://demo.cnrancher.com/v3/clusters/c-thls9?action=enableMonitoring","exportYaml":"https://demo.cnrancher.com/v3/clusters/c-thls9?action=exportYaml","generateKubeconfig":"https://demo.cnrancher.com/v3/clusters/c-thls9?action=generateKubeconfig","importYaml":"https://demo.cnrancher.com/v3/clusters/c-thls9?action=importYaml","restoreFromEtcdBackup":"https://demo.cnrancher.com/v3/clusters/c-thls9?action=restoreFromEtcdBackup","rotateCertificates":"https://demo.cnrancher.com/v3/clusters/c-thls9?action=rotateCertificates","runSecurityScan":"https://demo.cnrancher.com/v3/clusters/c-thls9?action=runSecurityScan","saveAsTemplate":"https://demo.cnrancher.com/v3/clusters/c-thls9?action=saveAsTemplate"},"amazonElasticContainerServiceConfig":null,"annotations":{},"appliedEnableNetworkPolicy":false,"azureKubernetesServiceConfig":null,"baseType":"cluster","clusterTemplateId":null,"clusterTemplateRevisionId":null,"conditions":[{"status":"True","type":"Pending"},{"status":"Unknown","type":"Provisioned"},{"status":"Unknown","type":"Waiting"}],"created":"2020-05-07T11:02:00Z","createdTS":1588849320000,"creatorId":"user-592tz","defaultClusterRoleForProjectMembers":null,"defaultPodSecurityPolicyTemplateId":null,"dockerRootDir":"/var/lib/docker","enableClusterAlerting":false,"enableClusterMonitoring":false,"enableNetworkPolicy":false,"googleKubernetesEngineConfig":null,"id":"c-thls9","internal":false,"istioEnabled":false,"labels":{"cattle.io/creator":"norman"},"links":{"apiServices":"https://demo.cnrancher.com/v3/clusters/c-thls9/apiservices","clusterAlertGroups":"https://demo.cnrancher.com/v3/clusters/c-thls9/clusteralertgroups","clusterAlertRules":"https://demo.cnrancher.com/v3/clusters/c-thls9/clusteralertrules","clusterAlerts":"https://demo.cnrancher.com/v3/clusters/c-thls9/clusteralerts","clusterCatalogs":"https://demo.cnrancher.com/v3/clusters/c-thls9/clustercatalogs","clusterLoggings":"https://demo.cnrancher.com/v3/clusters/c-thls9/clusterloggings","clusterMonitorGraphs":"https://demo.cnrancher.com/v3/clusters/c-thls9/clustermonitorgraphs","clusterRegistrationTokens":"https://demo.cnrancher.com/v3/clusters/c-thls9/clusterregistrationtokens","clusterRoleTemplateBindings":"https://demo.cnrancher.com/v3/clusters/c-thls9/clusterroletemplatebindings","clusterScans":"https://demo.cnrancher.com/v3/clusters/c-thls9/clusterscans","etcdBackups":"https://demo.cnrancher.com/v3/clusters/c-thls9/etcdbackups","namespaces":"https://demo.cnrancher.com/v3/clusters/c-thls9/namespaces","nodePools":"https://demo.cnrancher.com/v3/clusters/c-thls9/nodepools","nodes":"https://demo.cnrancher.com/v3/clusters/c-thls9/nodes","notifiers":"https://demo.cnrancher.com/v3/clusters/c-thls9/notifiers","persistentVolumes":"https://demo.cnrancher.com/v3/clusters/c-thls9/persistentvolumes","projects":"https://demo.cnrancher.com/v3/clusters/c-thls9/projects","remove":"https://demo.cnrancher.com/v3/clusters/c-thls9","self":"https://demo.cnrancher.com/v3/clusters/c-thls9","shell":"wss://demo.cnrancher.com/v3/clusters/c-thls9?shell=true","storageClasses":"https://demo.cnrancher.com/v3/clusters/c-thls9/storageclasses","subscribe":"https://demo.cnrancher.com/v3/clusters/c-thls9/subscribe","templates":"https://demo.cnrancher.com/v3/clusters/c-thls9/templates","tokens":"https://demo.cnrancher.com/v3/clusters/c-thls9/tokens","update":"https://demo.cnrancher.com/v3/clusters/c-thls9"},"localClusterAuthEndpoint":{"enabled":true,"type":"/v3/schemas/localClusterAuthEndpoint"},"name":"custom-dev1","rancherKubernetesEngineConfig":{"addonJobTimeout":30,"authentication":{"strategy":"x509|webhook","type":"/v3/schemas/authnConfig"},"authorization":{"type":"/v3/schemas/authzConfig"},"bastionHost":{"sshAgentAuth":false,"type":"/v3/schemas/bastionHost"},"cloudProvider":{"type":"/v3/schemas/cloudProvider"},"ignoreDockerVersion":true,"ingress":{"provider":"nginx","type":"/v3/schemas/ingressConfig"},"kubernetesVersion":"v1.17.5-rancher1-1","monitoring":{"provider":"metrics-server","type":"/v3/schemas/monitoringConfig"},"network":{"mtu":1450,"options":{"flannel_backend_type":"vxlan"},"plugin":"canal","type":"/v3/schemas/networkConfig"},"restore":{"restore":false,"type":"/v3/schemas/restoreConfig"},"services":{"etcd":{"backupConfig":{"enabled":true,"intervalHours":12,"retention":6,"s3BackupConfig":null,"safeTimestamp":false,"type":"/v3/schemas/backupConfig"},"creation":"12h","extraArgs":{"auto-compaction-retention":"240","election-timeout":"5000","heartbeat-interval":"500","quota-backend-bytes":"6442450944"},"gid":0,"retention":"72h","snapshot":false,"type":"/v3/schemas/etcdService","uid":0},"kubeApi":{"alwaysPullImages":false,"podSecurityPolicy":false,"serviceNodePortRange":"30000-32767","type":"/v3/schemas/kubeAPIService"},"kubeController":{"extraArgs":{"node-monitor-grace-period":"20s","node-monitor-period":"5s","node-startup-grace-period":"30s","pod-eviction-timeout":"1m"},"type":"/v3/schemas/kubeControllerService"},"kubelet":{"extraArgs":{"eviction-hard":"memory.available\u003c300Mi,nodefs.available\u003c10%,imagefs.available\u003c15%,nodefs.inodesFree\u003c5%","kube-api-burst":"30","kube-api-qps":"15","kube-reserved":"memory=250Mi","max-open-files":"2000000","max-pods":"250","network-plugin-mtu":"1500","pod-infra-container-image":"rancher/pause:3.1","registry-burst":"10","registry-qps":"0","serialize-image-pulls":"false","sync-frequency":"3s","system-reserved":"memory=250Mi"},"failSwapOn":false,"generateServingCertificate":false,"type":"/v3/schemas/kubeletService"},"kubeproxy":{"type":"/v3/schemas/kubeproxyService"},"scheduler":{"type":"/v3/schemas/schedulerService"},"type":"/v3/schemas/rkeConfigServices"},"sshAgentAuth":false,"type":"/v3/schemas/rancherKubernetesEngineConfig"},"state":"provisioning","transitioning":"yes","transitioningMessage":"","type":"cluster","uuid":"9eb10314-d9d6-4107-aec6-3096880e4306","windowsPreferedCluster":false}
    {"annotations":{},"baseType":"clusterRegistrationToken","clusterId":"c-thls9","command":"kubectl apply -f https://demo.cnrancher.com/v3/import/ljgwkjr7c2cj6qw7fgmljh8clnmmd66jwcjv2qqss9nckl5s4lg9hr.yaml","created":"2020-05-07T11:02:01Z","createdTS":1588849321000,"creatorId":"user-592tz","id":"c-thls9:crt-pqlrr","insecureCommand":"curl --insecure -sfL https://demo.cnrancher.com/v3/import/ljgwkjr7c2cj6qw7fgmljh8clnmmd66jwcjv2qqss9nckl5s4lg9hr.yaml | kubectl apply -f -","labels":{"cattle.io/creator":"norman"},"links":{"remove":"https://demo.cnrancher.com/v3/clusterRegistrationTokens/c-thls9:crt-pqlrr","self":"https://demo.cnrancher.com/v3/clusterRegistrationTokens/c-thls9:crt-pqlrr","update":"https://demo.cnrancher.com/v3/clusterRegistrationTokens/c-thls9:crt-pqlrr"},"manifestUrl":"https://demo.cnrancher.com/v3/import/ljgwkjr7c2cj6qw7fgmljh8clnmmd66jwcjv2qqss9nckl5s4lg9hr.yaml","name":"crt-pqlrr","namespaceId":null,"nodeCommand":"sudo docker run -d --privileged --restart=unless-stopped --net=host -v /etc/kubernetes:/etc/kubernetes -v /var/run:/var/run rancher/rancher-agent:v2.3.7 --server https://demo.cnrancher.com --token ljgwkjr7c2cj6qw7fgmljh8clnmmd66jwcjv2qqss9nckl5s4lg9hr","state":"active","token":"ljgwkjr7c2cj6qw7fgmljh8clnmmd66jwcjv2qqss9nckl5s4lg9hr","transitioning":"no","transitioningMessage":"","type":"clusterRegistrationToken","uuid":"6cff9c49-5761-41c9-abd7-a290bd54e343","windowsNodeCommand":"PowerShell -NoLogo -NonInteractive -Command \"\u0026 {docker run -v c:/:c:/host rancher/rancher-agent:v2.3.7 bootstrap --server https://demo.cnrancher.com --token ljgwkjr7c2cj6qw7fgmljh8clnmmd66jwcjv2qqss9nckl5s4lg9hr | iex}\""}
2020-05-07 11:02:02,060 p=1 u=root |  TASK [custom-k8s-cfg : 生成获取节点注册命令脚本] ********************************************************************************************************************************************************************************************************
2020-05-07 11:02:02,062 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 11:02:03,883 p=1 u=root |  TASK [custom-k8s-cfg : 获取节点注册命令] ************************************************************************************************************************************************************************************************************
2020-05-07 11:02:03,884 p=1 u=root |  changed: [127.0.0.1]
2020-05-07 11:02:03,953 p=1 u=root |  TASK [custom-k8s-cfg : 获取节点注册命令 debug] ******************************************************************************************************************************************************************************************************
2020-05-07 11:02:03,956 p=1 u=root |  ok: [127.0.0.1] => 
  msg: sudo docker run -d --privileged --restart=unless-stopped --net=host -v /etc/kubernetes:/etc/kubernetes -v /var/run:/var/run rancher/rancher-agent:v2.3.7 --server https://demo.cnrancher.com --token ljgwkjr7c2cj6qw7fgmljh8clnmmd66jwcjv2qqss9nckl5s4lg9hr
2020-05-07 11:02:03,973 p=1 u=root |  PLAY [custom_dev1] **************************************************************************************************************************************************************************************************************************
2020-05-07 11:02:04,145 p=1 u=root |  TASK [custom-k8s : 拷贝注册命令到节点] ***************************************************************************************************************************************************************************************************************
2020-05-07 11:02:04,147 p=1 u=root |  fatal: [192.168.50.119]: FAILED! => changed=false 
  msg: 'AnsibleUndefinedVariable: ''node_register_command'' is undefined'
2020-05-07 11:02:04,149 p=1 u=root |  PLAY RECAP **********************************************************************************************************************************************************************************************************************************
2020-05-07 11:02:04,150 p=1 u=root |  127.0.0.1                  : ok=8    changed=5    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2020-05-07 11:02:04,151 p=1 u=root |  192.168.50.119             : ok=10   changed=5    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
